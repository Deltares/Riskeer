<!--
Copyright (C) Stichting Deltares 2021. All rights reserved.

This file is part of Riskeer.

Riskeer is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

All names, logos, and references to "Deltares" are registered trademarks of
Stichting Deltares and remain full property of Stichting Deltares at all times.
All rights reserved.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DeltaresButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BackstageButtonStyle" TargetType="{x:Type ButtonBase}"
       BasedOn="{StaticResource DeltaresButtonStyle}">
        <Setter Property="Height" Value="38" />
        <Setter Property="Width" Value="139" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Padding" Value="25 0 15 0" />
    
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DeltaresDarkerBlueBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource WhiteOverlayBrush}" />
            </Trigger>
    
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                            Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                            Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource WhiteOverlayBrush}" />
            </MultiDataTrigger>
    
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                            Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                            Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource DarkOverlayBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="BackstageBackButtonStyle" TargetType="{x:Type Button}"
           BasedOn="{StaticResource BackstageButtonStyle}">
    <Setter Property="Padding" Value="22 3 0 -3" />
    <Setter Property="Margin" Value="0 15" />
    
    <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Foreground" Value="{StaticResource WhiteOverlayBrush}" />
            <Setter Property="Background" Value="{StaticResource DeltaresBlueBrush}" />
        </Trigger>
    
        <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
                <Condition
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
            </MultiDataTrigger.Conditions>
            <Setter Property="Background"
                    Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=NonActiveBorderBrush}" />
            <Setter Property="Foreground" Value="{StaticResource GrayBrush}" />
        </MultiDataTrigger>
    </Style.Triggers>
    </Style>
    
    <Style x:Key="BackstageToggleButtonStyle" TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource BackstageButtonStyle}">
    <Style.Triggers>
        <Trigger Property="IsChecked" Value="True">
            <Setter Property="Background" Value="{StaticResource WhiteOverlayBrush}" />
        </Trigger>
    
        <MultiDataTrigger>
            <MultiDataTrigger.Conditions>
                <Condition
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False" />
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
            </MultiDataTrigger.Conditions>
            <Setter Property="Background" Value="{StaticResource WhiteOverlayBrush}" />
        </MultiDataTrigger>
    </Style.Triggers>
    </Style>
    
    <Style x:Key="BackstageSeparatorStyle" TargetType="{x:Type Separator}"
           BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
        <Setter Property="Background" Value="{StaticResource WhiteOverlayBrush}" />
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="25 10" />
    </Style>
    
    <Style x:Key="HyperlinkStyle" TargetType="{x:Type Hyperlink}">
        <Setter Property="Foreground" Value="Blue"/>
        <Setter Property="TextDecorations" Value=""/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
                <Setter Property="Foreground" Value="SaddleBrown"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>