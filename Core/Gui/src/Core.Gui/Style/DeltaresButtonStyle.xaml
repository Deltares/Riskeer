<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="DeltaresGeneralStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ButtonIconStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{StaticResource RiskeerFont}" />
        <Setter Property="FontSize" Value="20" />
    </Style>

    <Style x:Key="ButtonLargeIconStyle" TargetType="{x:Type TextBlock}"
           BasedOn="{StaticResource ButtonIconStyle}">
        <Setter Property="FontSize" Value="32" />
    </Style>

    <Style x:Key="WindowCommandsButtonStyle" TargetType="{x:Type Button}"
           BasedOn="{StaticResource {x:Static metro:WindowCommands.ButtonStyleKey}}">
        <Setter Property="Background" Value="{StaticResource WindowTitleColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DeltaresDarkerBlueBrush}"/>
            </Trigger>

            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                Value="False">
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=NonActiveBorderBrush}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RiskeerButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{StaticResource WindowTitleColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource DeltaresDarkerBlueBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledButtonBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledButtonForegroundBrush}"/>
            </Trigger>

            <DataTrigger
                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                Value="False">
                <Setter Property="Background"
                        Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=NonActiveBorderBrush}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ViewStateBarButtonStyle" TargetType="{x:Type ButtonBase}"
           BasedOn="{StaticResource RiskeerButtonStyle}">
        <Setter Property="Width" Value="30"/>
        <Setter Property="Height" Value="30"/>
    </Style>

    <Style x:Key="RiskeerToggleButtonStyle" TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource RiskeerButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource DeltaresDarkerBlueBrush}" />
            </Trigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False" />
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource ButtonHoverBackgroundBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainButtonBarButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Padding" Value="0 6 0 0" />
        <Setter Property="Margin" Value="3 6 " />
        <Setter Property="MinWidth" Value="66" />
        <Setter Property="Height" Value="85" />
        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource TransparentBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter Grid.Row="0" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                            <Label Grid.Row="1" Content="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                   HorizontalAlignment="Center" Foreground="{TemplateBinding Foreground}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource MainButtonBarPressedButtonBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource MainButtonBarPressedButtonBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource MainButtonBarPressedButtonBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource MainButtonBarPressedButtonBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WindowTitleColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainButtonBarToggleButtonStyle" TargetType="{x:Type ToggleButton}"
           BasedOn="{StaticResource MainButtonBarButtonStyle}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{StaticResource MainButtonBarPressedButtonBackgroundBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource MainButtonBarPressedButtonBorderBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WindowTitleColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>