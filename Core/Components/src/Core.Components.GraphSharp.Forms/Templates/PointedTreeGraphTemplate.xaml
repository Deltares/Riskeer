<!--
Copyright (C) Stichting Deltares 2017. All rights reserved.

This file is part of Ringtoets.

Ringtoets is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

All names, logos, and references to "Deltares" are registered trademarks of
Stichting Deltares and remain full property of Stichting Deltares at all times.
All rights reserved.
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:graphSharpControls="clr-namespace:GraphSharp.Controls;assembly=GraphSharp.Controls" 
    xmlns:graphSharpConverters="clr-namespace:GraphSharp.Converters;assembly=GraphSharp.Controls"
    xmlns:wpfExtensionsAttachedBehaviours="clr-namespace:WPFExtensions.AttachedBehaviours;assembly=WPFExtensions"
    xmlns:wpfExtensionsControls="clr-namespace:WPFExtensions.Controls;assembly=WPFExtensions"
    xmlns:converters="clr-namespace:Core.Components.GraphSharp.Forms.Converters;assembly=Core.Components.GraphSharp.Forms"
    xmlns:extensions="clr-namespace:Core.Components.GraphSharp.Forms.Extensions;assembly=Core.Components.GraphSharp.Forms">

    <graphSharpConverters:EdgeRouteToPathConverter x:Key="RouteToPathConverter" />
    <converters:PointedTreeVertexTypeToStringConverter x:Key="PointedTreeVertexTypeToStringConverter" />

    <!-- VERTEX CONTROL -->
    <Style TargetType="{x:Type graphSharpControls:VertexControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Type, Converter={StaticResource PointedTreeVertexTypeToStringConverter}}" Value="Rectangle">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <Grid>
                                <Border Background="{Binding FillColor}" 
                                        CornerRadius="5,5,5,5"
                                        Padding="{TemplateBinding Padding}">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                    <Setter Property="BorderThickness" Value="3"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                                    <Setter Property="BorderBrush" Value="{Binding LineColor}"/>
                                                    <Setter Property="BorderThickness" Value="{Binding LineWidth}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel.InputBindings>
<!--                                            <MouseBinding Gesture="LeftClick" Command="{Binding VertexSelectedCommand}" />-->
                                        </StackPanel.InputBindings>
                                        <TextBlock extensions:TextBlockExtensions.FormattedText="{Binding Content}"
                                                   Width="Auto"
                                                   Height="Auto"
                                                   TextWrapping="Wrap"
                                                   VerticalAlignment="Center"
                                                   Margin="10,2,20,0"/>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Type, Converter={StaticResource PointedTreeVertexTypeToStringConverter}}" Value="Diamond">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type graphSharpControls:VertexControl}">
                            <Grid>
                                <TextBlock extensions:TextBlockExtensions.FormattedText="{Binding Content}"
                                           Margin="5"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding IsConnectingVertex}" Value="False">
                <Setter Property="Cursor" Value="Arrow" />
            </DataTrigger>-->
        </Style.Triggers>
        <Setter Property="wpfExtensionsAttachedBehaviours:DragBehaviour.IsDragEnabled" Value="False"/>
    </Style>

    <!-- EDGE CONTROL -->
    <Style TargetType="{x:Type graphSharpControls:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type graphSharpControls:EdgeControl}">
                    <Path Stroke="Black"
                          StrokeThickness="2"
                          MinWidth="1"
                          MinHeight="1"
                          x:Name="edgePath">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <MultiBinding Converter="{StaticResource RouteToPathConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.(graphSharpControls:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.(graphSharpControls:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Source.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.(graphSharpControls:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.(graphSharpControls:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Target.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="RoutePoints" />
                                    </MultiBinding>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="Silver" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <!-- Zoom control -->
    <Style TargetType="{x:Type wpfExtensionsControls:ZoomControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wpfExtensionsControls:ZoomControl}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
                            <wpfExtensionsControls:ZoomContentPresenter x:Name="PART_Presenter" ClipToBounds="False" />
                        </Border>
                        <Canvas>
                            <!-- ZoomBox -->
                            <Border BorderBrush="{TemplateBinding ZoomBoxBorderBrush}"
                                    BorderThickness="{TemplateBinding ZoomBoxBorderThickness}"
                                    Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.X}"
                                    Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Y}"
                                    Opacity="{TemplateBinding ZoomBoxOpacity}"
                                    Background="{TemplateBinding ZoomBoxBackground}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Width}"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Height}" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="White" />
        <Setter Property="Cursor" Value="Hand" />
    </Style>
</ResourceDictionary>