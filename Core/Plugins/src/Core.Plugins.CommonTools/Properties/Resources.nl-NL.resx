<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CommonToolsApplicationPlugin_Description" xml:space="preserve">
    <value>NL Plugin for common views and data.</value>
  </data>
  <data name="Category_General" xml:space="preserve">
    <value>NL General</value>
  </data>
  <data name="Category_State" xml:space="preserve">
    <value>NL State</value>
  </data>
  <data name="CommonToolsApplicationPlugin_DisplayName_Delta_Shell_Common_Tools_Plugin" xml:space="preserve">
    <value>NL Delta Shell Common Tools Plugin</value>
  </data>
  <data name="CommonToolsApplicationPlugin_GetDataItemInfos_Text_Document" xml:space="preserve">
    <value>NL Text Document</value>
  </data>
  <data name="CommonToolsApplicationPlugin_GetDataItemInfos_Web_Link" xml:space="preserve">
    <value>NL Web Link</value>
  </data>
  <data name="FileBasedRestartStateExporter_Name_Restart_State_Exporter" xml:space="preserve">
    <value>NL Restart State Exporter</value>
  </data>
  <data name="FileBasedRestartStateImporter_Name_Restart_State" xml:space="preserve">
    <value>NL Restart State</value>
  </data>
  <data name="FileFilter_CSV_Files" xml:space="preserve">
    <value>NL CSV Files</value>
  </data>
  <data name="FileFilter_Delta_Shell_State_File" xml:space="preserve">
    <value>NL Delta Shell State File</value>
  </data>
  <data name="GenerateDataService_AddOneIntervalStep_Cannot_add_one_step_to_the_old_value_of_type__0___because_the_amount_to_add_is_of_incompatible_type__1__" xml:space="preserve">
    <value>NL Cannot add one step to the old value of type {0}, because the amount to add is of incompatible type {1}.</value>
  </data>
  <data name="GenerateDataService_AddOneIntervalStep_Cannot_progress_one_interval_step__Variable_value_of_type__0__are_not_supported_" xml:space="preserve">
    <value>NL Cannot progress one interval step: Variable value of type {0} are not supported.</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings__0__component_constants_are_given__but_the_function_has__1__components_" xml:space="preserve">
    <value>NL {0} component constants are given, but the function has {1} components.</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings_A_function_must_be_specified_to_generate_data_into_" xml:space="preserve">
    <value>NL A function must be specified to generate data into.</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings_A_single_argument_must_be_set_to_generate_intervals_for_" xml:space="preserve">
    <value>NL A single argument must be set to generate intervals for.</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings_The_argument___0___to_generate_intervals_for_should_be_an_argument_of_the_function_" xml:space="preserve">
    <value>NL The argument '{0}' to generate intervals for should be an argument of the function.</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings_The_component_constants_to_use_should_be_set_" xml:space="preserve">
    <value>NL The component constants to use should be set.</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings_The_functio_should_contain_at_least_one_argument_" xml:space="preserve">
    <value>NL The functio should contain at least one argument.</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings_The_given_constant___0___is_of_type__1___which_does_not_match_the_components_type__2___All_components_must_use_the_same_datatype_" xml:space="preserve">
    <value>NL The given constant '{0}' is of type {1}, which does not match the components type {2}. All components must use the same datatype!</value>
  </data>
  <data name="GenerateDataService_CheckInternalSettings_The_type__0__of_the_interval_is_not_compatible_with_the_argument_variable_type__1__" xml:space="preserve">
    <value>NL The type {0} of the interval is not compatible with the argument variable type {1}.</value>
  </data>
  <data name="GenerateDataService_DivideValueByInteger_Cannot_progress_one_interval_step__Variable_values_of_type__0__are_not_supported_" xml:space="preserve">
    <value>NL Cannot progress one interval step: Variable values of type {0} are not supported.</value>
  </data>
  <data name="GenerateDataService_GetComponentConstantType_The_component_constants_must_be_set_and_it_should_contain_at_least_one_constant_" xml:space="preserve">
    <value>NL The component constants must be set and it should contain at least one constant.</value>
  </data>
  <data name="GenerateDataService_SubstractOneIntervalStep_Cannot_progress_one_interval_step__Variable_values_of_type__0__are_not_supported_" xml:space="preserve">
    <value>NL Cannot progress one interval step: Variable values of type {0} are not supported.</value>
  </data>
  <data name="ProjectImporter_FileFilter_Delta_Shell_Project_Files" xml:space="preserve">
    <value>NL Delta Shell Project Files</value>
  </data>
  <data name="ProjectImporter_Name_Project" xml:space="preserve">
    <value>NL Project</value>
  </data>
  <data name="ProjectItemExporter_Export_ProjectFolderExporter_only_supports_export_of_IProjectItem_based_objects" xml:space="preserve">
    <value>NL ProjectFolderExporter only supports export of IProjectItem based objects</value>
  </data>
  <data name="ProjectItemExporter_fileFilter_DeltaShell_project_files" xml:space="preserve">
    <value>NL DeltaShell project files</value>
  </data>
  <data name="ProjectItemExporter_name_Export_to_new_project" xml:space="preserve">
    <value>NL Export to new project</value>
  </data>
  <data name="TimeSeriesAttributes_SetToFunction_Setting_attributes_on_non_time_series_function_is_not_supported" xml:space="preserve">
    <value>NL Setting attributes on non-time series function is not supported</value>
  </data>
  <data name="TimeSeriesCsvFileImporter_ImportTimeSeries_Csv_import_failed__errors_in_row__0___column_s___1____2__rows_with_errors_in_total_" xml:space="preserve">
    <value>NL Csv import failed: errors in row {0}, column(s) {1} ({2} rows with errors in total)</value>
  </data>
  <data name="TimeSeriesCsvFileImporter_ImportTimeSeries_Csv_import_failed__please_check_the_file_layout" xml:space="preserve">
    <value>NL Csv import failed, please check the file layout</value>
  </data>
  <data name="TimeSeriesCsvFileImporter_ImportTimeSeries_Csv_import_failed__time_column_format_not_recognized" xml:space="preserve">
    <value>NL Csv import failed, time column format not recognized</value>
  </data>
  <data name="TimeSeriesCsvFileImporter_ImportTimeSeries_Csv_import_failed__time_values_not_strictly_ordered" xml:space="preserve">
    <value>NL Csv import failed, time values not strictly ordered</value>
  </data>
  <data name="TimeSeriesCsvFileImporter_Name_Time_Series___csv_" xml:space="preserve">
    <value>NL Time Series (.csv)</value>
  </data>
  <data name="TimeSeriesCsvImporter_Name_Time_Series__CSV_" xml:space="preserve">
    <value>NL Time Series (CSV)</value>
  </data>
  <data name="TimeSeriesGenerator_ValidateSeriesHasMultipleValues_Timeseries_must_contain_2_or_more_values_in_order_to_be_expanded" xml:space="preserve">
    <value>NL Timeseries must contain 2 or more values in order to be expanded</value>
  </data>
  <data name="TimeSeriesGenerator_ValidateStartEnd_End_time_must_be_later_than_start_time" xml:space="preserve">
    <value>NL End time must be later than start time</value>
  </data>
  <data name="TimeSeriesGenerator_ValidateTimesOverlap_The_old_time_interval_and_the_new_time_interval_do_not_overlap" xml:space="preserve">
    <value>NL The old time interval and the new time interval do not overlap</value>
  </data>
  <data name="TimeSeriesGenerator_ValidateTimestep_Timestep_has_no_duration" xml:space="preserve">
    <value>NL Timestep has no duration</value>
  </data>
</root>