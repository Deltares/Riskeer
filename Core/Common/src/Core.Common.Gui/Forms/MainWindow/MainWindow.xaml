<!--
Copyright (C) Stichting Deltares 2021. All rights reserved.

This file is part of Riskeer.

Riskeer is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program. If not, see <http://www.gnu.org/licenses/>.

All names, logos, and references to "Deltares" are registered trademarks of
Stichting Deltares and remain full property of Stichting Deltares at all times.
All rights reserved.
-->
<metro:MetroWindow x:Class="Core.Common.Gui.Forms.MainWindow.MainWindow" 
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:commands="clr-namespace:Core.Common.Gui.Forms.MainWindow"
                   xmlns:properties="clr-namespace:Core.Common.Gui.Properties"
                   xmlns:viewHost="clr-namespace:Core.Common.Gui.Forms.ViewHost"
                   mc:Ignorable="d" 
                   Title="MainWindow" Height="768" Width="1024" 
                   x:Name="Window"
                   Icon="/Core.Common.Gui;component\Resources/Riskeer.ico"
                   ResizeMode="CanResizeWithGrip"
                   FlowDirection="LeftToRight"
                   Loaded="MainWindow_OnLoaded">

    <metro:MetroWindow.CommandBindings>
        <CommandBinding Command="New" Executed="OnFileNewClicked" />
        <CommandBinding Command="Save" Executed="OnFileSaveClicked" />
        <CommandBinding Command="SaveAs" Executed="OnFileSaveAsClicked" />
        <CommandBinding Command="Open" Executed="OnFileOpenClicked" />
        <CommandBinding Command="Close" Executed="OnFileExitClicked" />
        <CommandBinding Command="{x:Static commands:MainWindowCommands.CloseViewTabCommand}" Executed="CloseDocumentTab" CanExecute="CanCloseDocumentTab"/>
    </metro:MetroWindow.CommandBindings>
    
    <metro:MetroWindow.InputBindings>
        <KeyBinding Command="New" Key="N" Modifiers="Ctrl"/>
        <KeyBinding Command="Save" Key="S" Modifiers="Ctrl"/>
        <KeyBinding Command="SaveAs" Key="S" Modifiers="Ctrl + Shift" />
        <KeyBinding Command="Open" Key="O" Modifiers="Ctrl"/>
        <KeyBinding Command="Close" Key="F4" Modifiers="Alt"/>
        <KeyBinding Command="{x:Static commands:MainWindowCommands.CloseViewTabCommand}" Key="F4" Modifiers="Ctrl"/>
    </metro:MetroWindow.InputBindings>
    
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Core.Common.Gui;component/Style/DeltaresStyle.xaml" /> 
            </ResourceDictionary.MergedDictionaries>
            
            <Style x:Key="PanelBackgroundWindowTitleStyle" TargetType="{x:Type Panel}">
                <Setter Property="Background" Value="{StaticResource WindowTitleColorBrush}" />
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False">
                        <Setter Property="Background"
                                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=NonActiveBorderBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            
            <SolidColorBrush x:Key="ButtonBackground" Color="Transparent" />
            <SolidColorBrush x:Key="BorderBrush" Color="{StaticResource Transparent}" />
            <SolidColorBrush x:Key="MainButtonBarBottomBorderBrush" Color="{StaticResource DeltaresSand}" />
            <SolidColorBrush x:Key="MainButtonBarActiveBackgroundColor" Color="#F1F1EE" />
            
            <Style x:Key="WindowCommandsButtonStyle" TargetType="{x:Type Button}"
                   BasedOn="{StaticResource {x:Static metro:WindowCommands.ButtonStyleKey}}">
                <Setter Property="Background" Value="{StaticResource WindowTitleColorBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
                
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ZoomControlHoverItemBackground}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{StaticResource DeltaresDarkerBlueBrush}"/>
                    </Trigger>
                    
                    <DataTrigger
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False">
                        <Setter Property="Background"
                                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=NonActiveBorderBrush}" />
                    </DataTrigger>
                    
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition
                                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                                Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource ZoomControlHoverItemBackground}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="BottomButtonStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="Background" Value="{StaticResource WindowTitleColorBrush}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{StaticResource ZoomControlHoverItemBackground}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{StaticResource DeltaresDarkerBlueBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Background" Value="{StaticResource DisabledInputBackgroundBrush}"/>
                        <Setter Property="Foreground" Value="{StaticResource DisabledInputForegroundBrush}"/>
                    </Trigger>
                    
                    <DataTrigger
                        Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                        Value="False">
                        <Setter Property="Background"
                                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=NonActiveBorderBrush}" />
                    </DataTrigger>
                    
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition
                                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                                Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource ZoomControlHoverItemBackground}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="BottomToggleButtonStyle" TargetType="{x:Type ToggleButton}"
                BasedOn="{StaticResource BottomButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{StaticResource DeltaresDarkerBlueBrush}" />
                    </Trigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition
                                Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}, Path=IsActive}"
                                Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource ZoomControlHoverItemBackground}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="ButtonIconStyle" TargetType="{x:Type TextBlock}">
                <Setter Property="TextAlignment" Value="Center" />
                <Setter Property="FontFamily" Value="{StaticResource RiskeerFont}" />
                <Setter Property="FontSize" Value="20" />
            </Style>
            
            <Style x:Key="ButtonLargeIconStyle" TargetType="{x:Type TextBlock}"
                   BasedOn="{StaticResource ButtonIconStyle}">
                <Setter Property="FontSize" Value="32" />
            </Style>
            
            <Style x:Key="MainButtonBarButtonStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="Padding" Value="0 6 0 0" />
                <Setter Property="Margin" Value="3 6 " />
                <Setter Property="MinWidth" Value="66" />
                <Setter Property="Height" Value="85" />
                <Setter Property="Background" Value="{StaticResource BorderBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBackground}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"/>
                                        <RowDefinition Height="auto"/>
                                    </Grid.RowDefinitions>
                                    <ContentPresenter Grid.Row="0" HorizontalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                    <Label Grid.Row="1" Content="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                           HorizontalAlignment="Center" Foreground="{TemplateBinding Foreground}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#e4e4df" />
                                    <Setter Property="BorderBrush" Value="#d2d2ca" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#e4e4df" />
                                    <Setter Property="BorderBrush" Value="#d2d2ca" />
                                    <Setter Property="Foreground" Value="{StaticResource WindowTitleColorBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="MainButtonBarToggleButtonStyle" TargetType="{x:Type ToggleButton}"
                   BasedOn="{StaticResource MainButtonBarButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="#e4e4df" />
                        <Setter Property="BorderBrush" Value="#d2d2ca" />
                        <Setter Property="Foreground" Value="{StaticResource WindowTitleColorBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            
            <Style x:Key="SeparatorStyle" TargetType="{x:Type Separator}"
                   BasedOn="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}">
                <Setter Property="Width" Value="1"/>
                <Setter Property="Height" Value="84"/>
                <Setter Property="Background" Value="#d2d2ca" />
            </Style>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>
    
    <metro:MetroWindow.LeftWindowCommands>
        <metro:WindowCommands>
            <Button Name="ButtonMenuFileNewProject"
                        ToolTip="{x:Static properties:Resources.Ribbon_Command_New}"
                        AutomationProperties.AutomationId="ButtonMenuFileNewProject"
                        AutomationProperties.Name="ButtonMenuFileNewProject"
                        Click="OnFileNewClicked"
                        x:FieldModifier="private"
                        Style="{StaticResource WindowCommandsButtonStyle}">
                    <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE93C;"/>
                </Button>
                <Button Name="ButtonMenuFileSaveProject"
                        ToolTip="{x:Static properties:Resources.Ribbon_Command_Save}"
                        Click="OnFileSaveClicked"
                        x:FieldModifier="private"
                        Style="{StaticResource WindowCommandsButtonStyle}">
                    <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE93E;"/>
                </Button>
                <Button Name="ButtonMenuFileSaveProjectAs"
                        ToolTip="{x:Static properties:Resources.Ribbon_Command_Save_As}"
                        AutomationProperties.AutomationId="ButtonMenuFileSaveProjectAs"
                        Click="OnFileSaveAsClicked"
                        x:FieldModifier="private"
                        Style="{StaticResource WindowCommandsButtonStyle}">
                    <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE940;"/>
                </Button>
                <Button Name="ButtonMenuFileOpenProject"
                        ToolTip="{x:Static properties:Resources.Ribbon_Command_Open}"
                        AutomationProperties.AutomationId= "ButtonMenuFileOpenProject"
                        Click="OnFileOpenClicked"
                        x:FieldModifier="private"
                        Style="{StaticResource WindowCommandsButtonStyle}">
                    <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE93D;"/>
                </Button>
        </metro:WindowCommands>
    </metro:MetroWindow.LeftWindowCommands>
    
    <Grid Background="{StaticResource BackgroundColorBrush}">
        <DockPanel>
            
            <StackPanel DockPanel.Dock="Top" Height="100" Background="{StaticResource MainButtonBarActiveBackgroundColor}" Orientation="Horizontal">
                <Button Style="{StaticResource MainButtonBarButtonStyle}"
                        Tag="Project">
                    <TextBlock Style="{StaticResource ButtonLargeIconStyle}"
                               Text="&#xE949;"/>
                </Button>
                <Separator Style="{StaticResource SeparatorStyle}" />
                <ToggleButton Style="{StaticResource MainButtonBarToggleButtonStyle}"
                              Tag="Traject">
                    <TextBlock Style="{StaticResource ButtonLargeIconStyle}"
                               Text="&#xE94E;"/>
                </ToggleButton>
                <ToggleButton Style="{StaticResource MainButtonBarToggleButtonStyle}"
                              Tag="Faalpaden">
                    <TextBlock Style="{StaticResource ButtonLargeIconStyle}"
                               Text="&#xE953;"/>
                </ToggleButton>
                <ToggleButton Style="{StaticResource MainButtonBarToggleButtonStyle}"
                              Tag="Berekeningen">
                    <TextBlock Style="{StaticResource ButtonLargeIconStyle}"
                               Text="&#xE91D;"/>
                </ToggleButton>
                <ToggleButton Style="{StaticResource MainButtonBarToggleButtonStyle}"
                              Tag="Assembleren">
                    <TextBlock Style="{StaticResource ButtonLargeIconStyle}"
                               Text="&#xE94B;"/>
                </ToggleButton>
                <Separator Style="{StaticResource SeparatorStyle}" />
            </StackPanel>
            
            <Border DockPanel.Dock="Top"
                    BorderThickness="0,1,0,0"
                    BorderBrush="{StaticResource MainButtonBarBottomBorderBrush}" />
            
            <DockPanel Height="30" DockPanel.Dock="Bottom" Style="{StaticResource PanelBackgroundWindowTitleStyle}">
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                    <ToggleButton Name="ButtonShowProjectExplorer"
                                  Style="{StaticResource BottomToggleButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE95B;"/>
                    </ToggleButton>
                    <ToggleButton Name="ButtonShowProperties"
                                  ToolTip="{x:Static properties:Resources.Ribbon_Properties}"
                                  Click="ButtonShowProperties_Click"
                                  Style="{StaticResource BottomToggleButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE945;"/>
                    </ToggleButton>
                    <ToggleButton Name="ButtonShowMessages"
                                  ToolTip="{x:Static properties:Resources.Ribbon_Messages}"
                                  Click="ButtonShowMessages_Click"
                                  Style="{StaticResource BottomToggleButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE942;"/>
                    </ToggleButton>
                    <ToggleButton Name="ButtonShowMapLegendView"
                                  Style="{StaticResource BottomToggleButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE94C;"/>
                    </ToggleButton>
                    <ToggleButton Name="ButtonShowChartLegendView"
                                  Style="{StaticResource BottomToggleButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE943;"/>
                    </ToggleButton>
                </StackPanel>
                
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left" Margin="40 0 0 0">
                    <Button ToolTip="{x:Static properties:Resources.Ribbon_Show_Log}"
                            DockPanel.Dock="Left"
                            Click="OnFileHelpShowLog_Clicked"
                            Style="{StaticResource BottomButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE946;"/>
                    </Button>
                    <Button Name="FileManualButton"
                            DockPanel.Dock="Left"
                            ToolTip="{x:Static properties:Resources.Ribbon_Open_Manual}"
                            Click="OnFileManual_Clicked"
                            x:FieldModifier="private"
                            Style="{StaticResource BottomButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE92D;"/>
                    </Button>
                    <Button Name="AboutButton"
                            DockPanel.Dock="Left"
                            ToolTip="{x:Static properties:Resources.Ribbon_About}"
                            Click="OnAboutDialog_Clicked"
                            x:FieldModifier="private"
                            Style="{StaticResource BottomButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE921;"/>
                    </Button>
                    <Button ToolTip="{x:Static properties:Resources.Ribbon_Exit}"
                            DockPanel.Dock="Left"
                            Click="OnFileExitClicked"
                            Style="{StaticResource BottomButtonStyle}">
                        <TextBlock Style="{StaticResource ButtonIconStyle}" Text="&#xE901;"/>
                    </Button>
                </StackPanel>
            </DockPanel>
            
            <viewHost:AvalonDockViewHost x:Name="AvalonDockViewHost" />
            
        </DockPanel>
    </Grid>
</metro:MetroWindow>
