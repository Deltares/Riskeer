<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CategorizationOperation_CategorizationOperationCanOnlyHaveASingleOutput" xml:space="preserve">
    <value>NL Categorization operation can only have a single output</value>
  </data>
  <data name="CategorizationOperation_CategorizationOperationOnlySupportsSpatialDataAsPortValueType" xml:space="preserve">
    <value>NL Categorization operation only supports 'Spatial data' as PortValueType on its ports.</value>
  </data>
  <data name="CategorizationOperation_MustHaveAtLeastOneInputPort" xml:space="preserve">
    <value>NL Must have at least 1 input port</value>
  </data>
  <data name="CurveCoverage_InvalidTimeForNetworkSpatialData" xml:space="preserve">
    <value>NL Invalid time for network spatial data</value>
  </data>
  <data name="CurveCoverage_NetworkSpatialDataChainageExceedsBranchLength" xml:space="preserve">
    <value>NL Network spatial data ({0}): Chainage ({1}) exceeds branch length ({2}). Interpolation impossible</value>
  </data>
  <data name="CurveCoverage_NetworkSpatialDataChainageOutOfRange" xml:space="preserve">
    <value>NL Network spatial data ({0}): Chainage ({1}) out of range; can not interpolate</value>
  </data>
  <data name="CurveCoverage_PleaseDoNotSpecifyTimeFilter" xml:space="preserve">
    <value>NL Please do not specify time filter to retrieve value from time related network spatial data.</value>
  </data>
  <data name="CurveCoverage_PleaseSpecifyNetworkCoverage" xml:space="preserve">
    <value>NL Please specify network spatial data using VariableValueFilter in filters.</value>
  </data>
  <data name="CurveCoverage_PleaseSpecifyTimeFilter" xml:space="preserve">
    <value>NL Please specify time filter to retrieve value from time related network spatial data.</value>
  </data>
  <data name="DefaultMapController_EnableBackGroundLayer_NoDefaultMapException" xml:space="preserve">
    <value>NL Don't set background layers when you dont have a default map.</value>
  </data>
  <data name="FeatureCoverage_ChangingFeatureListAfterPersistingNotAllowed" xml:space="preserve">
    <value>NL Changing the feature list after setting and persisting spatial data values is not allowed!</value>
  </data>
  <data name="FeatureCoverage_NoDataDefinedOnLocation" xml:space="preserve">
    <value>NL No data defined on location {0}</value>
  </data>
  <data name="FeatureCoverage_NonMatchingFeatureCount" xml:space="preserve">
    <value>NL Non matching feature count before / after</value>
  </data>
  <data name="FeatureCoverage_PleaseDoNotSpecifyTimeFilter" xml:space="preserve">
    <value>NL Please do not specify time filter to retrieve value from non-time related feature spatial data</value>
  </data>
  <data name="FeatureTypeConverter_AttemptingToLoadSpatialDataNotInFeatures" xml:space="preserve">
    <value>NL Attempting to load spatial data values for a feature not in Features of spatial data</value>
  </data>
  <data name="FeatureTypeConverter_AttemptingToSaveSpatialDataNotInFeatures" xml:space="preserve">
    <value>NL Attempting to save spatial data values for feature not in Features of spatial data</value>
  </data>
  <data name="NetworkCoverageMathExtensions_InterpolationMethodNotSupported" xml:space="preserve">
    <value>NL Interpolation method {0} not supported</value>
  </data>
  <data name="NetworkCoverageMathExtensions_NumberOfTimeValuesDoesNotMatch" xml:space="preserve">
    <value>NL Number of time values does not match for spatial datas</value>
  </data>
  <data name="NetworkCoverageMathExtensions_SpatialDataNotTimeDependent" xml:space="preserve">
    <value>NL Spatial data is not time dependent:</value>
  </data>
  <data name="NetworkCoverageMathExtensions_SpatialDatasWithMultipleComponentsNotImplemented" xml:space="preserve">
    <value>NL Support for spatial data with multiple components is not implemented</value>
  </data>
  <data name="NourishmentsNodePresenter_GetContextMenu_Clear_nourishments" xml:space="preserve">
    <value>NL Clear nourishments</value>
  </data>
  <data name="RegularGridCoverage_CopyConstructorNotImplementedForComponentWithMultipleNodataValues" xml:space="preserve">
    <value>NL Copy constructor not implemented for component with multiple nodata values</value>
  </data>
  <data name="RegularGridCoverage_CopyConstructorNotImplementedForGridsWithMoreThanOneComponent" xml:space="preserve">
    <value>NL Copy constructor not implemented for grids with more than one component</value>
  </data>
  <data name="RegularGridCoverage_ExtrapolationDisabled" xml:space="preserve">
    <value>NL Extrapolation is disabled</value>
  </data>
  <data name="RegularGridCoverage_InterpolationDisabled" xml:space="preserve">
    <value>NL Interpolation is disabled</value>
  </data>
  <data name="RegularGridCoverage_NoValuesAvailableAtX" xml:space="preserve">
    <value>NL No values available for {0} at x = {1}</value>
  </data>
  <data name="RegularGridCoverage_NoValuesAvailableAtY" xml:space="preserve">
    <value>NL No values available for {0} at y = {1}</value>
  </data>
  <data name="RegularGridCoverage_OnlyPiecewiseConstantInterpolationTypeSupported" xml:space="preserve">
    <value>NL Only piecewise constant interpolation type is supported for time argument, actual: {0}, spatial data: {1}</value>
  </data>
  <data name="RegularGridCoverage_RegularGridSpatialDataNotAvailableAtX" xml:space="preserve">
    <value>NL Regular grid spatial data {0}; no data available at x={1}</value>
  </data>
  <data name="RegularGridCoverage_RegularGridSpatialDataNotAvailableAtY" xml:space="preserve">
    <value>NL Regular grid spatial data {0}; no data available at y={1}</value>
  </data>
  <data name="RegularGridCoverage_TimeInterpolationNotPossibleWithMoreThan1Filter" xml:space="preserve">
    <value>NL Time-interpolation is not possible with more than 1 filter.</value>
  </data>
  <data name="RegularGridCoverage_TimeInterpolationNotPossibleWithMoreThanOneFilter" xml:space="preserve">
    <value>NL Time-interpolation is not possible with more than 1 filter.</value>
  </data>
</root>