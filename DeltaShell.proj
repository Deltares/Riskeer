<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask TaskName="Zip" AssemblyFile="build\tools\MSBuild.Community.Tasks.dll" />

  <PropertyGroup>
    <Framework>$(WINDIR)\Microsoft.NET\Framework\v4.0.30319</Framework>
    <BuildPath>$(MSBuildProjectDirectory)</BuildPath>
    <GuiPath>$(BuildPath)\src\DeltaShell\DeltaShell.Gui\</GuiPath>
    <SolutionDir>$(MSBuildProjectDirectory)</SolutionDir> 
    <DoxygenOutputDirectory>$(BuildPath)\target\doxygen\</DoxygenOutputDirectory>
    <NuGetCmd>$(BuildPath)\build\tools\NuGet</NuGetCmd>
    <ProgramVersion>1.0.0</ProgramVersion>
  </PropertyGroup>

  <!-- our build hangs and produces incorrect performance results when anti-virus is running -->
  <Target Name="StopSophos"> 
     <Exec Command="build\tools\stop_antivirus.cmd" />
  </Target>

  <Target Name="FxCop">
     <Exec Command="$(Framework)\msbuild build\FxCop.proj /m /nr:true /v:m" />  
  </Target>

  <Target Name="Documentation">
     <Exec Command="$(Framework)\msbuild build\Doc.proj /m /nr:true /v:m" />  
  </Target>

  <Target Name="NCover" DependsOnTargets="StopSophos">
    <Exec Command="$(Framework)\msbuild build\NCover.proj /property:testTarget=unittest /nr:true /v:m /m" />
  </Target>

  <Target Name="NCover_Integration" DependsOnTargets="StopSophos">
    <Exec Command="$(Framework)\msbuild build\NCover.proj /property:testTarget=integrationtest /nr:true /v:m /m" />
  </Target>

  <Target Name="NDepend" DependsOnTargets="StopSophos">
    <Exec Command="$(Framework)\msbuild build\NDepend.proj /nr:true /v:m /m" />
  </Target>  

  <Target Name="Doxygen" DependsOnTargets="Release">
    <RemoveDir Directories="$(DoxygenOutputDirectory)"/>
    <MakeDir Directories="$(DoxygenOutputDirectory)" />
    <Exec Command="build\tools\doxygen\bin\doxygen.exe DeltaShell.doxygen" />
  </Target>   

  <!-- main target -->
  <Target Name="Clean">
    <Message Text="SolutionDir: '$(SolutionDir)'" />
    <Message Text="MSBuildProjectDirectory: '$(MSBuildProjectDirectory)'" />
    <MSBuild Projects="DeltaShell.sln" Targets="Clean" Properties="Configuration=Release;SolutionDir=$(SolutionDir);StartUsingCommandLine=$(StartUsingCommandLine)" />
  </Target>

  <Target Name="CleanDebug">
    <MSBuild Projects="DeltaShell.sln" Targets="Clean" Properties="Configuration=Debug;SolutionDir=$(SolutionDir);StartUsingCommandLine=$(StartUsingCommandLine)" />
  </Target>

  <Target Name="Build" DependsOnTargets="StopSophos">
    <RemoveDir Directories="$(BuildPath)\target"/>
    <MSBuild Projects="DeltaShell.sln" Targets="Build" Properties="Configuration=Release;SolutionDir=$(SolutionDir);StartUsingCommandLine=$(StartUsingCommandLine)" />
  </Target>

  <Target Name="Release">
    <RemoveDir Directories="$(BuildPath)\target"/>
    <MSBuild Projects="DeltaShell.sln" Targets="Build" Properties="Configuration=Release;SolutionDir=$(SolutionDir);StartUsingCommandLine=$(StartUsingCommandLine)" />
  </Target>

  <Target Name="BuildDebug" DependsOnTargets="StopSophos">
    <MSBuild Projects="DeltaShell.sln" Targets="Build" Properties="Configuration=Debug;SolutionDir=$(SolutionDir);StartUsingCommandLine=$(StartUsingCommandLine)" />
  </Target>

  <Target Name="Rebuild" DependsOnTargets="StopSophos">
    <MSBuild Projects="DeltaShell.sln" Targets="Rebuild" Properties="Configuration=Release;SolutionDir=$(SolutionDir);StartUsingCommandLine=$(StartUsingCommandLine)" />
  </Target>

  <ItemGroup>
    <ExistingMsiAndZipFiles Include="setup\Plugins\**\*.msi"/>
    <ExistingMsiAndZipFiles Include="setup\Plugins\**\*.zip"/>
  </ItemGroup>
  
  <Target Name="Msi" DependsOnTargets="Release;PrepareMsi"> 
    <MSBuild Projects="setup\Plugins\MorphAn\MorphAn.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\XBeachG\XBeachGravel.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\WFDExplorer\WFDExplorer.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\Habitat\Habitat.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\FM\FM.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\FM\FM_RWS.wixproj" Targets="Clean;Build"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\Sobek\Sobek.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\Waq\Waq.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>

  <Target Name="PrepareMsi">
    <Delete Files="@(ExistingMsiAndZipFiles)" />
    <Delete Files="$(GuiPath)\bin\**\*.pdb" />
  </Target>

  <Target Name="MsiMorphAn" DependsOnTargets="Release"> 
    <MSBuild Projects="setup\Plugins\MorphAn\MorphAn.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>
  
  <Target Name="MsiXBeachG" DependsOnTargets="Release"> 
      <MSBuild Projects="setup\Plugins\XBeachG\XBeachGravel.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>

  <Target Name="MsiWfdExplorer" DependsOnTargets="Release"> 
    <MSBuild Projects="setup\Plugins\WFDExplorer\WFDExplorer.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>

  <Target Name="MsiHabitat" DependsOnTargets="Release"> 
    <MSBuild Projects="setup\Plugins\Habitat\Habitat.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>

  <Target Name="MsiFM" DependsOnTargets="Release"> 
    <MSBuild Projects="setup\Plugins\FM\FM.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\FM\FM_RWS.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>

  <Target Name="MsiSobek" DependsOnTargets="Release"> 
    <MSBuild Projects="setup\Plugins\Sobek\Sobek.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>
  
  <Target Name="MsiWaq" DependsOnTargets="Release"> 
    <MSBuild Projects="setup\Plugins\Waq\Waq.wixproj" Targets="Rebuild"  Properties="Configuration=Release;SolutionDir=$(SolutionDir)" />
  </Target>
  
  <!--  <Target Name="Msi" DependsOnTargets="Build"> -->
  <Target Name="MsiDebug"> 
    <Delete Files="$(GuiPath)\bin\**\*.pdb" />
    <RemoveDir Directories="$(BuildPath)\target"/>
    <MakeDir Directories="$(BuildPath)\target"/>

    <MSBuild Projects="setup\Plugins\Sobek\Sobek.wixproj" Targets="Rebuild"  Properties="Configuration=Debug;SolutionDir=$(SolutionDir)" />  
    <MSBuild Projects="setup\Plugins\Waq\Waq.wixproj" Targets="Rebuild"  Properties="Configuration=Debug;SolutionDir=$(SolutionDir)" />  
    <MSBuild Projects="setup\Plugins\Habitat\Habitat.wixproj" Targets="Rebuild"  Properties="Configuration=Debug;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\WFDExplorer\WFDExplorer.wixproj" Targets="Rebuild"  Properties="Configuration=Debug;SolutionDir=$(SolutionDir)" />
    <MSBuild Projects="setup\Plugins\MorphAn\MorphAn.wixproj" Targets="Rebuild"  Properties="Configuration=Debug;SolutionDir=$(SolutionDir)" />
  </Target>


  <Target Name="NGenAll">
    <Exec ContinueOnError="true" IgnoreExitCode="true" Command="ngen_install.cmd" WorkingDirectory="lib" />
    <Exec ContinueOnError="true" IgnoreExitCode="true" Command="ngen_install.cmd" WorkingDirectory="lib\Common\SharpMap.Extensions" />
    <Exec ContinueOnError="true" IgnoreExitCode="true" Command="ngen_install.cmd" WorkingDirectory="lib\DeltaShell\DeltaShell.Plugins.Data.NHibernate" />
    <Exec ContinueOnError="true" IgnoreExitCode="true" Command="ngen_install.cmd" WorkingDirectory="lib\DeltaShell\DeltaShell.Plugins.NetCDF" />
    <Exec ContinueOnError="true" IgnoreExitCode="true" Command="ngen_install.cmd" WorkingDirectory="lib\DeltaShell\DeltaShell.Plugins.Scripting" />    
  </Target>

  <!-- used for local builds only, on TeamCity this will be done using NuGet rule -->
  <Target Name="NuGet" DependsOnTargets="Build">
    <MakeDir Directories="$(BuildPath)\target"/>
    <Exec Command="$(NuGetCmd) pack $(BuildPath)\sdk\packages\DelftTools.Utils\DelftTools.Utils.nuspec -Version $(ProgramVersion)" WorkingDirectory="$(BuildPath)\target\" />
    <Exec Command="$(NuGetCmd) pack $(BuildPath)\sdk\packages\DeltaShell\DeltaShell.nuspec -Version $(ProgramVersion)" WorkingDirectory="$(BuildPath)\target\" />
  </Target>

  <Target Name="Zip" DependsOnTargets="Build">
    <Delete Files="$(GuiPath)\**\*.pdb" />

    <MakeDir Directories="$(BuildPath)\target" Condition="!Exists('$(BuildPath)\target')"/>

    <CreateItem Include="$(GuiPath)\bin\Release\**\*.*;
                         $(GuiPath)\bin\plugins\**\*.*">
      <Output TaskParameter="Include" ItemName="InstallationFilesMain"/>
    </CreateItem>

    <Zip Files="@(InstallationFilesMain)" WorkingDirectory="$(GuiPath)" ZipFileName="$(BuildPath)\target\DeltaShell.zip" ContinueOnError="false" />
  </Target>

  <Target Name="WFDExplorerZip" DependsOnTargets="Build">
    <Delete Files="$(GuiPath)\**\*.pdb" />

    <MakeDir Directories="$(BuildPath)\target" Condition="!Exists('$(BuildPath)\target')"/>

    <CreateItem Include="$(GuiPath)\bin\Release\*.*;
                         $(GuiPath)\bin\plugins\**\*.*">
      <Output TaskParameter="Include" ItemName="InstallationFilesMain"/>
    </CreateItem>

    <Zip Files="@(InstallationFilesMain)" WorkingDirectory="$(GuiPath)" ZipFileName="$(BuildPath)\target\WFDExplorer.zip" ContinueOnError="false" />
  </Target>

  <Target Name="ZipDebug" DependsOnTargets="BuildDebug">
    <Delete Files="$(GuiPath)\bin\**\*.pdb" />
    <RemoveDir Directories="$(BuildPath)\target"/>
    <MakeDir Directories="$(BuildPath)\target"/>

    <CreateItem Include="$(GuiPath)\bin\Debug\*.*;
                         $(GuiPath)\bin\plugins\**\*.*">
      <Output TaskParameter="Include" ItemName="InstallationFilesMain"/>
    </CreateItem>

    <Zip Files="@(InstallationFilesMain)"  WorkingDirectory="$(GuiPath)" ZipFileName="$(BuildPath)\target\DeltaShell.zip" ContinueOnError="false" />
  </Target>

  <!-- build and zip SharpMap projects only (Delta Shell version) -->
  <Target Name="BuildSpatial">
    <RemoveDir Directories="$(BuildPath)\target"/>
    <MSBuild Projects="DeltaShell-Spatial.sln" Targets="Build" Properties="Configuration=Release;SolutionDir=$(SolutionDir);StartUsingCommandLine=$(StartUsingCommandLine)" />
  </Target>

  <Target Name="ZipSharpMap" DependsOnTargets="BuildSpatial">
    <Delete Files="$(GuiPath)\**\*.pdb" />

    <MakeDir Directories="$(BuildPath)\target\SharpMap-DeltaShell" Condition="!Exists('$(BuildPath)\target\SharpMap-DeltaShell')"/>

    <ItemGroup>
    <InstallationFilesSharpMap Include="
		$(BuildPath)\lib\Common\SharpMap.Extensions\**\*.*;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\BruTile.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\DelftTools.Functions.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\DelftTools.Units.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\DelftTools.Utils.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\GeoAPI.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\GeoAPI.Extensions.dll;
		$(BuildPath)\lib\ICSharpCode.SharpZipLib.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\PowerCollections.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\QuickGraph.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\NetTopologySuite.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\NetTopologySuite.Extensions.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\SharpMap.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\SharpMap.Extensions.dll;
		$(BuildPath)\src\Common\SharpMap.Extensions\bin\Release\log4net.dll; 		
		$(BuildPath)\src\Common\DelftTools.Units\bin\Release\PostSharp.dll;
		$(BuildPath)\src\Common\SharpMap.UI\bin\Release\SharpMap.UI.dll">
     </InstallationFilesSharpMap>
    </ItemGroup>

    <Copy
        SourceFiles="@(InstallationFilesSharpMap)"
        DestinationFolder="$(BuildPath)\target\SharpMap-DeltaShell"
    />


    <ItemGroup>
     <ZipFiles Include="$(BuildPath)\target\SharpMap-DeltaShell\**\*.*" />
    </ItemGroup>

    <Zip Files="@(ZipFiles)" WorkingDirectory="$(BuildPath)\target\" 
         ZipFileName="$(BuildPath)\target\SharpMap-DeltaShell.zip" ContinueOnError="false" />
  </Target>
</Project>
