<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="CalculationIcon" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\control_equalizer_blue.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Categories_LengthEffect" xml:space="preserve">
    <value>Lengte-effect parameters</value>
  </data>
  <data name="GrassCoverErosionInwardsContext_AssertInputsAreNotNull_DataDescription_0_cannot_be_null" xml:space="preserve">
    <value>{0} mag niet 'null' zijn.</value>
  </data>
  <data name="GrassCoverErosionInwardsContext_DataDescription_AssessmentSection" xml:space="preserve">
    <value>Het traject</value>
  </data>
  <data name="GrassCoverErosionInwardsContext_DataDescription_GrassCoverErosionInwardsFailureMechanism" xml:space="preserve">
    <value>Het grasbekleding erosie kruin en binnentalud toetsspoor</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_N_Description" xml:space="preserve">
    <value>De parameter 'N' die gebruikt wordt voor het lengte effect in de berekening.</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_N_DisplayName" xml:space="preserve">
    <value>N [-]</value>
  </data>
  <data name="GrassCoverErosionInwardsInputContext_DataDescription_GrassCoverErosionInwardsInputCalculationItem" xml:space="preserve">
    <value>De berekening</value>
  </data>
  <data name="GrassCoverErosionInwardsInputContext_NodeDisplayName" xml:space="preserve">
    <value>Invoer</value>
  </data>
  <data name="Categories_CriticalValues" xml:space="preserve">
    <value>Toetseisen</value>
  </data>
  <data name="Categories_ModelSettings" xml:space="preserve">
    <value>Modelfactoren</value>
  </data>
  <data name="Categories_Schematisation" xml:space="preserve">
    <value>Schematisatie</value>
  </data>
  <data name="BreakWaterHeight_Description" xml:space="preserve">
    <value>De hoogte van de dam [m+NAP].</value>
  </data>
  <data name="BreakWaterHeight_DisplayName" xml:space="preserve">
    <value>Hoogte [m+NAP]</value>
  </data>
  <data name="BreakWaterProperties_Description" xml:space="preserve">
    <value>Eigenschappen van de dam.</value>
  </data>
  <data name="BreakWaterProperties_DisplayName" xml:space="preserve">
    <value>Dam</value>
  </data>
  <data name="BreakWaterType_Description" xml:space="preserve">
    <value>Het type van de dam.</value>
  </data>
  <data name="BreakWaterType_DisplayName" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="BreakWater_HasBreakWater_Description" xml:space="preserve">
    <value>Is er een dam aanwezig?</value>
  </data>
  <data name="BreakWater_HasBreakWater_DisplayName" xml:space="preserve">
    <value>Aanwezig</value>
  </data>
  <data name="BreakWater_UseBreakWater_Description" xml:space="preserve">
    <value>Moet de dam worden gebruikt tijdens de berekening?</value>
  </data>
  <data name="BreakWater_UseBreakWater_DisplayName" xml:space="preserve">
    <value>Gebruik</value>
  </data>
  <data name="DikeGeometryProperties_Description" xml:space="preserve">
    <value>Eigenschappen van de dijkgeometrie.</value>
  </data>
  <data name="DikeGeometryProperties_DisplayName" xml:space="preserve">
    <value>Dijkgeometrie</value>
  </data>
  <data name="Geometry_Coordinates_Description" xml:space="preserve">
    <value>Lijst met punten in lokale coördinaten.</value>
  </data>
  <data name="Geometry_Coordinates_DisplayName" xml:space="preserve">
    <value>Coördinaten [m]</value>
  </data>
  <data name="DikeGeometry_Roughness_Description" xml:space="preserve">
    <value>Lijst met de ruwheid van elk onderdeel.</value>
  </data>
  <data name="DikeGeometry_Roughness_DisplayName" xml:space="preserve">
    <value>Ruwheden [-]</value>
  </data>
  <data name="DikeHeight_Description" xml:space="preserve">
    <value>De hoogte van de dijk [m+NAP].</value>
  </data>
  <data name="DikeHeight_DisplayName" xml:space="preserve">
    <value>Dijkhoogte [m+NAP]</value>
  </data>
  <data name="ForeshoreProperties_Description" xml:space="preserve">
    <value>Eigenschappen van de voorlandgeometrie.</value>
  </data>
  <data name="ForeshoreProperties_DisplayName" xml:space="preserve">
    <value>Voorlandgeometrie</value>
  </data>
  <data name="Foreshore_UseForeshore_Description" xml:space="preserve">
    <value>Moet het voorland worden gebruikt tijdens de berekening?</value>
  </data>
  <data name="Foreshore_UseForeshore_DisplayName" xml:space="preserve">
    <value>Gebruik</value>
  </data>
  <data name="DikeProfile_Name_Description" xml:space="preserve">
    <value>Naam van het dijkprofiel.</value>
  </data>
  <data name="DikeProfile_Name_DisplayName" xml:space="preserve">
    <value>Naam</value>
  </data>
  <data name="Orientation_Description" xml:space="preserve">
    <value>Oriëntatie van de dijk.</value>
  </data>
  <data name="Orientation_DisplayName" xml:space="preserve">
    <value>Oriëntatie [°]</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FbFactor_Description" xml:space="preserve">
    <value>De parameter 'Fb' die gebruikt wordt in de berekening.</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FbFactor_DisplayName" xml:space="preserve">
    <value>Modelfactor Fb [-]</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FnFactor_Description" xml:space="preserve">
    <value>De parameter 'Fn' die gebruikt wordt in de berekening.</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FnFactor_DisplayName" xml:space="preserve">
    <value>Modelfactor Fn [-]</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FshallowModelFactor_Description" xml:space="preserve">
    <value>De parameter 'Fondiep' die gebruikt wordt in de berekening.</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FshallowModelFactor_DisplayName" xml:space="preserve">
    <value>Modelfactor Fondiep [-]</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FrunupModelFactor_Description" xml:space="preserve">
    <value>De parameter 'Frunup' die gebruikt wordt in de berekening.</value>
  </data>
  <data name="GrassCoverErosionInwardsInput_FrunupModelFactor_DisplayName" xml:space="preserve">
    <value>Modelfactor Frunup [-]</value>
  </data>
  <data name="CriticalFlowRate_Description" xml:space="preserve">
    <value>Kritisch overslagdebiet per strekkende meter.</value>
  </data>
  <data name="CriticalFlowRate_DisplayName" xml:space="preserve">
    <value>Kritisch overslagdebiet [m³/s/m]</value>
  </data>
  <data name="Categories_HydraulicData" xml:space="preserve">
    <value>Hydraulische gegevens</value>
  </data>
  <data name="HydraulicBoundaryLocation_Description" xml:space="preserve">
    <value>De locatie met hydraulische randvoorwaarden.</value>
  </data>
  <data name="HydraulicBoundaryLocation_DisplayName" xml:space="preserve">
    <value>Locatie met hydraulische randvoorwaarden</value>
  </data>
  <data name="DikeProfile_Description" xml:space="preserve">
    <value>De schematisatie van het dijkprofiel.</value>
  </data>
  <data name="DikeProfile_DisplayName" xml:space="preserve">
    <value>Dijkprofiel</value>
  </data>
  <data name="Foreshore_DisplayName" xml:space="preserve">
    <value>Voorland</value>
  </data>
  <data name="DikeHeight_ChartName" xml:space="preserve">
    <value>Dijkhoogte</value>
  </data>
  <data name="GrassCoverErosionInwardsChartDataFactory_Create_Name_format" xml:space="preserve">
    <value>{0} - {1}</value>
  </data>
</root>