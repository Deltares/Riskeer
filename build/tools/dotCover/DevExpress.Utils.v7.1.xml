<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DevExpress.Utils.v7.1</name>
    </assembly>
    <members>
        <member name="T:DevExpress.XtraPrinting.PaddingInfo.PaddingInfo">

            <summary>
                <para>Represents padding or margin information associated with a control or a brick.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified dpi value.
</para>
            </summary>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(PaddingInfo,Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class and copies the settings from the object passed as the parameter according to the specified dpi value.

</para>
            </summary>
            <param name="src">
		A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object whose settings are used to initialize the created object's properties.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(GraphicsUnit)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the dpi of the specified graphics unit.
</para>
            </summary>
            <param name="graphicsUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(Int32,Int32,Int32,Int32,Single)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top, bottom and dpi values.

</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.

            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value that specifies the dpi of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(Int32,Int32,Int32,Int32)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top and bottom values.


</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.


            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.#ctor(Int32,Int32,Int32,Int32,GraphicsUnit)">
            <summary>
                <para>Initializes a new instance of the PaddingInfo class with the specified left, right, top and bottom values, and the dpi of the specified graphics unit.

</para>
            </summary>
            <param name="left">
		An integer value that specifies the left value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Left"/> property.


            </param>
            <param name="right">
		An integer value that specifies the right value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Right"/> property.

            </param>
            <param name="top">
		An integer value that specifies the top value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Top"/> property.


            </param>
            <param name="bottom">
		An integer value that specifies the bottom value of the padding. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Bottom"/> property.


            </param>
            <param name="graphicsUnit">
		A <see cref="T:System.Drawing.GraphicsUnit"/> value that specifies the graphics unit of the padding. The dpi value of the graphics unit is assigned to the <see cref="P:DevExpress.XtraPrinting.PaddingInfo.Dpi"/> property.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Bottom">
            <summary>
                <para>Gets or sets the padding value for the bottom edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the bottom edge.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(RectangleF,Single)">
            <summary>
                <para>Deflates the specified rectangle by the rectangle of the current padding with the specified dpi.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Deflate(SizeF,Single)">
            <summary>
                <para>Deflates the specified size by the size of the current padding with the specified dpi.

</para>
            </summary>
            <param name="size">
		A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the deflated size.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(Single,Single)">
            <summary>
                <para>Deflates the specified height value by the height of the current padding with the specified dpi.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateHeight(Single)">
            <summary>
                <para>Deflates the specified height value by the height of the current padding.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be deflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated height.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(Single,Single)">
            <summary>
                <para>Deflates the specified width value by the width of the current padding with the specified dpi.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be deflated.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before deflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated width.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.DeflateWidth(Single)">
            <summary>
                <para>Deflates the specified width value by the width of the current padding.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be deflated.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the deflated width.

</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Dpi">
            <summary>
                <para>Gets or sets the dpi value used to perform internal calculations.
</para>
            </summary>
            <value>A <see cref="T:System.Single"/> value which represents the dpi value for this padding.
</value>


        </member>
        <member name="F:DevExpress.XtraPrinting.PaddingInfo.Empty">
            <summary>
                <para>Provides a PaddingInfo object with no padding.

</para>
            </summary>
            <returns>A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object representing an empty padding.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Equals(Object)">
            <summary>
                <para>Determines whether the specified object is equal to the current PaddingInfo instance.
</para>
            </summary>
            <param name="obj">
		The object to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current PaddingInfo instance; otherwise <b>false</b>.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current PaddingInfo object.

</para>
            </summary>
            <returns>An integer value representing the hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(SizeF,Single)">
            <summary>
                <para>Inflates the specified size by the size of the current padding with the specified dpi.

</para>
            </summary>
            <param name="size">
		A <see cref="T:System.Drawing.SizeF"/> value which specifies the size to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.


            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that represents the inflated size.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.Inflate(RectangleF,Single)">
            <summary>
                <para>Inflates the specified rectangle by the rectangle of the current padding with the specified dpi.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the left, top, right and bottom padding values before inflating.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(Single,Single)">
            <summary>
                <para>Inflates the specified height value by the height of the current padding with the specified dpi.

</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the top and bottom padding values before inflating.


            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateHeight(Single)">
            <summary>
                <para>Inflates the specified height value by the height of the current padding.
</para>
            </summary>
            <param name="height">
		A <see cref="T:System.Single"/> value which specifies the height to be inflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated height.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(Single,Single)">
            <summary>
                <para>Inflates the specified width value by the width of the current padding with the specified dpi.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be inflated.


            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value which should be applied to the left and right padding values before inflating.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated width.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.InflateWidth(Single)">
            <summary>
                <para>Inflates the specified width value by the width of the current padding.

</para>
            </summary>
            <param name="width">
		A <see cref="T:System.Single"/> value which specifies the width to be inflated.

            </param>
            <returns>A <see cref="T:System.Single"/> value that represents the inflated width.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.IsEmpty">
            <summary>
                <para>Determines whether the padding is empty (all padding values are null).
</para>
            </summary>
            <value><b>true</b> if the padding is empty; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Left">
            <summary>
                <para>Gets or sets the padding value for the left edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the left edge.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Right">
            <summary>
                <para>Gets or sets the padding value for the right edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the right edge.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PaddingInfo.RotatePaddingCounterclockwise(Int32)">
            <summary>
                <para>Rotates padding values counterclockwise the specified number of times.
</para>
            </summary>
            <param name="numberOfTimes">
		An integer value which specifies the number of times for padding values to rotate.


            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PaddingInfo.Top">
            <summary>
                <para>Gets or sets the padding value for the top edge.

</para>
            </summary>
            <value>An integer value which represents the padding value (in pixels) for the top edge.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipType.ToolTipType">

            <summary>
                <para>Enumerates tooltip types that are supported by controls.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipType.Default">
            <summary>
                <para>The default tooltip type. The actual tooltip type is determined by a control.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipType.Standard">
            <summary>
                <para>A regular tooltip that consists of the title and contents regions.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipType.SuperTip">
            <summary>
                <para>A <see cref="T:DevExpress.Utils.SuperToolTip"/> that supports multiple text and image regions.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.HtmlExportOptions.HtmlExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to HTML format.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.HtmlExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the HtmlExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.AppearanceOptions.AppearanceOptions">

            <summary>
                <para>Provides appearance options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceOptions"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceOptions.Assign(BaseOptions)">
            <summary>
                <para>Copies all settings from the options object passed as the parameter and assigns them to the current object.
</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseBackColor">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.BackColor"/> property value; <b>false</b> to use the background color specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseBorderColor">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.BorderColor"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.BorderColor"/> property value; <b>false</b> to use the border color specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseFont">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.Font"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.Font"/> property value; <b>false</b> to use the font settings specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseForeColor">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property value; <b>false</b> to use the foreground color specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseImage">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property value; <b>false</b> to use the background image specified by the parent appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptions.UseTextOptions">
            <summary>
                <para>Gets or sets whether to use the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions"/> property value.
</para>
            </summary>
            <value><b>true</b> to use the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions"/> property value; <b>false</b> to use the text options specified by the parent appearance object.
</value>


        </member>
        <member name="T:DevExpress.Utils.AppearanceObject.AppearanceObject">

            <summary>
                <para>Represents an appearance object.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified parent.
</para>
            </summary>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(IAppearanceOwner,Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>
            <param name="fake">
		A boolean value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(AppearanceObject,AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class.
</para>
            </summary>
            <param name="main">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> representing the appearance object whose settings are used to initialize the created object's properties.

            </param>
            <param name="defaultAppearance">
		A <b>DefaultAppearance</b> object representing default appearance settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(AppearanceDefault)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with default settings.
</para>
            </summary>
            <param name="appearanceDefault">
		A <see cref="T:DevExpress.Utils.AppearanceDefault"/> object containing the default appearance settings.


            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(IAppearanceOwner,AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified owner and parent appearance object.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(AppearanceObject,AppearanceDefault)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified settings.
</para>
            </summary>
            <param name="main">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose settings are used to initialize the created object's properties.

            </param>
            <param name="appearanceDefault">
		A <see cref="T:DevExpress.Utils.AppearanceDefault"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(IAppearanceOwner,AppearanceObject,String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified owner, parent and name.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.#ctor(AppearanceObject,String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObject"/> class with the specified name and parent.
</para>
            </summary>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Assign(AppearanceObject)">
            <summary>
                <para>Copies all settings from the appearance object passed as a parameter.
</para>
            </summary>
            <param name="val">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the source of the operation.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Assign(AppearanceDefault)">
            <summary>
                <para>Sets the appearance object's settings to default values.
</para>
            </summary>
            <param name="appearanceDefault">
		An <b>AppearanceDefault</b> object containing default appearance settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.AssignInternal(AppearanceObject)">
            <summary>
                <para>Copies all the settings in the appearance object passed as the parameter to the current object without raising the <see cref="E:DevExpress.Utils.AppearanceObject.Changed"/> event.
</para>
            </summary>
            <param name="val">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the source of the operation.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.BackColor">
            <summary>
                <para>Gets or sets the background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object specifying the background color.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.BackColor2">
            <summary>
                <para>Gets or sets the ending color of the  background's gradient brush.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object specifying the ending color of the linear gradient brush used to fill the background.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.BeginUpdate">
            <summary>
                <para>Prevents the <see cref="E:DevExpress.Utils.AppearanceObject.Changed"/> event from being fired.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.BorderColor">
            <summary>
                <para>Gets or sets the border color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object specifying the border color.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcDefaultTextSize(Graphics)">
            <summary>
                <para>Calculates the size of the string painted with the font specified by the current object.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(GraphicsCache,StringFormat,String,Int32)">
            <summary>
                <para>Calculates the length of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for pens, fonts and brushes.

            </param>
            <param name="sf">
		A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as line spacing and alignment, for the string.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size, in pixels, of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(GraphicsCache,String,Int32)">
            <summary>
                <para>Calculates the length of the specified string.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides storage for the pens, fonts and brushes used.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(Graphics,StringFormat,String,Int32)">
            <summary>
                <para>Calculates the length of the specified string drawn with the specified <see cref="T:System.Drawing.StringFormat"/> object.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.

            </param>
            <param name="sf">
		A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as the line spacing for the string.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CalcTextSize(Graphics,String,Int32)">
            <summary>
                <para>Calculates the length of the specified string.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object which provides painting facilities.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.CancelUpdate">
            <summary>
                <para>Unlocks the appearance object after a call to the <see cref="M:DevExpress.Utils.AppearanceObject.BeginUpdate"/> method without raising the <see cref="E:DevExpress.Utils.AppearanceObject.Changed"/> event.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.AppearanceObject.Changed">
            <summary>
                <para>Fires when the appearance object's properties are changed. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Clone">
            <summary>
                <para>Creates a copy of the current <see cref="T:DevExpress.Utils.AppearanceObject"/> instance.
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents an exact copy of the current appearance object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Combine(AppearanceObject)">
            <summary>
                <para>Copies the activated settings from the appearance object passed as the parameter.
</para>
            </summary>
            <param name="val">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose settings are going to be copied.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.ControlAppearance">
            <summary>
                <para>Gets the default appearance settings which are used to paint 3-D elements in Windows.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the default appearance settings used to paint 3-D elements in Windows.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.DefaultFont">
            <summary>
                <para>Gets the default font of the appearance object.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which represents the default font. The default value is the <b>Tahoma</b> font.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Dispose">
            <summary>
                <para>Releases all resources used by the current appearance object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(Graphics,GraphicsCache,Rectangle)">
            <summary>
                <para>Draws the background.
</para>
            </summary>
            <param name="graphics">
		A <see cref="T:System.Drawing.Graphics"/> object that provides a means for painting.

            </param>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(GraphicsCache,Rectangle)">
            <summary>
                <para>Draws the background for the area contained within the specified boundary.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(Graphics,GraphicsCache,Rectangle,Boolean)">
            <summary>
                <para>Draws the background for the area contained within the specified boundary.
</para>
            </summary>
            <param name="graphics">
		A <see cref="T:System.Drawing.Graphics"/> object that provides a means for painting.

            </param>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>
            <param name="useZeroOffset">
		A Boolean value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawBackground(GraphicsCache,Rectangle,Boolean)">
            <summary>
                <para>Draws the background for the area contained within the specified boundary.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the drawing area.

            </param>
            <param name="useZeroOffset">
		A Boolean value.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(GraphicsCache,String,Rectangle)">
            <summary>
                <para>Draws a text string at the specified position.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(GraphicsCache,String,Rectangle,Brush)">
            <summary>
                <para>Draws a text string at the specified position using the specified color.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which determines the color and texture of the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(GraphicsCache,String,Rectangle,Brush,StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified color and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which determines the color and texture of the drawn text.

            </param>
            <param name="format">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(GraphicsCache,String,Rectangle,StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="format">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(GraphicsCache,String,Rectangle,Font,StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified font and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="format">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawString(GraphicsCache,String,Rectangle,Font,Brush,StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="s">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.DrawVString(GraphicsCache,String,Font,Brush,Rectangle,StringFormat,Int32)">
            <summary>
                <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which provides the storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="text">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.

            </param>
            <param name="angle">
		An integer value specifying the angle in degrees at which the text should be drawn.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.EndUpdate">
            <summary>
                <para>Unlocks the appearance object after a call to the <see cref="M:DevExpress.Utils.AppearanceObject.BeginUpdate"/> method. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.FillRectangle(GraphicsCache,Rectangle)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.FillRectangle(GraphicsCache,Rectangle,Boolean)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object providing storage for the pens, fonts and brushes used during painting.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing area.

            </param>
            <param name="useZeroOffset">
		A Boolean value.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Font">
            <summary>
                <para>Gets or sets the font used to paint the text.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object specifying the font used to display the contents of elements.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.FontHeight">
            <summary>
                <para>Gets the  height of the font used by the apperance object.
</para>
            </summary>
            <value>An integer value which specifies the font's height.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.ForeColor">
            <summary>
                <para>Gets or sets the foreground color. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure specifying the foreground color.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackBrush(GraphicsCache)">
            <summary>
                <para>Gets the solid brush used to draw the element's background.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackBrush(GraphicsCache,Rectangle)">
            <summary>
                <para>Gets the brush used to draw an element's background.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure specifying the rectangle for which a brush is created.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackColor">
            <summary>
                <para>Gets the background color specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> object representing the background color specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackColor2">
            <summary>
                <para>Gets the ending color of the linear gradient brush, specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> object representing the ending color of the linear gradient brush as specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBackPen(GraphicsCache)">
            <summary>
                <para>Gets the pen used to draw the element's background lines and curves.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBorderBrush(GraphicsCache)">
            <summary>
                <para>Gets the brush used to draw the element's border.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing a brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBorderColor">
            <summary>
                <para>Gets the element's border color specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> object representing the element's border color specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetBorderPen(GraphicsCache)">
            <summary>
                <para>Gets the pen used to draw the border's lines and curves. 
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetFont">
            <summary>
                <para>Gets the font settings specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Font"/> object specifying the font used to display the contents of elements.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetForeBrush(GraphicsCache)">
            <summary>
                <para>Gets the solid brush whose color is specified by the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing a brush specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetForeColor">
            <summary>
                <para>Gets the foreground color specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Color"/> structure specifying the element content's foreground color.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetForePen(GraphicsCache)">
            <summary>
                <para>Gets the pen whose color is specified by the <see cref="P:DevExpress.Utils.AppearanceObject.ForeColor"/> property.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to the pens and brushes used for painting.

            </param>
            <returns>A <see cref="T:System.Drawing.Pen"/> object representing a pen specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetGradientMode">
            <summary>
                <para>Gets the background gradient's direction specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value giving the gradient's direction as specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetImage">
            <summary>
                <para>Gets the background image specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.Image"/> object representing the element's background image as specified by the appearance object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormat">
            <summary>
                <para>Gets the formatting attributes specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetStringFormat(TextOptions)">
            <summary>
                <para>Gets the formatting attributes specified by the <see cref="P:DevExpress.Utils.AppearanceObject.TextOptions"/> object passed as the parameter.
</para>
            </summary>
            <param name="defaultOptions">
		A <see cref="T:DevExpress.Utils.TextOptions"/> object which provides the text settings.

            </param>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes (such as the line spacing and alignment) based on the text settings specified.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetTextOptions">
            <summary>
                <para>Gets the text options specified by the appearance object's settings.
</para>
            </summary>
            <returns>A <b>TextOptions</b> object containing the text options.
</returns>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.GetTextureBrush">
            <summary>
                <para>Returns a TextureBrush object which uses the image specified by the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property to fill the interior of a shape.
</para>
            </summary>
            <returns>A System.Drawing.TextureBrush object which represents the brush that fills the interior of a shape with the image specified by the <see cref="P:DevExpress.Utils.AppearanceObject.Image"/> property.
</returns>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.GradientMode">
            <summary>
                <para>Gets or sets the background gradient's direction.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value specifying the gradient's direction.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.HAlignment">
            <summary>
                <para>Gets the horizontal alignment of the appearance object's text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the text.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Image">
            <summary>
                <para>Gets or sets the background image.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object specifying the background image.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.IsDisposed">
            <summary>
                <para>Gets whether the current object has been disposed of.
</para>
            </summary>
            <value><b>true</b> if the current object has been disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Name">
            <summary>
                <para>Gets or sets the name of the current appearance object.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the name of the current appearance object.
</value>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.Options">
            <summary>
                <para>Provides access to the appearance object's options.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceOptions"/> object containing the appearance options.
</value>


        </member>
        <member name="E:DevExpress.Utils.AppearanceObject.PaintChanged">
            <summary>
                <para>Occurs when specific settings that control the text appearance are changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.ParentAppearance">
            <summary>
                <para>Gets the parent appearance object.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object representing the parent appearance object. <b>null</b> (<b>Nothing</b> in Visual Basic) if no parent appearance object is assigned.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.Reset">
            <summary>
                <para>Reverts the appearance object's properties to their default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.Utils.AppearanceObject"/> should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="E:DevExpress.Utils.AppearanceObject.SizeChanged">
            <summary>
                <para>Occurs when specific settings that control the size of text are changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObject.TextOptions">
            <summary>
                <para>Provides access to the appearance object's text options.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object containing text options.
</value>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObject.ToString">
            <summary>
                <para>Returns a string representing the current appearance object.
</para>
            </summary>
            <returns>A <see cref="T:System.String"/> value which represents an appearance object.
</returns>


        </member>
        <member name="T:DevExpress.XtraPrinting.PageInfo.PageInfo">

            <summary>
                <para>Contains the values that define what kind of information is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.DateTime">
            <summary>
                <para>Indicates that <B>DateTime</B> information is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.None">
            <summary>
                <para>Indicates that the <see cref="P:DevExpress.XtraPrinting.PageInfoBrick.Format"/> property value is displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.Number">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.NumberOfTotal">
            <summary>
                <para>Indicates that both the current page number and the total number of pages in the current report are displayed in the current <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.RomHiNumber">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in uppercase.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.RomLowNumber">
            <summary>
                <para>Indicates that the current page number is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/> using roman numerals in lowercase.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PageInfo.UserName">
            <summary>
                <para>Indicates that the user name for the current thread is displayed in the <see cref="T:DevExpress.XtraPrinting.PageInfoBrick"/>.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickAlignment.BrickAlignment">

            <summary>
                <para>Specifies brick alignment relative to its layout rectangle.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Center">
            <summary>
                <para>Specifies whether a brick is aligned by the center of the layout rectangle.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Far">
            <summary>
                <para>Specifies wheter a brick is aligned away from the original position of the layout rectangle.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.Near">
            <summary>
                <para>Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickAlignment.None">
            <summary>
                <para>Cancels brick alignment.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BorderSide.BorderSide">

            <summary>
                <para>Specifies the borders displayed around a brick.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.All">
            <summary>
                <para>Applies all borders to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Bottom">
            <summary>
                <para>Applies the bottom border to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Left">
            <summary>
                <para>Applies the left border to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.None">
            <summary>
                <para>No borders are applied to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Right">
            <summary>
                <para>Applies the right border to a brick.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BorderSide.Top">
            <summary>
                <para>Applies the top border to a brick.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.DXMouseEventArgs.DXMouseEventArgs">

            <summary>
                <para>Provides data for the mouse events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.#ctor(MouseButtons,Int32,Int32,Int32,Int32)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> class with the specified parameters.
</para>
            </summary>
            <param name="buttons">
		A <see cref="T:System.Windows.Forms.MouseButtons"/> enumeration value that defines which mouse button was pressed. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Button"/> property.

            </param>
            <param name="clicks">
		An integer value which specifies the number of times the mouse button was pressed and released. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Clicks"/> property.

            </param>
            <param name="x">
		An integer value which specifies the x-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.X"/> property.

            </param>
            <param name="y">
		An integer value which specifies the y-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Y"/> property.

            </param>
            <param name="delta">
		An integer value which specifies a signed count of the number of detents the mouse wheel has rotated. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Delta"/> property.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.#ctor(MouseButtons,Int32,Int32,Int32,Int32,Boolean)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> class.
</para>
            </summary>
            <param name="buttons">
		A <see cref="T:System.Windows.Forms.MouseButtons"/> enumeration value that defines which mouse button was pressed. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Button"/> property.

            </param>
            <param name="clicks">
		An integer value which specifies the number of times the mouse button was pressed and released. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Clicks"/> property.

            </param>
            <param name="x">
		An integer value which specifies the x-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.X"/> property.

            </param>
            <param name="y">
		An integer value which specifies the y-coordinate of a mouse click, in pixels. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Y"/> property.

            </param>
            <param name="delta">
		An integer value which specifies a signed count of the number of detents the mouse wheel has rotated. This value is assigned to the <see cref="P:System.Windows.Forms.MouseEventArgs.Delta"/> property.

            </param>
            <param name="handled">
		<b>true</b> if the event hasn't been handled by a control; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.DXMouseEventArgs.Handled"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.GetMouseArgs(MouseEventArgs)">
            <summary>
                <para>Converts the <see cref="T:System.Windows.Forms.MouseEventArgs"/> object passed as a parameter to a <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object.
</para>
            </summary>
            <param name="eventArgs">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object which contains data for the <b>MouseUp</b>, <b>MouseDown</b>, and <b>MouseMove</b> events.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object which provides data for the mouse events.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.GetMouseArgs(Control,EventArgs)">
            <summary>
                <para>Converts the <see cref="T:System.Windows.Forms.MouseEventArgs"/> object passed as a parameter to a <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object.
</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Windows.Forms.Control"/> descendant.

            </param>
            <param name="eventArgs">
		A <see cref="T:System.Windows.Forms.MouseEventArgs"/> object which contains data for the mouse events.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.DXMouseEventArgs"/> object which provides data for the mouse events.
</returns>


        </member>
        <member name="P:DevExpress.Utils.DXMouseEventArgs.Handled">
            <summary>
                <para>Gets or sets a value specifying whether an event has been handled.
</para>
            </summary>
            <value><b>true</b> if the event hasn't been handled by a control; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.DXMouseEventArgs.Sync">
            <summary>
                <para>For internal use.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.BaseAppearanceCollection.BaseAppearanceCollection">

            <summary>
                <para>Serves as a base for the classes that provide the appearance settings used to paint Developer Express .NET controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Assign(BaseAppearanceCollection)">
            <summary>
                <para>Copies the settings from the object passed as the parameter.
</para>
            </summary>
            <param name="source">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation. If <b>null</b> (<b>Nothing</b> in Visual Basic) this method does nothing.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.AssignInternal(BaseAppearanceCollection)">
            <summary>
                <para>Copies the settings from the object passed as the parameter without raising the <see cref="E:DevExpress.Utils.BaseAppearanceCollection.Changed"/> event.
</para>
            </summary>
            <param name="source">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation. If <b>null</b> (<b>Nothing</b> in Visual Basic) this method does nothing.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.BeginUpdate">
            <summary>
                <para>Prevents the <see cref="E:DevExpress.Utils.BaseAppearanceCollection.Changed"/> event from being fired. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.CancelUpdate">
            <summary>
                <para>Unlocks the collection after a call to the <see cref="M:DevExpress.Utils.BaseAppearanceCollection.BeginUpdate"/> method without raising the <see cref="E:DevExpress.Utils.BaseAppearanceCollection.Changed"/> event. 
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.BaseAppearanceCollection.Changed">
            <summary>
                <para>Fires when the collection is changed.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Combine(BaseAppearanceCollection,AppearanceDefaultInfo[])">
            <summary>
                <para>Copies the activated appearance settings of the object passed as the parameter to the current object, any properties that aren't activated are set to the value in the default appearance object.
</para>
            </summary>
            <param name="appearances">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation.

            </param>
            <param name="defaults">
		An array of DevExpress.Utils.AppearanceDefaultInfo objects which represent the default appearance settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Combine(BaseAppearanceCollection,AppearanceDefaultInfo[],Boolean)">
            <summary>
                <para>Copies the activated appearance settings of the object passed as the parameter and activates their corresponding options, any properties not activated are set to the value in the default appearance object.
</para>
            </summary>
            <param name="appearances">
		A <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> descendant representing the source of the operation.

            </param>
            <param name="defaults">
		An array of DevExpress.Utils.AppearanceDefaultInfo objects which represent the default appearance settings.

            </param>
            <param name="setDefaultUseFlag">
		<b>true</b> to enable options which correspond to the activated appearance settings; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Convert(String,ViewStyle,StyleDefaults)">
            <summary>
                <para>Copies the style settings from the <see cref="T:DevExpress.Utils.ViewStyle"/> object to the <see cref="T:DevExpress.Utils.AppearanceObject"/> object.
</para>
            </summary>
            <param name="styleName">
		A <see cref="T:System.String"/> value which identifies the appearance object.

            </param>
            <param name="style">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object which represents the style whose settings are to be copied.

            </param>
            <param name="styleDefault">
		A <see cref="T:DevExpress.Utils.StyleDefaults"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Dispose">
            <summary>
                <para>Releases all the resources used by the current object. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.EndUpdate">
            <summary>
                <para>Unlocks the collection after a call to the <see cref="M:DevExpress.Utils.BaseAppearanceCollection.BeginUpdate"/> method.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.GetAppearance(String)">
            <summary>
                <para>Gets an appearance object contained within the collection by its name.
</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the required appearance object.

            </param>
            <returns>The <see cref="T:DevExpress.Utils.AppearanceObject"/> object within the collection which has the specified name.
</returns>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.GetEnumerator">
            <summary>
                <para>Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> that can iterate through the hashtable. 
</para>
            </summary>
            <returns>An <see cref="T:System.Collections.IDictionaryEnumerator"/> for the hashtable.
</returns>


        </member>
        <member name="P:DevExpress.Utils.BaseAppearanceCollection.IsDisposed">
            <summary>
                <para>Gets whether the current object has been disposed of.
</para>
            </summary>
            <value><b>true</b> if the current object has been disposed of; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.BaseAppearanceCollection.IsLoading">
            <summary>
                <para>Indicates whether the collection's owner is currently being initialized.
</para>
            </summary>
            <value><b>false</b> always.
</value>


        </member>
        <member name="E:DevExpress.Utils.BaseAppearanceCollection.PaintChanged">
            <summary>
                <para>Occurs when specific settings that control the text appearance are changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.Reset">
            <summary>
                <para>Resets the properties of all the appearance objects within the collection to their default values. 
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromRegistry(String)">
            <summary>
                <para>Restores the appearance settings stored at the specified system registry path. 
</para>
            </summary>
            <param name="path">
		A string value specifying the system registry path. If the specified path doesn't exist, calling this method has no effect.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromStream(Stream)">
            <summary>
                <para>Restores the appearance settings from the specified stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> descendant from which the appearance settings are read.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.RestoreLayoutFromXml(String)">
            <summary>
                <para>Loads the appearance settings stored in the specified XML file.
</para>
            </summary>
            <param name="xmlFile">
		A string value specifying the path to the XML file which contains the appearance settings to be loaded. If the specified file doesn't exist, an exception is raised.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToRegistry(String)">
            <summary>
                <para>Saves the appearance settings to a system registry path.
</para>
            </summary>
            <param name="path">
		A string value specifying the system registry path to which the appearance settings are saved.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToStream(Stream)">
            <summary>
                <para>Saves the appearance settings to a specific stream.
</para>
            </summary>
            <param name="stream">
		A <see cref="T:System.IO.Stream"/> descendant to which the appearance settings are written.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.SaveLayoutToXml(String)">
            <summary>
                <para>Saves the appearance settings to a specific XML file. 
</para>
            </summary>
            <param name="xmlFile">
		A string value specifying the path to the file in which the appearance settings should be stored. If an empty string is specified, an exception is raised.

            </param>


        </member>
        <member name="M:DevExpress.Utils.BaseAppearanceCollection.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.Utils.BaseAppearanceCollection"/> should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="E:DevExpress.Utils.BaseAppearanceCollection.SizeChanged">
            <summary>
                <para>Occurs when specific settings that control text size  are changed.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.AppearanceOptionsEx.AppearanceOptionsEx">

            <summary>
                <para>Provides appearance options.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceOptionsEx.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceOptionsEx"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceOptionsEx.Assign(BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter and assigns them to the current object.
</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.AppearanceOptionsEx.HighPriority">
            <summary>
                <para>Gets or sets whether the settings specified by the current appearance object have the highest priority.
</para>
            </summary>
            <value><b>true</b> to set the current appearance settings to the highest priority; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.AppearanceObjectEx.AppearanceObjectEx">

            <summary>
                <para>Represents an appearance object with extended settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor(IAppearanceOwner)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with the specified owner.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.#ctor(IAppearanceOwner,AppearanceObject,String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> class with the specified settings.
</para>
            </summary>
            <param name="owner">
		An object implementing the <b>IAppearanceOwner</b> interface.

            </param>
            <param name="parentAppearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which represents the parent appearance object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.ParentAppearance"/> property.

            </param>
            <param name="name">
		A <see cref="T:System.String"/> value specifying the name of the created object. This value is assigned to the <see cref="P:DevExpress.Utils.AppearanceObject.Name"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.AppearanceObjectEx.Clone">
            <summary>
                <para>Creates a copy of the current <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> instance.
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.AppearanceObjectEx"/> object which represents an exact copy of the current object.
</returns>


        </member>
        <member name="P:DevExpress.Utils.AppearanceObjectEx.Options">
            <summary>
                <para>Provides access to the appearance object's options.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceOptionsEx"/> object containing the appearance options.
</value>


        </member>
        <member name="T:DevExpress.Utils.Trimming.Trimming">

            <summary>
                <para>List values that specify how the characters in a string that does not completely fit into a layout shape are trimmed.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Trimming.Character">
            <summary>
                <para>Specifies that the text is trimmed to the nearest character.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.Default">
            <summary>
                <para>The trimming is determined by a control's current settings. The default value is automatically set for a control if an end user doesn't specify a value.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.EllipsisCharacter">
            <summary>
                <para>Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.EllipsisPath">
            <summary>
                <para>The center is removed from trimmed lines and replaced by an ellipsis. The algorithm keeps as much of the last slash-delimited segment of the line as possible.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.EllipsisWord">
            <summary>
                <para>Specifies that text is trimmed to the nearest word, and an ellipsis is inserted at the end of a trimmed line.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.None">
            <summary>
                <para>Specifies no trimming.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Trimming.Word">
            <summary>
                <para>Specifies that text is trimmed to the nearest word.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ImageCollection.ImageCollection">

            <summary>
                <para>Represents a collection of <see cref="T:System.Drawing.Image"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ImageCollection.#ctor">
            <summary>
                <para>Initializes a new instance of the ImageCollection class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.#ctor(IContainer)">
            <summary>
                <para>Initializes a new instance of the ImageCollection class with the specified container.
</para>
            </summary>
            <param name="container">
		An objects that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImage(Image)">
            <summary>
                <para>Appends the specified image to the collection.
</para>
            </summary>
            <param name="image">
		The image to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImage(Object,Image)">
            <summary>
                <para>Appends the specified image to the specified list.
</para>
            </summary>
            <param name="images">
		An object that represents the collection of images.

            </param>
            <param name="image">
		The image to add to the specified collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImageStrip(Image)">
            <summary>
                <para>Adds the images from the specified horizontal image strip to the collection.
</para>
            </summary>
            <param name="image">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.AddImageStripVertical(Image)">
            <summary>
                <para>Adds the images from the specified vertical image strip to the collection.
</para>
            </summary>
            <param name="image">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.BeginInit">
            <summary>
                <para>Notifies the image collection that initialization is starting.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ImageCollection.Changed">
            <summary>
                <para>Fires after the image collection has been changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.Clear">
            <summary>
                <para>Removes all images from the collection.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(GraphicsInfoArgs,Object,Int32,Rectangle,Boolean)">
            <summary>
                <para>Draws the specified image in the specified state and at the specified location.
</para>
            </summary>
            <param name="info">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsInfoArgs"/> object.

            </param>
            <param name="images">
		An object that represents the source of the images.

            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.

            </param>
            <param name="enabled">
		<b>true</b> to draw the image in the enabled state; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(GraphicsCache,Object,Int32,Rectangle)">
            <summary>
                <para>Draws the specified image at the specified location.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that specifies the storage for the most commonly used pens, fonts and brushes.

            </param>
            <param name="images">
		An object that represents the source of the images.


            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the drawing area.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(GraphicsCache,Object,Int32,Rectangle,Boolean)">
            <summary>
                <para>Draws the image.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.


            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that identifies the image within the collection.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.

            </param>
            <param name="enabled">
		<b>true</b> to draw an image in enabled state; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.DrawImageListImage(GraphicsCache,Image,Object,Int32,Rectangle,Boolean)">
            <summary>
                <para>Draws the image.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object that provides storage for pens, fonts and brushes used when painting.


            </param>
            <param name="image">
		The <see cref="T:System.Drawing.Image"/> to draw.

            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that identifies the image within the collection.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the bounding rectangle of the image.

            </param>
            <param name="enabled">
		<b>true</b> to draw an image in enabled state; otherwise, <b>false</b>.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.EndInit">
            <summary>
                <para>Notifies the image collection that initialization is complete.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListImage(Object,Int32)">
            <summary>
                <para>Returns the image at the specified position within the specified image list.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <returns>An <see cref="T:System.Drawing.Image"/> descendant that represents the image at the specified position within the specified image list. <b>null</b> (<b>Nothing</b> in Visual Basic) if the image isn't found.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListImageCount(Object)">
            <summary>
                <para>Returns the number of images within the specified source of images.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <returns>An integer value that specifies the number of images within the specified image source.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListSize(Object)">
            <summary>
                <para>Returns the size of the images in the specified image list.
</para>
            </summary>
            <param name="images">
		An object that represents the source of the images.


            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure that specifies the height and width of the images in the specified list. <see cref="F:System.Drawing.Size.Empty"/> if <i>images</i> is <b>null</b> (<b>Nothing</b> in Visual Basic) or isn't a source of images.

</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.GetImageListSize(Image,Object,Int32)">
            <summary>
                <para>Gets the size of the specified image or of an image in the image list addressed by a specific index.

</para>
            </summary>
            <param name="image">
		An image whose size is returned.


            </param>
            <param name="images">
		An object that represents the source of images. This parameter is in effect if the <i>image</i> parameter is set to <b>null</b>.


            </param>
            <param name="index">
		The index of the required image in the <i>images</i> list.

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> value that specifies the size of a specific image.

</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.ImageFromFile(String)">
            <summary>
                <para>Returns the image stored in the specified file.
</para>
            </summary>
            <param name="fileName">
		A string that specifies the full path to the file.

            </param>
            <returns>A <see cref="T:System.Drawing.Image"/> object that represents the image stored in the specified file; <b>null</b> if the image cannot be loaded.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.Images">
            <summary>
                <para>Provides access to the collection of images.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Images"/> object that represents the collection of images.
</value>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.ImageSize">
            <summary>
                <para>Gets or sets the size of the images in the image list.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> structure which specifies the height and width of the images in the list.
</value>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.ImageStream">
            <summary>
                <para>Gets or sets the handle to the <see cref="T:System.Windows.Forms.ImageListStreamer"/> associated with the current image collection.

</para>
            </summary>
            <value>A handle to the <see cref="T:System.Windows.Forms.ImageListStreamer"/> for the current image collection. <b>null</b> (<b>Nothing</b> in Visual Basic) if the current image collection is empty.
</value>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsImageExists(Image,Object,Int32)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="image">
		The <see cref="T:System.Drawing.Image"/>.

            </param>
            <param name="images">
		An object that represents the image source.

            </param>
            <param name="index">
		An integer value that specifies the position of the image within the collection.

            </param>
            <returns>The Boolean value.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ImageCollection.IsImageListImageExists(Object,Int32)">
            <summary>
                <para>Determines whether the image exists at the specified position within the specified source of images.
</para>
            </summary>
            <param name="images">
		An object that represents the source of images.

            </param>
            <param name="index">
		A zero-based integer that specifies the index of the image within the <i>images</i>.

            </param>
            <returns><b>true</b> if the image exists at the specified position within the specified source of images; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ImageCollection.TransparentColor">
            <summary>
                <para>Gets or sets the color to treat as transparent.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Color"/> which represents the color that is not rendered when the image is drawn.
</value>


        </member>
        <member name="T:DevExpress.Utils.EditorShowMode.EditorShowMode">

            <summary>
                <para>Contains values that specify how an in-place editor is activated for a cell in a container control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.Click">
            <summary>
                <para>If a cell is focused and not being edited, an in-place editor is opened on a click. Clicking a non-focused cell focuses the cell first, a subsequent click activates the in-place editor (if not prohibited).
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.Default">
            <summary>
                <para>Specifies the default behavior.
<para>
For the XtraGrid control, this option acts as the <see cref="F:DevExpress.Utils.EditorShowMode.Click"/> option if multiple cell selection is enabled (see the <see cref="F:DevExpress.XtraGrid.Views.Grid.GridMultiSelectMode.CellSelect"/> topic). Otherwise, this option acts as the <see cref="F:DevExpress.Utils.EditorShowMode.MouseDown"/> option.
</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.MouseDown">
            <summary>
                <para>A cell's in-place editor is activated when a mouse button is pressed.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.EditorShowMode.MouseUp">
            <summary>
                <para>A cell's in-place editor is activated when a mouse button is released from a click within the cell.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.HtmlExportMode.HtmlExportMode">

            <summary>
                <para>Lists the ways in which a document can be exported to HTML format.



</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.HtmlExportMode.DifferentFiles">
            <summary>
                <para>A document is exported to multiple files, page-by-page. In this mode every document page is exported to a single HTML file.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.HtmlExportMode.SingleFile">
            <summary>
                <para>A document is exported to a single file. Note that in this mode page headers and footers are added to the resulting HTML file only once, at the beginning and at the end of the document.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.HtmlExportMode.SingleFilePageByPage">
            <summary>
                <para>A document is exported to a single file, page-by-page. In this mode all pages are exported one under another, separated by page borders (which are specified by the <see cref="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.PageBorderWidth"/> and <see cref="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.PageBorderColor"/> properties).


</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.TextExportOptions.TextExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to Text format.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.TextExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the TextExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.TextExportOptions.#ctor(String,Encoding)">
            <summary>
                <para>Initializes a new instance of the TextExportOptions class with the specified separator and encoding settings.

</para>
            </summary>
            <param name="separator">
		A <see cref="T:System.String"/> containing symbols which will be used to separate the document's text elements in the created text file. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.TextExportOptionsBase.Separator"/> property.


            </param>
            <param name="encoding">
		A <see cref="T:System.Text.Encoding"/> class descendant specifying the encoding of the created text document. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.TextExportOptionsBase.Encoding"/> property.

            </param>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextExportOptions.DefaultSeparator">
            <summary>
                <para>Contains the default value for the <see cref="P:DevExpress.XtraPrinting.TextExportOptionsBase.Separator"/> property. By default, when a document is exported to a Text file, this value is equal to "<b>\t</b>".
</para>
            </summary>
            <returns>$
</returns>


        </member>
        <member name="T:DevExpress.XtraPrinting.RtfExportOptions.RtfExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to RTF format.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.RtfExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the RtfExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.RtfExportOptions.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the RtfExportOptions object passed as a parameter.

</para>
            </summary>
            <param name="source">
		An RtfExportOptions object (which is the <see cref="T:DevExpress.XtraPrinting.ExportOptionsBase"/> descendant) whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.ExportOptionsBase.ExportOptionsBase">

            <summary>
                <para>Represents the base class for objects which define specific export options.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ExportOptionsBase.#ctor">
            <summary>
                <para>Initializes a new instance of the ExportOptionsBase class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.ExportOptionsBase.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the ExportOptionsBase object passed as a parameter.

</para>
            </summary>
            <param name="source">
		An ExportOptionsBase object whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXSubMenuItem.DXSubMenuItem">

            <summary>
                <para>Represents a submenu.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor(String)">
            <summary>
                <para>Initializes a new instance of the DXSubMenuItem class with the specified caption.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor">
            <summary>
                <para>Initializes a new instance of the DXSubMenuItem class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.#ctor(String,EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXSubMenuItem class with the specified caption and the handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="beforePopup">
		An event handler that will be invoked when the submenu is about to be displayed. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.

            </param>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup">
            <summary>
                <para>Occurs when the items of the current submenu are about to be displayed onscreen.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.Dispose">
            <summary>
                <para>Releases all the resources used by the current object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXSubMenuItem.GenerateBeforePopupEvent">
            <summary>
                <para>Invokes the event handler assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXSubMenuItem.Items">
            <summary>
                <para>Gets a collection of items displayed when the current submenu is expanded.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Menu.DXMenuItemCollection"/> object which contains menu items displayed when the submenu is expanded.
</value>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXMenuCheckItem.DXMenuCheckItem">

            <summary>
                <para>Represents a menu item that can be checked and unchecked.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(String)">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with the specified caption.
</para>
            </summary>
            <param name="caption">
		A string that specifies the menu item's caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(String,Boolean,Image,EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with the specified caption, image, check state and event handler.
</para>
            </summary>
            <param name="caption">
		A string that specifies the menu item's caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="check">
		A Boolean value that specifies the menu item's check state. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked"/> property.

            </param>
            <param name="image">
		An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image"/> property.

            </param>
            <param name="checkedChanged">
		An event handler that will be invoked when the check state is toggled. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuCheckItem.CheckedChanged"/> event.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor(String,Boolean)">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with the specified caption and check state.
</para>
            </summary>
            <param name="caption">
		A string that specifies the menu item's caption. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="check">
		A Boolean value that specifies the menu item's check state. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.#ctor">
            <summary>
                <para>Initializes a new instance of the DXMenuCheckItem class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuCheckItem.Checked">
            <summary>
                <para>Gets or sets a value indicating whether the menu item is checked.
</para>
            </summary>
            <value><b>true</b> if the menu item is checked; otherwise, <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXMenuCheckItem.CheckedChanged">
            <summary>
                <para>Occurs when the menu item's check state is toggled.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuCheckItem.Dispose">
            <summary>
                <para>Releases all the resources used by the current object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXMenuItem.DXMenuItem">

            <summary>
                <para>Represents a regular menu item.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(String,EventHandler,Image)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption, image and <b>Click</b> event handler
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>
            <param name="image">
		An image that is displayed within the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Image"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(String,EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption and <b>Click</b> event handler
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>
            <param name="click">
		An event handler that will be invoked when the menu item is clicked or selected. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.#ctor(String)">
            <summary>
                <para>Initializes a new instance of the DXMenuItem class with the specified caption.
</para>
            </summary>
            <param name="caption">
		A string that specifies the text displayed by the menu item. This value is assigned to the <see cref="P:DevExpress.Utils.Menu.DXMenuItem.Caption"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.BeginGroup">
            <summary>
                <para>Gets or sets whether the current menu item starts a group.
</para>
            </summary>
            <value><b>true</b> if the menu item starts a group; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Caption">
            <summary>
                <para>Specifies the text displayed within the menu item.
</para>
            </summary>
            <value>A string that specifies the text displayed within the menu item.
</value>


        </member>
        <member name="E:DevExpress.Utils.Menu.DXMenuItem.Click">
            <summary>
                <para>Occurs when the menu item's functionality needs to be invoked.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Collection">
            <summary>
                <para>Gets the menu item collection which owns the current menu item.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Menu.DXMenuItemCollection"/> collection which owns the current menu item.
</value>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.Dispose">
            <summary>
                <para>Releases all the resources used by the current object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Enabled">
            <summary>
                <para>Gets or sets whether the menu item is enabled.
</para>
            </summary>
            <value><b>true</b> if the menu item is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXMenuItem.GenerateClickEvent">
            <summary>
                <para>Invokes the event handler assigned to the <see cref="E:DevExpress.Utils.Menu.DXMenuItem.Click"/> event.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Image">
            <summary>
                <para>Gets or sets an image displayed within the menu item,
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object that specifies the image displayed within the menu item.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Shortcut">
            <summary>
                <para>Gets or sets a shortcut displayed within the menu item
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Shortcut"/> value that specifies a shortcut.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Tag">
            <summary>
                <para>Gets or sets the data associated with the menu item.
</para>
            </summary>
            <value>An object that contains the information which is associated with the menu item.
</value>


        </member>
        <member name="P:DevExpress.Utils.Menu.DXMenuItem.Visible">
            <summary>
                <para>Gets or sets whether the menu item is visible.
</para>
            </summary>
            <value><b>true</b> if the menu item is visible; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.DefaultToolTipController.DefaultToolTipController">

            <summary>
                <para>Represents the Default ToolTipController.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.#ctor">
            <summary>
                <para>Initializes a new instance of the DefaultToolTipController class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.#ctor(IContainer)">
            <summary>
                <para>Initializes a new instance of the DefaultToolTipController class with the specified container.
</para>
            </summary>
            <param name="container">
		An objects that implements the <see cref="T:System.ComponentModel.IContainer"/> interface.

            </param>


        </member>
        <member name="P:DevExpress.Utils.DefaultToolTipController.DefaultController">
            <summary>
                <para>Returns the object which represents the Default ToolTipController.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipController"/> object which represents the Default ToolTipController.
</value>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetSuperTip(Control)">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the specified control.
</para>
            </summary>
            <param name="control">
		A control whose SuperToolTip object is to be obtained.


            </param>
            <returns>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the control.
</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetTitle(Control)">
            <summary>
                <para>Gets a regular tooltip's title displayed within the specified control.

</para>
            </summary>
            <param name="control">
		A control whose tooltip's title is to be obtained.


            </param>
            <returns>A string representing a regular tooltip's title for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetToolTip(Control)">
            <summary>
                <para>Gets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control whose tooltip should be obtained.


            </param>
            <returns>A string representing a regular tooltip for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.GetToolTipIconType(Control)">
            <summary>
                <para>Gets the type of the icon displayed within the specified control's regular tooltip.

</para>
            </summary>
            <param name="control">
		A control whose tooltip's icon type is to be obtained.



            </param>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the icon type displayed within the specified control's regular tooltip. 



</returns>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetSuperTip(Control,SuperToolTip)">
            <summary>
                <para>Associates a <see cref="T:DevExpress.Utils.SuperToolTip"/> object with the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.SuperToolTip"/> object to associate with the control.

            </param>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetTitle(Control,String)">
            <summary>
                <para>Sets a regular tooltip's title for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set a regular tooltip's title.


            </param>
            <param name="value">
		A string representing a regular tooltip's title.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetToolTip(Control,String)">
            <summary>
                <para>Sets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A string representing a regular tooltip.


            </param>


        </member>
        <member name="M:DevExpress.Utils.DefaultToolTipController.SetToolTipIconType(Control,ToolTipIconType)">
            <summary>
                <para>Sets the type of the icon displayed within the specified control's regular tooltip.

</para>
            </summary>
            <param name="control">
		A control for which the icon type is set.



            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon that should be displayed within the specified control's regular tooltip.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControlInfo.ToolTipControlInfo">

            <summary>
                <para>Contains tooltip information.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(Object,String,String)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text and title. 
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="title">
		A string that specifies a tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(Object,String,Boolean,ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text, icon type and delay flag.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="immediateToolTip">
		A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(Object,String,String,Boolean,ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text, title, icon type and delay flag.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="title">
		A string that specifies a tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> property.

            </param>
            <param name="immediateToolTip">
		A Boolean value that specifies whether a tooltip needs to be displayed immediately or after a delay. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(Object,String,String,ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text, title and icon type.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="title">
		A string that specifies a tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Title"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(Object,String,ToolTipIconType)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier, tooltip text and icon type.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of predefined icon to display in a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.IconType"/>

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControlInfo.#ctor(Object,String)">
            <summary>
                <para>Initializes a new instance of the ToolTipControlInfo class with the specified identifier and tooltip text.
</para>
            </summary>
            <param name="_object">
		An object used as an identifier of the currently processed visual element. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Object"/> property.

            </param>
            <param name="text">
		A string that specifies a tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControlInfo.Text"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.IconType">
            <summary>
                <para>Gets or sets the kind of predefined icon to display in a tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value specifying the kind of predefined icon to display.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ImmediateToolTip">
            <summary>
                <para>Gets or sets whether a tooltip will be displayed immediately or after a delay.
</para>
            </summary>
            <value>A Boolean value that specifies whether a tooltip will be displayed immediately after an event handler call.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Interval">
            <summary>
                <para>Gets or sets the interval that must pass before a tooltip is displayed.
</para>
            </summary>
            <value>An integer value that specifies the delay, in milliseconds.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Object">
            <summary>
                <para>Gets or sets an object which uniquely identifies the currently processed element.
</para>
            </summary>
            <value>An object which uniquely identifies the currently processed element.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.SuperTip">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.Utils.SuperToolTip"/> that will be displayed if the <see cref="P:DevExpress.Utils.ToolTipControlInfo.ToolTipType"/> property is set to <b>SuperTip</b>
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object that has been assigned to this property. The default value is <b>null</b>. 

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Text">
            <summary>
                <para>Gets or sets the tooltip's text.
</para>
            </summary>
            <value>A string that specifies the tooltip's text.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.Title">
            <summary>
                <para>Gets or sets the tooltip's title.
</para>
            </summary>
            <value>A string that specifies the tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipImage">
            <summary>
                <para>Gets or sets the image to display within the current tooltip.
</para>
            </summary>
            <value>An <see cref="T:System.Drawing.Image"/> object that specifies the image to display within the current tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipLocation">
            <summary>
                <para>Gets or sets the tooltip location.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> enumeration value.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipPosition">
            <summary>
                <para>Gets or sets the tooltip's position in screen coordinates.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure that specifies the tooltip's position, in pixels, relative to the top left corner of the screen.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControlInfo.ToolTipType">
            <summary>
                <para>Gets or sets the type of tooltip to be displayed.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltip to be displayed.

</value>


        </member>
        <member name="T:DevExpress.Utils.HideException.HideException">

            <summary>
                <para>Prevents default actions when handling specific events. 
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.HideException.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.HideException"/> class instance.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.ToolTipControllerGetActiveObjectInfoEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.#ctor(Control,Object,ToolTipControlInfo,Point)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerGetActiveObjectInfoEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		The control for which a tooltip controller's event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The element of the control (or the type of the element) for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="info">
		An object which uniquely identifies the current element for which the tooltip is displayed. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.Info"/> property.

            </param>
            <param name="controlMousePosition">
		A <see cref="T:System.Drawing.Point"/> structure that specifies the position of the mouse cursor relative to the control's upper left corner. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.ControlMousePosition"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.ControlMousePosition">
            <summary>
                <para>Gets the position of the mouse cursor relative to the control's upper left corner. 

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure that specifies the position of the mouse cursor relative to the control's upper left corner.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs.Info">
            <summary>
                <para>Gets or sets an object which uniquely identifies the visual element at the current position.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object which identifies the visual element at the current position.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.VScrollBarBase.VScrollBarBase">

            <summary>
                <para>Serves as the base for <see cref="T:DevExpress.XtraEditors.VScrollBar"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraEditors.VScrollBarBase.ScrollBarType">
            <summary>
                <para>Gets the value indicating whether the scroll bar is horizontal or vertical.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying scroll bar orientation.
</value>


        </member>
        <member name="T:DevExpress.Utils.Controls.ControlBase.ControlBase">

            <summary>
                <para>Represents the base class for most controls and editors available in the <b>XtraEditors</b> library, along with their descendants.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.#ctor">
            <summary>
                <para>Initializes a new instance of the ControlBase class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.ClearPrefferedSizeCache(Control)">
            <summary>
                <para>Clears the value of the size of a rectangular area, into which the specified control can fit, from the program cache.

</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Windows.Forms.Control"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Controls.ControlBase.GetValidationCanceled(Control)">
            <summary>
                <para>Returns the <b>ValidationCancelled</b> property value of a control, if this property exists.
</para>
            </summary>
            <param name="control">
		A <see cref="T:System.Object"/> that represents the control whose <b>ValidationCancelled</b> property value is returned.


            </param>
            <returns><b>true</b> if the validation is cancelled; otherwise, <b>false</b>.

</returns>


        </member>
        <member name="T:DevExpress.XtraPrinting.TextAlignment.TextAlignment">

            <summary>
                <para>Specifies how the text associated with the control should be aligned.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomCenter">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomJustify">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally justified. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomLeft">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned on the left.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.BottomRight">
            <summary>
                <para>The text is vertically aligned at the bottom, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleCenter">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned at the center.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleJustify">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally justified. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleLeft">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned on the left. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.MiddleRight">
            <summary>
                <para>The text is vertically aligned in the middle, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopCenter">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned at the center. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopJustify">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally justified. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopLeft">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned on the left. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.TextAlignment.TopRight">
            <summary>
                <para>The text is vertically aligned at the top, and horizontally aligned on the right. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.ImageSizeMode.ImageSizeMode">

            <summary>
                <para>Specifies how an image is positioned within a <b>picture control</b>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.AutoSize">
            <summary>
                <para>The <b>picture control's</b> size is adjusted to that of the image it contains.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.CenterImage">
            <summary>
                <para>The image is displayed in the center of the <b>picture control</b>. If the image is larger than the <b>picture control</b>, the outside edges are clipped.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.Normal">
            <summary>
                <para>The image is placed in the upper-left corner of the <b>picture control</b>. The image is clipped if it's larger than the <b>picture control</b> which contains it.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.StretchImage">
            <summary>
                <para>The image within the <b>picture control</b> is stretched or shrunk as appropriate to fit the size of the <b>picture control</b>.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.ImageSizeMode.ZoomImage">
            <summary>
                <para>The image is sized proportionally (without clipping), so that it's best fitted to the image control. If the height and width ratio of the image control is the same as the image's ratio it will be resized to exactly fit into the image control. Otherwise the closest fitting side (height or width) of the image will be sized to the control and the other side (height or width) of the image sized proportionally (leaving empty space). 

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.BorderSide.BorderSide">

            <summary>
                <para>Contains values specifying border sides.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.All">
            <summary>
                <para>All border sides are painted. Enabling this flag results in enabling the <B>Left</B>, <B>Top</B>, <B>Right</B> and <B>Bottom</B> flags and disabling the <B>None</B> flag.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Bottom">
            <summary>
                <para>Bottom border side is painted.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Left">
            <summary>
                <para>Left border side is painted.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.None">
            <summary>
                <para>None of border sides is painted. Enabling this option results in disabling all other options.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Right">
            <summary>
                <para>Right border side is painted.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderSide.Top">
            <summary>
                <para>Top border side is painted.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Images.Images">

            <summary>
                <para>Represents a collection of <see cref="T:System.Drawing.Image"/> objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Images.#ctor(ImageCollection)">
            <summary>
                <para>Initializes a new instance of the Images class with the specified owner.
</para>
            </summary>
            <param name="owner">
		An <see cref="T:DevExpress.Utils.ImageCollection"/> object that represents the image collection which owns this object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.Add(Image)">
            <summary>
                <para>Appends the specified image to the current collection of images.

</para>
            </summary>
            <param name="image">
		A <see cref="T:System.Drawing.Image"/> object to append to the collection.


            </param>
            <returns>An integer value indicating the position at which the new element was inserted. <b>-1</b> if the specified image is <b>null</b> (<b>Nothing</b> in Visual Basic) or empty.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Images.AddImageStrip(Image)">
            <summary>
                <para>Adds images from the specified horizontal image strip to the collection.

</para>
            </summary>
            <param name="sourceImage">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.AddImageStripVertical(Image)">
            <summary>
                <para>Adds images from the specified vertical image strip to the collection.

</para>
            </summary>
            <param name="sourceImage">
		The image(s) to add to the collection.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Images.GetImageFromCollection(Image,Int32,Int32,Int32,Int32)">
            <summary>
                <para>Returns an image from the image collection at the specified position within the specified height and width.

</para>
            </summary>
            <param name="iml">
		A <see cref="T:System.Drawing.Image"/> object which resolution settings will be applied to the resulting image.


            </param>
            <param name="width">
		An integer value that specifies the width of the resulting image.

            </param>
            <param name="height">
		An integer value that specifies the height of the resulting image.

            </param>
            <param name="wIndex">
		An integer value that specifies the vertical position of the resulting image in the images collection.


            </param>
            <param name="hIndex">
		An integer value that specifies the horizontal position of the resulting image in the images collection.


            </param>
            <returns>A <see cref="T:System.Drawing.Image"/> object which represents an image at the specified position of the specified size.

</returns>


        </member>
        <member name="P:DevExpress.Utils.Images.Item(Int32)">
            <summary>
                <para>Provides indexed access to individual items in the collection.
</para>
            </summary>
            <param name="index">
		A zero-based integer specifying the desired item's position within the collection. If it's negative or exceeds the last available index, an exception is raised. 

            </param>
            <value>A <see cref="T:System.Drawing.Image"/> object which represents the image at the specified position.

</value>


        </member>
        <member name="T:DevExpress.XtraEditors.HScrollBarBase.HScrollBarBase">

            <summary>
                <para>Serves as the base for <see cref="T:DevExpress.XtraEditors.HScrollBar"/> class.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraEditors.HScrollBarBase.ScrollBarType">
            <summary>
                <para>Gets the value indicating whether the scroll bar is horizontal or vertical.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying the scroll bar's orientation.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.HScrollBar.HScrollBar">

            <summary>
                <para>Represents the horizontal scroll bar control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.HScrollBar.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraEditors.HScrollBar"/> object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.HtmlExportOptionsBase.HtmlExportOptionsBase">

            <summary>
                <para>Represents the base class for objects which define export options specific to HTML and MHT formats.



</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.HtmlExportOptionsBase.#ctor">
            <summary>
                <para>Initializes a new instance of the HtmlExportOptionsBase class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.HtmlExportOptionsBase.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the HtmlExportOptionsBase object passed as a parameter.

</para>
            </summary>
            <param name="source">
		An HtmlExportOptionsBase object (which is the <see cref="T:DevExpress.XtraPrinting.ExportOptionsBase"/> descendant) whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.CharacterSet">
            <summary>
                <para>Gets or sets the encoding name used when exporting a document to HTML.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> representing the encoding name set in the HTML file (e.g. "UTF-8").

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.ExportMode">
            <summary>
                <para>Gets or sets a value indicating how a document is exported to HTML.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.XtraPrinting.HtmlExportMode"/> enumeration value which represents the HTML export mode.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.PageBorderColor">
            <summary>
                <para>Gets or sets the color of page borders when a document is exported to HTML page-by-page.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> value which represents the page border color.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.PageBorderWidth">
            <summary>
                <para>Gets or sets the width (in pixels) of page borders when a document is exported to HTML page-by-page.
</para>
            </summary>
            <value>An integer value which represents the page border width.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.RemoveSecondarySymbols">
            <summary>
                <para>Gets or sets a value indicating whether secondary symbols should be removed from the resulting HTML file, to reduce its size.

</para>
            </summary>
            <value><b>true</b> to remove secondary symbols; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.HtmlExportOptionsBase.Title">
            <summary>
                <para>Gets or sets a title of the created HTML file
</para>
            </summary>
            <value>A <see cref="T:System.String"/> containing the name shown as the title of the created HTML file.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.TextExportOptionsBase.TextExportOptionsBase">

            <summary>
                <para>Represents the base class for objects which define export options specific for Text and CSV formats.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.TextExportOptionsBase.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the TextExportOptionsBase object passed as a parameter.

</para>
            </summary>
            <param name="source">
		An TextExportOptionsBase object (which is the <see cref="T:DevExpress.XtraPrinting.ExportOptionsBase"/> descendant) whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.TextExportOptionsBase.Encoding">
            <summary>
                <para>Gets or sets the encoding of the text-based file to which a report is exported.
</para>
            </summary>
            <value>A <see cref="T:System.Text.Encoding"/> class descendant specifying the encoding of the text-based file.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.TextExportOptionsBase.EncodingType">
            <summary>
                <para>Gets or sets a value used to serialize the <see cref="P:DevExpress.XtraPrinting.TextExportOptionsBase.Encoding"/> property.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.XtraPrinting.EncodingType"/> enumeration value which represents the encoding type of the created text-based document.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.TextExportOptionsBase.Separator">
            <summary>
                <para>Gets or sets the symbol(s) to separate text elements when a document is exported to a Text-based file.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> containing the symbol(s) which will be used to separate text elements in the created Text-based file.
</value>


        </member>
        <member name="T:DevExpress.Utils.Menu.DXPopupMenu.DXPopupMenu">

            <summary>
                <para>Represents a base class for popup menus in Developer Express .NET controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.#ctor">
            <summary>
                <para>Initializes a new instance of the DXPopupMenu class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Menu.DXPopupMenu.#ctor(EventHandler)">
            <summary>
                <para>Initializes a new instance of the DXPopupMenu class with the specified handler for the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.
</para>
            </summary>
            <param name="beforePopup">
		An event handler that will be invoked when the menu is about to be displayed. This value is assigned to the <see cref="E:DevExpress.Utils.Menu.DXSubMenuItem.BeforePopup"/> event.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.PdfJpegImageQuality.PdfJpegImageQuality">

            <summary>
                <para>Specifies how images are exported to PDF format.


</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PdfJpegImageQuality.High">
            <summary>
                <para>The resulting Jpeg image quality is <b>high</b> (the resulting PDF file size is <b>big</b>).

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PdfJpegImageQuality.Highest">
            <summary>
                <para>The resulting Jpeg image quality is the <b>highest</b> (the resulting PDF file size is the <b>biggest</b>).


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PdfJpegImageQuality.Low">
            <summary>
                <para>The resulting Jpeg image quality is <b>low</b> (the resulting PDF file size is <b>small</b>).

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PdfJpegImageQuality.Lowest">
            <summary>
                <para>The resulting Jpeg image quality is the <b>lowest</b> (the resulting PDF file size is the <b>smallest</b>).


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PdfJpegImageQuality.Medium">
            <summary>
                <para>The resulting Jpeg image quality is <b>medium</b> (the resulting PDF file size is also <b>medium</b>).

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.PageByPageExportOptionsBase.PageByPageExportOptionsBase">

            <summary>
                <para>Represents the base class for objects which define specific export options for those export formats which support page-by-page export (HTML, MHT and PDF).

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.PageByPageExportOptionsBase.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the PageByPageExportOptionsBase object passed as a parameter.

</para>
            </summary>
            <param name="source">
		An PageByPageExportOptionsBase object (which is the <see cref="T:DevExpress.XtraPrinting.ExportOptionsBase"/> descendant) whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PageByPageExportOptionsBase.PageRange">
            <summary>
                <para>Gets or sets the range of pages to be exported.


</para>
            </summary>
            <value>A <see cref="T:System.String"/> specifying the range of pages.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.XlsExportOptions.XlsExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to XLS format.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.XlsExportOptions.#ctor(Boolean,Boolean)">
            <summary>
                <para>Initializes a new instance of the XlsExportOptions class with the specified native format and gridlines visibility settings.

</para>
            </summary>
            <param name="useNativeFormat">
		<b>true</b> to use the data format of the exported data fields for the cells in the XLS document; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.XlsExportOptions.UseNativeFormat"/> property.


            </param>
            <param name="showGridLines">
		<b>true</b> to show grid lines in the resulting XLS file; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.XlsExportOptions.ShowGridLines"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.XlsExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the XlsExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.XlsExportOptions.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the XlsExportOptions object passed as a parameter.

</para>
            </summary>
            <param name="source">
		An XlsExportOptions object (which is the <see cref="T:DevExpress.XtraPrinting.ExportOptionsBase"/> descendant) whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.XlsExportOptions.ShowGridLines">
            <summary>
                <para>Gets or sets a value indicating whether the grid lines should be visible in the resulting XLS file.
</para>
            </summary>
            <value><b>true</b> to show the grid lines in the resulting XLS file; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.XlsExportOptions.UseNativeFormat">
            <summary>
                <para>Gets or sets a value indicating whether the cells in the resulting XLS document should use the same formatting as the origin document.

</para>
            </summary>
            <value><b>true</b> to use the data formatting of the exported data fields for the cells in the resulting XLS document; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.XtraScrollableControl.XtraScrollableControl">

            <summary>
                <para>Represents the <b>XtraScrollableControl</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraScrollableControl"/> class.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AlwaysScrollActiveControlIntoView">
            <summary>
                <para>Gets or sets whether the <b>XtraScrollableControl</b>'s view is automatically scrolled to completely display the active control if it is invisible, or partly visible.


</para>
            </summary>
            <value><b>true</b> to automatically scroll the view to completely display the active control if it is invisible, or partly visible; otherwise, <b>false</b>.


</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.Appearance">
            <summary>
                <para>Gets the control's appearance settings.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains appearance settings used to paint the control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScroll">
            <summary>
                <para>Gets or sets whether the <b>XtraScrollableControl</b> enables the user to scroll to any controls placed outside its visible boundaries.

</para>
            </summary>
            <value><b>true</b> to enable auto-scrolling; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollMargin">
            <summary>
                <para>Gets or sets the size of the auto-scroll margin.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the height and width of the auto-scroll margin, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollMinSize">
            <summary>
                <para>Gets or sets the minimum size of the auto-scroll.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the minimum height and width of the area through which a user can scroll, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.AutoScrollPosition">
            <summary>
                <para>Gets or sets the location of the auto-scroll position.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure that represents the auto-scroll position, in pixels.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.BackColor">
            <summary>
                <para>Gets or sets the control's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> value that specifies the control's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.DisplayRectangle">
            <summary>
                <para>Gets the rectangle that represents the <b>XtraScrollableControl</b>'s view area.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> object that represents the control's view area.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.ForeColor">
            <summary>
                <para>Gets or sets the control's foreground color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> value that specifies the control's foreground color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.LookAndFeel">
            <summary>
                <para>Gets the control's look and feel settings.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object that contains look and feel settings.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraScrollableControl.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraEditors.XtraScrollableControl.Scroll">
            <summary>
                <para>Fires when the control's view is scrolled.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.ScrollBarSmallChange">
            <summary>
                <para>Gets or sets the distance the <b>XtraScrollableControl</b>'s view is scrolled when the user clicks one of the scroll buttons.


</para>
            </summary>
            <value>An integer value that specifies the distance, in pixels, the control's view is scrolled when the user clicks one of the scroll buttons.


</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.ScrollControlIntoView(Control)">
            <summary>
                <para>Scrolls the <b>XtraScrollableControl</b>'s view to display the specified control.
</para>
            </summary>
            <param name="activeControl">
		A <see cref="T:System.Windows.Forms.Control"/> descendant that represents the control which is invisible, or partly visible, within the <b>XtraScrollableControl</b>.


            </param>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraScrollableControl.SetAutoScrollMargin(Int32,Int32)">
            <summary>
                <para>Specifies the size of the auto-scroll margin.
</para>
            </summary>
            <param name="x">
		An integer value that specifies the width of the auto-scroll margin, in pixels.

            </param>
            <param name="y">
		An integer value that specifies the height of the auto-scroll margin, in pixels.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraScrollableControl.Text">
            <summary>
                <para>Gets or sets the text associated with the control.
</para>
            </summary>
            <value>A string value that specifies the text associated with the control.
</value>


        </member>
        <member name="T:DevExpress.Utils.WordWrap.WordWrap">

            <summary>
                <para>Enumerates wrapping modes.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.WordWrap.Default">
            <summary>
                <para>Default wrapping mode. The actual wrapping mode is determined by a control.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.WordWrap.NoWrap">
            <summary>
                <para>The word wrapping feature is disabled.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.WordWrap.Wrap">
            <summary>
                <para>The word wrapping feature is enabled.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Locations.Locations">

            <summary>
                <para>Contains values that specify how a specific element is positioned relative to another element.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Locations.Bottom">
            <summary>
                <para>An element is located at the bottom edge of another element.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Default">
            <summary>
                <para>The same as the <see cref="F:DevExpress.Utils.Locations.Top"/> option.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Left">
            <summary>
                <para>An element is located at the left edge of another element.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Right">
            <summary>
                <para>An element is located at the right edge of another element.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Locations.Top">
            <summary>
                <para>An element is located at the top edge of another element.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.ScrollBarType.ScrollBarType">

            <summary>
                <para>Contains values specifying the type of <b>ScrollBar</b> control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.ScrollBarType.Horizontal">
            <summary>
                <para><para>Corresponds to the horizontal orientation of the scroll bar.</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.ScrollBarType.Vertical">
            <summary>
                <para><para>Corresponds to the vertical orientation of the scroll bar.</para>

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.VScrollBar.VScrollBar">

            <summary>
                <para>Represents the vertical scroll bar control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.VScrollBar.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraEditors.VScrollBar"/> object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.VScrollBar.RightToLeft">
            <summary>
                <para>This member overrides <b>Control.RightToLeft</b>.
</para>
            </summary>
            <value>One of the <b>System.Windows.Forms.RightToLeft</b> values.
</value>


        </member>
        <member name="T:DevExpress.Utils.KeyShortcut.KeyShortcut">

            <summary>
                <para>A class used by various controls to provide shortcut keys.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor(Shortcut)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.
</para>
            </summary>
            <param name="shortcut">
		The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor(Keys)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class with the specified shortcut.
</para>
            </summary>
            <param name="key">
		The key combination to initialize the <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property. Values of the <see cref="T:System.Windows.Forms.Keys"/> type can be combined using the OR operator.

            </param>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.KeyShortcut"/> class and sets the shortcut to the <see cref="F:System.Windows.Forms.Keys.None"/> value.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.AltKeyName">
            <summary>
                <para>Gets the name of the ALT key which is dependent upon the end-user's regional settings.

</para>
            </summary>
            <value>A string which specifies the name of the ALT key.
</value>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.ControlKeyName">
            <summary>
                <para>Gets the name of the CONTROL key which is dependent upon the end-user's regional settings.

</para>
            </summary>
            <value>A string which specifies the name of the CONTROL key.
</value>


        </member>
        <member name="F:DevExpress.Utils.KeyShortcut.Empty">
            <summary>
                <para>Gets the static <see cref="T:DevExpress.Utils.KeyShortcut"/> object whose <see cref="P:DevExpress.Utils.KeyShortcut.Key"/> property is set to <see cref="F:System.Windows.Forms.Keys.None"/>. 

</para>
            </summary>
            <returns>The static <see cref="T:DevExpress.Utils.KeyShortcut"/> object with no valid shortcut assigned.
</returns>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.Equals(Object)">
            <summary>
                <para>Tests whether the shortcuts of the current and specified <see cref="T:DevExpress.Utils.KeyShortcut"/> objects are identical.
</para>
            </summary>
            <param name="value">
		The object representing the <see cref="T:DevExpress.Utils.KeyShortcut"/> object.

            </param>
            <returns><b>true</b> if the function parameter represents a <see cref="T:DevExpress.Utils.KeyShortcut"/> object and its shortcut is equal to the shortcut of the current object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current object.
</para>
            </summary>
            <returns>The hash code for the current object.
</returns>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.IsExist">
            <summary>
                <para>Tests whether the current shortcut specifies a valid key combination.
</para>
            </summary>
            <value><b>true</b> if the current shortcut specifies a valid key combination; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.Key">
            <summary>
                <para>Gets the shortcut used to activate particular functionality.
</para>
            </summary>
            <value>The <see cref="T:System.Windows.Forms.Keys"/> value representing the shortcut.
</value>


        </member>
        <member name="P:DevExpress.Utils.KeyShortcut.ShiftKeyName">
            <summary>
                <para>Gets the name of the SHIFT key which is dependent upon the end-user's regional settings.

</para>
            </summary>
            <value>A string which specifies the name of the SHIFT key.
</value>


        </member>
        <member name="M:DevExpress.Utils.KeyShortcut.ToString">
            <summary>
                <para>Gets the text representation of the current shortcut.
</para>
            </summary>
            <returns>The text representation of the current shortcut.
</returns>


        </member>
        <member name="T:DevExpress.XtraEditors.ScrollBarBase.ScrollBarBase">

            <summary>
                <para>Serves as the base for <see cref="T:DevExpress.XtraEditors.HScrollBarBase"/>, <see cref="T:DevExpress.XtraEditors.HScrollBar"/>, <see cref="T:DevExpress.XtraEditors.VScrollBarBase"/> and <see cref="T:DevExpress.XtraEditors.VScrollBar"/> classes.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.#ctor">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraEditors.ScrollBarBase"/> object.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.AutoSize">
            <summary>
                <para>Gets or sets a value specifying whether the scroll bar is autosized.
</para>
            </summary>
            <value><b>true</b> if auto size is applied; otherwise <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.BackColor">
            <summary>
                <para>Overrides the base class <b>BackColor</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object representing the control's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.BackgroundImage">
            <summary>
                <para>Overrides the base class <b>BackgroundImage</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Image"/> object representing the image to display in the control's background.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate">
            <summary>
                <para>Prevents the control from being updated until the <see cref="M:DevExpress.XtraEditors.ScrollBarBase.EndUpdate"/> or <see cref="M:DevExpress.XtraEditors.ScrollBarBase.CancelUpdate"/> method is called.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.CancelUpdate">
            <summary>
                <para>Unlocks the control after a <see cref="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate"/> method call without causing immediate repainting.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.EndUpdate">
            <summary>
                <para>Unlocks the control after a <see cref="M:DevExpress.XtraEditors.ScrollBarBase.BeginUpdate"/> method call and causes its immediate repainting.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Font">
            <summary>
                <para>Overrides the base class <b>Font</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object to apply to the text displayed by the control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ForeColor">
            <summary>
                <para>Overrides the base class <b>ForeColor</b> property.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> object representing the control's foreground color.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetAccessible">
            <summary>
                <para>Returns an object which implements the accessibility information.
</para>
            </summary>
            <returns>A BaseAccessibility object.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetEnabled">
            <summary>
                <para>Returns the value of the control's <b>Enabled</b> property.
</para>
            </summary>
            <returns>The value of the <b>Enabled</b> property.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetHeight">
            <summary>
                <para>Returns the value of the control's <b>Height</b> property.
</para>
            </summary>
            <returns>The value of the <b>Height</b> property.
</returns>


        </member>
        <member name="M:DevExpress.XtraEditors.ScrollBarBase.GetWidth">
            <summary>
                <para>Returns the value of the control's <b>Width</b> property.
</para>
            </summary>
            <returns>The value of the <b>Width</b> property.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ImeMode">
            <summary>
                <para>Gets or sets the Input Method Editor(IME) mode supported by this control.
</para>
            </summary>
            <value>A <b>ImeMode</b> enumeration member specifying the Input Method Editor (IME) status of an object when the object is selected.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.LargeChange">
            <summary>
                <para>Gets or sets the increment applied to the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property when the scroll box is moved by a 'page'.
</para>
            </summary>
            <value>An integer value representing the increment applied when the scroll box is moved by a 'page'.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.LookAndFeel">
            <summary>
                <para>Gets a value providing access to settings controlling the control's look and feel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the control's look and feel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Maximum">
            <summary>
                <para>Gets or sets the upper limit of values of the scrollable range.
</para>
            </summary>
            <value>An integer value representing the value's upper limit.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Minimum">
            <summary>
                <para>Gets or sets the lower limit of the scrollable range.
</para>
            </summary>
            <value>An integer value representing a lower limit.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.ScrollBarBase.Scroll">
            <summary>
                <para>Fires when the scroll thumb has been moved either by a mouse or keyboard action.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSize">
            <summary>
                <para>Gets or sets a value specifying whether the scroll bar is automatically sized.
</para>
            </summary>
            <value><b>true</b> if the auto sizing feature is enabled; otherwise <b>false</b>.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSizeChanged">
            <summary>
                <para>Fires after the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarAutoSize"/> property's value has been changed.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.ScrollBarType">
            <summary>
                <para>Gets the value indicating whether the scroll bar is horizontal or vertical.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.ScrollBarType"/> enumeration member specifying the scroll bar type.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.SmallChange">
            <summary>
                <para>Gets or sets the value by which the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property changes when the user presses one of the arrow keys or clicks one of the scroll-bar buttons.
</para>
            </summary>
            <value>An integer value by which the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property changes.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.TabStop">
            <summary>
                <para>Gets or sets a value indicating whether a user can focus the scroll bar control using the TAB key.
</para>
            </summary>
            <value><b>true</b> if a user can  focus the scroll bar using the TAB key; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Text">
            <summary>
                <para>Overrides the base class <b>Text</b> property.
</para>
            </summary>
            <value>A string value representing the text associated with this control.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.ScrollBarBase.Value">
            <summary>
                <para>Gets or sets a value specifying the scroll box's current position.
</para>
            </summary>
            <value>An integer value representing the scroll box's current position.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.ScrollBarBase.ValueChanged">
            <summary>
                <para>Fires immediately after the <see cref="P:DevExpress.XtraEditors.ScrollBarBase.Value"/> property has been changed.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.LookAndFeel.UserLookAndFeel.UserLookAndFeel">

            <summary>
                <para>Represents look and feel settings for controls provided by Developer Express.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.#ctor(Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> class.
</para>
            </summary>
            <param name="ownerControl">
		An object which represents the control that will own the created <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object. This value is assigned to the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.OwnerControl"/> property.

            </param>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveLookAndFeel">
            <summary>
                <para>Gets the actual <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object currently applied.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveSkinName">
            <summary>
                <para>Gets the name of the currently applied skin. 
</para>
            </summary>
            <value>A string which specifies the name of the currently applied skin.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle">
            <summary>
                <para>Gets the style currently applied.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.ActiveLookAndFeelStyle"/> value specifying the currently applied style.
</value>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Assign(UserLookAndFeel)">
            <summary>
                <para>Copies properties of the specified <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object to the current object.
</para>
            </summary>
            <param name="source">
		The source <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.

            </param>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Default">
            <summary>
                <para>Gets the default LookAndFeel object which should be used for painting controls when the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel"/> property is set to <b>true</b>.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object referring to the default LookAndFeel object.
</value>


        </member>
        <member name="F:DevExpress.LookAndFeel.UserLookAndFeel.DefaultSkinName">
            <summary>
                <para>Gets the name of the default skin style.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Dispose">
            <summary>
                <para>Releases all resources used by the current object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.IsEquals(UserLookAndFeel)">
            <summary>
                <para>Tests whether two objects have the same property values.
</para>
            </summary>
            <param name="source">
		The <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object to which the current object is compared.

            </param>
            <returns><b>true</b> if the current object has the same property values as the specified object; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.OwnerControl">
            <summary>
                <para>Gets the control that owns the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</para>
            </summary>
            <value>An object which represents the control that owns the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Painter">
            <summary>
                <para>Gets the painter based on the style currently applied for drawing control's elements.
</para>
            </summary>
            <value>A <b>BaseLookAndFeelPainters</b> class descendant specifying the painter corresponding to the current style which is defined by <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle"/>.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel">
            <summary>
                <para>Gets or sets the parent LookAndFeel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object specifying the parent LookAndFeel; <b>null</b> if the parent LookAndFeel is not assigned.
</value>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.Reset">
            <summary>
                <para>Reverts the look and feel settings to their default values.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ResetParentLookAndFeel">
            <summary>
                <para>Sets the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel"/> property to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetDefaultStyle">
            <summary>
                <para>Applies the default look and feel settings to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetFlatStyle">
            <summary>
                <para>Applies the <b>Flat</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetOffice2003Style">
            <summary>
                <para>Applies the <b>Office2003</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetSkinStyle(String)">
            <summary>
                <para>Specifies the skin style by its name.
</para>
            </summary>
            <param name="skinName">
		A string value specifying the name of a skin style.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(LookAndFeelStyle,Boolean,Boolean,String)">
            <summary>
                <para>Sets the look and feel settings of the current object to the specified values.
</para>
            </summary>
            <param name="style">
		A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object.

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b> if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>.

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b> to use the look-and-feel settings provided by the parent object or default look and feel object; <b>false</b> to enable the current object's settings.

            </param>
            <param name="skinName">
		A string value specifying the skin style's name.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle(LookAndFeelStyle,Boolean,Boolean)">
            <summary>
                <para>Sets the look and feel settings of the current object.
</para>
            </summary>
            <param name="style">
		A <see cref="T:DevExpress.LookAndFeel.LookAndFeelStyle"/> enumeration value which specifies the style of the current object.

            </param>
            <param name="useWindowsXPTheme">
		<b>true</b> if a control should be painted using the WindowsXP theme; otherwise, <b>false</b>.

            </param>
            <param name="useDefaultLookAndFeel">
		<b>true</b> to use the look-and-feel settings provided by the parent object or default look and feel object; <b>false</b> to enable the current object's settings.

            </param>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetStyle3D">
            <summary>
                <para>Applies the <b>Style3D</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetUltraFlatStyle">
            <summary>
                <para>Applies the <b>UltraFlat</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.SetWindowsXPStyle">
            <summary>
                <para>Applies the <b>WindowsXP</b> style to a control.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.UserLookAndFeel.ShouldSerialize">
            <summary>
                <para>Tests whether the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object should be persisted.
</para>
            </summary>
            <returns><b>true</b> if the object should be persisted; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName">
            <summary>
                <para>Gets or sets the name of a skin style.
</para>
            </summary>
            <value>A string value specifying the skin style's name.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.Style">
            <summary>
                <para>Gets or sets the style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</para>
            </summary>
            <value>The style of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>


        </member>
        <member name="E:DevExpress.LookAndFeel.UserLookAndFeel.StyleChanged">
            <summary>
                <para>Occurs on changing properties of the current <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object or the parent LookAndFeel specified by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ParentLookAndFeel"/> member.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseDefaultLookAndFeel">
            <summary>
                <para>Gets or sets whether the current object's settings are in effect.
</para>
            </summary>
            <value><b>true</b> to use look and feel settings provided by the parent object or default look and feel object; <b>false</b> to enable this object's settings.
</value>


        </member>
        <member name="P:DevExpress.LookAndFeel.UserLookAndFeel.UseWindowsXPTheme">
            <summary>
                <para>Gets or sets whether controls should be painted using the XP theme.
</para>
            </summary>
            <value><b>true</b> if controls should be painted using the XP theme; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.LookAndFeel.LookAndFeelStyle.LookAndFeelStyle">

            <summary>
                <para>Enumerates values for the 
<see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.Style"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Flat">
            <summary>
                <para>Control borders are flat. The following screenshot shows the <b>Flat</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Office2003">
            <summary>
                <para>Borders and buttons have an Office 2003 style. The borders and client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>Office2003</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Skin">
            <summary>
                <para><para>Control elements are painted using the skin specified by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property. The following screenshot shows a button editor painted using the default <b>Caramel</b> skin. </para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.Style3D">
            <summary>
                <para>Control borders are three-dimensional. The following screenshot shows the <b>Style3D</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.LookAndFeelStyle.UltraFlat">
            <summary>
                <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>UltraFlat</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.ActiveLookAndFeelStyle">

            <summary>
                <para>Enumerates values for the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.ActiveStyle"/> property.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Flat">
            <summary>
                <para>Control borders are flat. The following screenshot shows the <b>Flat</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Office2003">
            <summary>
                <para>Borders and buttons have an Office 2003 style. The borders and client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>Office2003</b> style applied to a button edit control.
<para>

</para>
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Skin">
            <summary>
                <para><para>Control elements are painted using the skin determined by the <see cref="P:DevExpress.LookAndFeel.UserLookAndFeel.SkinName"/> property. The following screenshot shows a button editor painted using the default <b>Caramel</b> skin. </para>


</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.Style3D">
            <summary>
                <para>Control borders are three-dimensional. The following screenshot shows the <b>Style3D</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.UltraFlat">
            <summary>
                <para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. 
The following screenshot shows the <b>UltraFlat</b> style applied to a button edit control.
<para>

</para>
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.LookAndFeel.ActiveLookAndFeelStyle.WindowsXP">
            <summary>
                <para>Control elements are painted using the XP theme.  The following screenshot shows the <b>WindowsXP</b> style applied to a button edit control.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.PdfExportOptions.PdfExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to PDF format.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.PdfExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the PdfExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.PdfExportOptions.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the PdfExportOptions object passed as a parameter.

</para>
            </summary>
            <param name="source">
		A PdfExportOptions object (which is the <see cref="T:DevExpress.XtraPrinting.ExportOptionsBase"/> descendant) whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfExportOptions.Compressed">
            <summary>
                <para>Gets or sets a value indicating whether the resulting PDF file should be compressed.

</para>
            </summary>
            <value><b>true</b> to compress the resulting PDF file; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfExportOptions.DocumentOptions">
            <summary>
                <para>Gets the options to be embedded as Document Properties of the created PDF file.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.PdfDocumentOptions"/> object which contains Document Properties options.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfExportOptions.ImageQuality">
            <summary>
                <para>Gets or sets the quality of images in the resulting PDF file.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.XtraPrinting.PdfJpegImageQuality"/> enumeration value which specifies the quality of images in the resulting PDF file.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfExportOptions.NeverEmbeddedFonts">
            <summary>
                <para>Gets or sets a semicolon-delimited string of values with the font names  which should not be embedded in the resulting PDF file.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> which contains the font names delimited by a semicolon.

</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.ImageExportOptions.ImageExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to an image.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ImageExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the ImageExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.ImageExportOptions.#ctor(ImageFormat)">
            <summary>
                <para>Initializes a new instance of the ImageExportOptions class with the specified image format.

</para>
            </summary>
            <param name="format">
		An <see cref="T:System.Drawing.Imaging.ImageFormat"/> object representing the image format. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.ImageExportOptions.Format"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.ImageExportOptions.Assign(ExportOptionsBase)">
            <summary>
                <para>Copies all the settings from the ImageExportOptions object passed as a parameter.

</para>
            </summary>
            <param name="source">
		An ImageExportOptions object (which is the <see cref="T:DevExpress.XtraPrinting.ExportOptionsBase"/> descendant) whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.ImageExportOptions.Format">
            <summary>
                <para>Gets or sets an image format in which the document is exported.


</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Imaging.ImageFormat"/> value which represents the image format.

</value>


        </member>
        <member name="T:DevExpress.Utils.ViewStyle.ViewStyle">

            <summary>
                <para>Contains settings for an object's contents.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.ViewStyle"/> class instance with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor(String,String)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.ViewStyle"/> class instance .
</para>
            </summary>
            <param name="styleName">
		A <see cref="T:System.String"/> value that specifies the name of the newly created style.

            </param>
            <param name="styleCreator">
		A <see cref="T:System.String"/> value that specifies the class name from which the current style was created.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor(String,String,Font,String,StyleOptions,Boolean,Boolean,Boolean,HorzAlignment,VertAlignment,Image,Color,Color)">
            <summary>
                <para>Initializes a <see cref="T:DevExpress.Utils.ViewStyle"/> class instance using the settings defined by parameters.
</para>
            </summary>
            <param name="styleName">
		The style name.

            </param>
            <param name="styleCreator">
		The style owner name.

            </param>
            <param name="font">
		The font used in a style.

            </param>
            <param name="parentStyleName">
		The parent style name.

            </param>
            <param name="options">
		The options defined for a style.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B>, if out of range symbols in object text are replaced with dots, otherwise, <B>false</B>

            </param>
            <param name="wordWrap">
		<B>true</B> if the text line in an object is broken to match object bounds, otherwise, <B>false</B>.

            </param>
            <param name="drawFocusRect">
		<B>true</B>, if a rectangle is drawn within an object when an object gets focus, otherwise, <B>false</B>.

            </param>
            <param name="hAlignment">
		The horizontal alignment settings for a style.

            </param>
            <param name="vAlignment">
		The vertical alignment settings for a style.

            </param>
            <param name="image">
		The background image of a style.

            </param>
            <param name="backColor">
		The background color for a style.

            </param>
            <param name="foreColor">
		The foreground color for a style.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.#ctor(String)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.Utils.ViewStyle"/> class instance. 
</para>
            </summary>
            <param name="styleName">
		A <see cref="T:System.String"/> value that specifies style name.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.Assign(ViewStyle)">
            <summary>
                <para>Copies properties of the specified <see cref="T:DevExpress.Utils.ViewStyle"/> object to the current one.
</para>
            </summary>
            <param name="vs">
		The <see cref="T:DevExpress.Utils.ViewStyle"/> object whose properties should be copied.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.AssignTo(ViewStyle)">
            <summary>
                <para>Copies the style options of one style to another.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object that represents the style into which settings are copied.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.BackBrush">
            <summary>
                <para>Gets a value representing the brush used to paint the background.
</para>
            </summary>
            <value>A <B>System.Drawing.Brush</B> object contaning the brush used to paint the background.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.BackColor">
            <summary>
                <para>Gets or sets a value representing the background color of a style.
</para>
            </summary>
            <value>A <B>Color</B> representing the background color of a style.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.BackPen">
            <summary>
                <para>Gets a value representing a pen used for drawing in the  background.
</para>
            </summary>
            <value>A <B>System.drawing.Pen</B> object repersenting a pen for drawing in the background.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.BeginUpdate">
            <summary>
                <para>Prevents multiple firing of the <see cref="E:DevExpress.Utils.ViewStyle.Changed"/> event.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Cache">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object specifying the storage for the most often used pens, fonts and brushes.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CalcDefaultTextSize(Graphics)">
            <summary>
                <para>Calculates the size of the string painted with the font specified by the current ViewStyle object.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object used to paint the string.

            </param>
            <returns>A <see cref="T:System.Drawing.Size"/> structure representing the size of the custom string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CalcTextSize(Graphics,String,Int32)">
            <summary>
                <para>Calculates the dimensions of the rectangle that contains a specified string.
</para>
            </summary>
            <param name="g">
		The current GDI+ drawing surface.

            </param>
            <param name="s">
		The string to be measured.

            </param>
            <param name="width">
		The maximum width of a string.

            </param>
            <returns>The height and width of the string rectangle.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CalcTextSize(Graphics,StringFormat,String,Int32)">
            <summary>
                <para>Calculates the size of the string painted with a predefined font, format and maximum width allowed.
</para>
            </summary>
            <param name="g">
		A <B>System.Drawing.Graphics</B> object used to paint the string.

            </param>
            <param name="sf">
		A <B>System.Drawing.StringFormat</B> object containing format information for the string.

            </param>
            <param name="s">
		A string value specifying the painted string.

            </param>
            <param name="width">
		An integer value specifying the maximum width of the string.

            </param>
            <returns>A <B>System.Drawing.SizeF</B> structure specifying the size of the painted string in pixels.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CancelUpdate">
            <summary>
                <para>Cancels the changes made after a <see cref="M:DevExpress.Utils.ViewStyle.BeginUpdate"/> method call.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.CanDelete">
            <summary>
                <para>Specifies whether the specified style can be deleted.
</para>
            </summary>
            <value><B>true</B> - the style can be removed. otherwise - <B>false</B>.
</value>


        </member>
        <member name="E:DevExpress.Utils.ViewStyle.Changed">
            <summary>
                <para>Occurs when any changes are applied to style properties.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Collection">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> collection to which the current style belongs.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> collection that owns the current style object; <b>null</b> if the style does not belong to any collection.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.Combine(ViewStyle,ViewStyle)">
            <summary>
                <para>Sets the current style's properties to the values of their counterparts in the specified style object, any properties not enabled are set to the value in the default style object.
</para>
            </summary>
            <param name="main">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object whose values will be combined with the default style object.

            </param>
            <param name="defaultStyle">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object representing the default style settings.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.CreateResources">
            <summary>
                <para>Creates resources used for painting object contents.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DefaultFont">
            <summary>
                <para>Gets the default font used when the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property value is not specified.
</para>
            </summary>
            <value>A <B>System.Drawing.Font</B> object that contains default font settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DefaultHorzAlignment">
            <summary>
                <para>Gets the horizontal alignment of object contents.
</para>
            </summary>
            <value>The horizontal alignment of object contents.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DefaultStyleOptions">
            <summary>
                <para>Gets the value representing default style options.
</para>
            </summary>
            <value>The default options for style.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis">
            <summary>
                <para>Specifies whether the end of a string is truncated and ellipses are added, when the text does not fit in the rectangle.

</para>
            </summary>
            <value><B>true</B> - text is replaced with ellipsis ('...'), otherwise, <B>false</B>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.DrawFocusRect">
            <summary>
                <para>Specifies whether the focus rectangle is drawn around an object.
</para>
            </summary>
            <value><B>true</B> if the rectangle is visible; otherwise, <B>false</B>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.DrawRectangle(Graphics,Rectangle)">
            <summary>
                <para>Draws a rectangle at a specified position using the <see cref="P:DevExpress.Utils.ViewStyle.ForePen"/> property.
</para>
            </summary>
            <param name="g">
		A <see cref="T:System.Drawing.Graphics"/> object representing the current GDI+ drawing surface. 

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> value representing the drawing location. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.EndUpdate">
            <summary>
                <para>Prevents multiple firing of the <see cref="E:DevExpress.Utils.ViewStyle.Changed"/> event.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.FillRectangle(Graphics,Rectangle)">
            <summary>
                <para>Fills a rectangle created at a specified location, using the <see cref="P:DevExpress.Utils.ViewStyle.BackBrush"/> property.
</para>
            </summary>
            <param name="g">
		A <B>Graphics</B> object representing the current GDI+ drawing surface.

            </param>
            <param name="r">
		A <B>Rectangle</B> value representing the drawing location. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.FillRectangle(GraphicsCache,Rectangle)">
            <summary>
                <para>Fills a specified rectangle with the style brush.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object providing access to pens and brushes used to paint.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle to be filled.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Font">
            <summary>
                <para>Gets or sets the font for object contents.
</para>
            </summary>
            <value><B>System.Drawing.Font</B> object representng the font for object contents.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.FontHeight">
            <summary>
                <para>Gets the height of the current <see cref="P:DevExpress.Utils.ViewStyle.Font"/>.
</para>
            </summary>
            <value>The height of the current font, in pixels.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ForeBrush">
            <summary>
                <para>Gets a value representing a brush used for painting the foreground.
</para>
            </summary>
            <value><B>System.Drawing.Brush</B> object used for painting the foreground.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ForeColor">
            <summary>
                <para>Gets or sets the foreground color of a style.
</para>
            </summary>
            <value>A <B>Color</B> representing the foreground color of a style. 
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ForePen">
            <summary>
                <para>Gets a value representing a pen used for drawing in the foreground.
</para>
            </summary>
            <value><B>System.Drawing.Pen</B> object representing a pen for drawing in the foreground.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.GetBackBrush(GraphicsCache,Rectangle)">
            <summary>
                <para>Returns a background brush with specified settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object providing access to pens and brushes used to paint.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> object specifying the rectangle for which a brush is created.

            </param>
            <returns>A <B>System.Drawing.Brush</B> descendant specifying the background brush.
</returns>


        </member>
        <member name="E:DevExpress.Utils.ViewStyle.GetDefaultHorzAlignment">
            <summary>
                <para>Allows the default horizontal alignment of text boxes to be controlled, their alignment is specified by the <see cref="P:DevExpress.Utils.ViewStyle.DefaultHorzAlignment"/> property.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.GetStyleHash">
            <summary>
                <para>Returns a string containing this object's settings.
</para>
            </summary>
            <returns>A string that contains this object's settings.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.HAlignment">
            <summary>
                <para>Gets or sets the horizontal alignment of object contents.
</para>
            </summary>
            <value><see cref="T:DevExpress.Utils.HorzAlignment"/> enumerator value that specifies object content position. 

</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.HorzAlignmentToStringAlignment(HorzAlignment)">
            <summary>
                <para>Converts alignment of the <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration to the standard <b>StringAlignment</b> enumeration.
</para>
            </summary>
            <param name="horz">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value to be converted to the <b>StringAlignment</b> enumeration.

            </param>
            <returns>A value of the <b>StringAlignment</b> enumeration that corresponds to the alignment specified by the <i>horz</i> parameter.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Image">
            <summary>
                <para>Gets or sets the background image of the current style.
</para>
            </summary>
            <value><B>System.Drawing.Image</B> object representing the background image of the style.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.IsEqualTo(ViewStyle)">
            <summary>
                <para>Determines whether property values of a specified style equal the property values of the current style.
</para>
            </summary>
            <param name="vs">
		The <see cref="T:DevExpress.Utils.ViewStyle"/> object used for comparison.

            </param>
            <returns><B>true</B> if all property values of the specified style equal the specified style's property values, otherwise, <B>false</B>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.IsFieldsEqualTo(ViewStyle)">
            <summary>
                <para>Specifies whether the properties of the current <see cref="T:DevExpress.Utils.ViewStyle"/> object equal the properties of the <see cref="T:DevExpress.Utils.ViewStyle"/> object, specified via the parameter.
</para>
            </summary>
            <param name="vs">
		The name of the <see cref="T:DevExpress.Utils.ViewStyle"/> object, whose properties are compared to the properties of the current <see cref="T:DevExpress.Utils.ViewStyle"/> object.

            </param>
            <returns><B>true</B>, if the properties of the current style equal the properties of the style, specified via the parameter; otherwise, <B>false</B>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.Options">
            <summary>
                <para>Gets or sets the set of style options.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.StyleOptions"/> object containing options for the current style.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.ParentStyleName">
            <summary>
                <para>Gets or sets a value representing the name of the parent style for the current style.
</para>
            </summary>
            <value><see cref="T:System.String"/> value representing the name of the parent style for the current style.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.RealParent">
            <summary>
                <para>Gets the <see cref="T:DevExpress.Utils.ViewStyle"/> object whose name in the <see cref="T:DevExpress.Utils.ViewStyles"/> collection corresponds to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property of the current style.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ViewStyle"/> object. 
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.ReleaseResources">
            <summary>
                <para>Frees resources created via the <see cref="M:DevExpress.Utils.ViewStyle.CreateResources"/> method.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.Reset">
            <summary>
                <para>Restores default settings of the <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.SetStyleAsInternal">
            <summary>
                <para>This method is reserved for internal use only and is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.StrFormat">
            <summary>
                <para>Gets the value representing text string format information.
</para>
            </summary>
            <value><B>System.Drawing.StringFormat</B> value representing text string format information.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.StyleCreator">
            <summary>
                <para>Gets a value representing the name of an object that uses the current style.
</para>
            </summary>
            <value>The name of an object that uses the style.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.StyleName">
            <summary>
                <para>Gets the value representing the style name.
</para>
            </summary>
            <value>The name of the style
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.ToAppearance">
            <summary>
                <para>Creates a new appearance object with the same style settings as the current style object.
</para>
            </summary>
            <returns>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object whose style settings are copied from the current <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.ToString">
            <summary>
                <para>Returns the string that represents the current style.
</para>
            </summary>
            <returns>A string representing the current style.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.VAlignment">
            <summary>
                <para>Gets or sets the vertical alignment of object contents.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.VertAlignment"/> enumerator value that specifies object content position.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyle.VertAlignmentToStringAlignment(VertAlignment)">
            <summary>
                <para>Converts alignment of the <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration to the standard <b>StringAlignment</b> enumeration.
</para>
            </summary>
            <param name="vert">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value to be converted to the <b>StringAlignment</b> enumeration.

            </param>
            <returns>A <b>StringAlignment</b> enumeration value that corresponds to the alignment specified by the <i>vert</i> parameter.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyle.WordWrap">
            <summary>
                <para>Specifies whether soft carriage returns are inserted into object text.

</para>
            </summary>
            <value><b>true</b> if object text wraps at the right margin so it fits the client region, <b>false</b> if object text is displayed as a separate line only if the carriage return character was explicitly entered into the text. 
</value>


        </member>
        <member name="T:DevExpress.Utils.VertAlignment.VertAlignment">

            <summary>
                <para>Specifies the vertical alignment of an object or text in a control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Bottom">
            <summary>
                <para>Places the text to the bottom of an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Center">
            <summary>
                <para>Centers the text within an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Default">
            <summary>
                <para>Places the text to its default position. The default position is in the center of an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.VertAlignment.Top">
            <summary>
                <para>Places the text to the top of an object.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.StyleOptions.StyleOptions">

            <summary>
                <para>Contains the set of values that determine the manner in which style elements are used for the current editor.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.StyleOptions.None">
            <summary>
                <para> [To be supplied] </para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.StyleEnabled">
            <summary>
                <para>If active, a specific style is enabled, otherwise it is disabled.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseBackColor">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseDrawEndEllipsis">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseDrawFocusRect">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseFont">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseForeColor">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseHorzAlignment">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property value of the current style  is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseImage">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseVertAlignment">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.StyleOptions.UseWordWrap">
            <summary>
                <para>If active, the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property value of the current style is used for display, otherwise it is obtained from the parent style.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.HorzAlignment.HorzAlignment">

            <summary>
                <para>Specifies the horizontal alignment of an object or text in a control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Center">
            <summary>
                <para>Centers an object or text within an object.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Default">
            <summary>
                <para>Places an object or text at the position specified via the <B>RightToLeft</B> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Far">
            <summary>
                <para>Sets the object/text position relative to its default position within an object.
The default position of the text is specified via the <B>RightToLeft</B> property. If the default alignment is left, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Far"/> value places the text to the right. On the contrary, if the default alignment is right, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Far"/> value places the text to the left.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.HorzAlignment.Near">
            <summary>
                <para>Sets the object/text position relative to its default position within an object.
The default position of the text is specified via the <B>RightToLeft</B> property. If the default alignment is left, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Near"/> value places the text to the right. On the contrary, if the default alignment is right, setting the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property to <see cref="F:DevExpress.Utils.HorzAlignment.Near"/> value places the text to the right.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.Drawing.ProgressAnimationMode.ProgressAnimationMode">

            <summary>
                <para>Contains values that specify how progress is indicated on progress bar controls.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Cycle">
            <summary>
                <para>A control repeatedly scrolls the block from one edge to another.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Default">
            <summary>
                <para>The same, as the <see cref="F:DevExpress.Utils.Drawing.ProgressAnimationMode.Cycle"/> option.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.Drawing.ProgressAnimationMode.PingPong">
            <summary>
                <para>A control scrolls the block from one edge to another, by moving the block back when it reaches any control's edge.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.ToolTipControllerCustomDrawEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.#ctor(GraphicsCache,ToolTipControllerShowEventArgs,Rectangle)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerCustomDrawEventArgs class.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most commonly used  pens, fonts and brushes. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Cache"/> property.

            </param>
            <param name="args">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object which provides the information required to paint a tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.ShowInfo"/> property.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which specifies the tooltip's boundaries. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Bounds"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Bounds">
            <summary>
                <para>Gets the bounding rectangle of the painted tooltip.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which specifies the tooltip's boundaries.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Cache">
            <summary>
                <para>Gets an object which specifies the storage for the most commonly used pens, fonts and brushes
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most commonly used  pens, fonts and brushes.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.Handled">
            <summary>
                <para>Gets or sets whether an event was handled, if it was handled the default actions are not required.
</para>
            </summary>
            <value><b>true</b> if default painting isn't required; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs.ShowInfo">
            <summary>
                <para>Gets an object which provides the information required to paint a tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object which provides the information required to paint a tooltip.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.IPrintingSystem.IPrintingSystem">

            <summary>
                <para>Provides the base functionality of the <B>XtraPrinting Library</B>.
</para>
            </summary>

        </member>
        <member name="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange">
            <summary>
                <para>Occurs after certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object have been changed.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange">
            <summary>
                <para>Occurs before certain properties of the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> object are changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateBrick(String)">
            <summary>
                <para>If implemented by a class, creates a brick by its type name.


</para>
            </summary>
            <param name="typeName">
		A <see cref="T:System.String"/> specifying the type name of the brick to be created.


            </param>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateImageBrick">
            <summary>
                <para>If implemented by a class, creates an image brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IImageBrick"/> interface.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateImageObjectBrick">
            <summary>
                <para>If implemented by a class, creates an image object brick.


</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IImageObjectBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreatePanelBrick">
            <summary>
                <para>If implemented by a class, creates a panel brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IPanelBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateProgressBarBrick">
            <summary>
                <para>If implemented by a class, creates a progress bar brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IPanelBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.CreateTextBrick">
            <summary>
                <para>If implemented by a class, creates a text brick.

</para>
            </summary>
            <returns>An object implementing the <see cref="T:DevExpress.XtraPrinting.IPanelBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.InsertPageBreak(Single)">
            <summary>
                <para>If implemented by a class, inserts a page break at a specified position.

</para>
            </summary>
            <param name="pos">
		A <see cref="T:System.Single"/> value which specifies the position to insert a page break.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintingSystem.SetCommandVisibility(PrintingSystemCommand,Boolean)">
            <summary>
                <para>If implemented by a class, changes the visibility of the specified printing system command.

</para>
            </summary>
            <param name="command">
		A <see cref="T:DevExpress.XtraPrinting.PrintingSystemCommand"/> object specifying the command whose visibility needs to be changed.


            </param>
            <param name="visible">
		One of the <see cref="T:DevExpress.XtraPrinting.CommandVisibility"/> enumeration values specifying a new visibility state for the command.


            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintingSystem.Version">
            <summary>
                <para>Identifies the <b>XtraPrinting Library</b> version.
</para>
            </summary>
            <value>A text string representing <b>XtraPrinting Library</b>'s version info.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.ILink.ILink">

            <summary>
                <para>Provides the basic functionality to create reports.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ILink.CreateDocument">
            <summary>
                <para>Initiates report generation if implemented by a class.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.IBrickGraphics.IBrickGraphics">

            <summary>
                <para>Provides basic report drawing functions.
</para>
            </summary>

        </member>
        <member name="P:DevExpress.XtraPrinting.IBrickGraphics.DefaultBrickStyle">
            <summary>
                <para>Gets and sets the default style for bricks.
</para>
            </summary>
            <value>The default style for bricks.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrickGraphics.DrawBrick(IBrick,RectangleF)">
            <summary>
                <para>Adds a brick to a report if implemented by a class.
</para>
            </summary>
            <param name="brick">
		The brick to be added to a report.

            </param>
            <param name="rect">
		A <B>RectangleF</B> structure that specifies the location and size of the current brick.

            </param>
            <returns>The brick added to a report.
</returns>


        </member>
        <member name="T:DevExpress.XtraPrinting.IBrick.IBrick">

            <summary>
                <para>Provides the basic functionality to draw brick objects and to specify brick properties.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.Draw(Graphics,RectangleF)">
            <summary>
                <para>Draws a brick object on the graphics surface within the specified rectangle.
</para>
            </summary>
            <param name="gr">
		A <B>Graphics</B> object representing the current GDI+ drawing surface.

            </param>
            <param name="r">
		A <B>RectangleF</B> structure that specifies the location and size of the current brick in <b>GraphicsUnit.Document</b> units. See the <b>GraphicsUnit enumeration</b> topic in MSDN for more information.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.GetProperties">
            <summary>
                <para>Obtains the <b>Hashtable</b> collection of properties for the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.
</para>
            </summary>
            <returns>A <b>Hashtable</b> object that contains properties of the class that implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(Object[,])">
            <summary>
                <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface based on the specified <i>properties</i> array.
</para>
            </summary>
            <param name="properties">
		A two-dimesional array that identifies property names and values to set.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBrick.SetProperties(Hashtable)">
            <summary>
                <para>Sets property values for the class which implements the <see cref="T:DevExpress.XtraPrinting.IBrick"/> interface
based on the specified <b>Hashtable</b> object.
</para>
            </summary>
            <param name="properties">
		Identifies the <b>Hashtable</b> collection of property names and values that must be set.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.IAccessible.IAccessible">

            <summary>
                <para>Declares methods to access properties and methods of a class implementing this interface by its names.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IAccessible.GetProperty(String)">
            <summary>
                <para> Retrieves the specified property value  if implemented by a class.
</para>
            </summary>
            <param name="name">
		The property name.

            </param>
            <returns>The property value to retrieve.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IAccessible.InvokeMethod(String,Object[])">
            <summary>
                <para>Invokes a class method by its name if implemented by a class.
</para>
            </summary>
            <param name="name">
		The name of the method to invoke.

            </param>
            <param name="args">
		An array of parameters to pass to a method.

            </param>
            <returns>The method value to invoke.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.IAccessible.SetProperty(String,Object)">
            <summary>
                <para>Assigns a property value by its name if implemented by a class.
</para>
            </summary>
            <param name="name">
		The name of the property to set.

            </param>
            <param name="value">
		The property value to set.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.EventInfo.EventInfo">

            <summary>
                <para>Specifies information on the property to pass to the <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange"/> and <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange"/> events handlers.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.EventInfo.#ctor(String,Object)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instance with the property name and property value.
</para>
            </summary>
            <param name="name">
		The property name to initialize the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object.

            </param>
            <param name="value">
		The property value to initialize the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.EventInfo.Name">
            <summary>
                <para>Identifies the property name to pass to the <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.BeforeChange"/> and <see cref="E:DevExpress.XtraPrinting.IPrintingSystem.AfterChange"/> events handlers.
</para>
            </summary>
            <value>The property name.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.EventInfo.Value">
            <summary>
                <para>Specifies a value for the property which is described by the current <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object.
</para>
            </summary>
            <value>The value of the property.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.ChangeEventHandler.ChangeEventHandler">

            <summary>
                <para>Represents a method that will handle the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventHandler.Invoke(Object,ChangeEventArgs)">
            <summary>
                <para>Represents a method that will handle the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>
            <param name="sender">
		The event source.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.ChangeEventArgs.ChangeEventArgs">

            <summary>
                <para>Provides data for the <b>BeforeChange</b> and <b>AfterChange</b> events of the <see cref="T:DevExpress.XtraPrinting.PrintingSystem"/> class and the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.#ctor(String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.ChangeEventArgs"/> class and sets its <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName"/> property to a specified value.
</para>
            </summary>
            <param name="eventName">
		The event name.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.Add(String,Object)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class with the specified name and value and adds it to the collection.

</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> specifying the event's name.


            </param>
            <param name="value">
		An <see cref="T:System.Object"/> specifying the value of the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.EventName">
            <summary>
                <para>Gets the event name that initiated a <b>ChangeEvent</b>.
</para>
            </summary>
            <value>The event name that initiated a <b>ChangeEvent</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.InfoList">
            <summary>
                <para>Gets the collection of <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instances that represent supported properties.
</para>
            </summary>
            <value>The collection of <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instances that represet supported properties.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.Item(String)">
            <summary>
                <para>Gets an <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instance with a specific <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/> property value within the <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.InfoList"/> collection.
</para>
            </summary>
            <param name="name">
		The <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/> property of the item to access.

            </param>
            <value>An <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instance with a specific <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/> property value.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.ChangeEventArgs.Item(Int32)">
            <summary>
                <para>Gets an item within the <see cref="P:DevExpress.XtraPrinting.ChangeEventArgs.InfoList"/> collection at the specified index.
</para>
            </summary>
            <param name="index">
		The zero-based index of the item to get or set.

            </param>
            <value>An item at the specified index.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.ChangeEventArgs.ValueOf(String)">
            <summary>
                <para>Returns the value of the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> object with the specified <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/>.

</para>
            </summary>
            <param name="name">
		A <see cref="T:System.String"/> specifying the <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/> property of the item to access.

            </param>
            <returns>A value of the <see cref="T:DevExpress.XtraPrinting.EventInfo"/> class instance with the specified <see cref="P:DevExpress.XtraPrinting.EventInfo.Name"/>.

</returns>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStyle.BrickStyle">

            <summary>
                <para>Represents a report drawing style.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(BorderSide,Single,Color,Color,Color,Font,BrickStringFormat)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class.
</para>
            </summary>
            <param name="sides">
		Visible brick borders.

            </param>
            <param name="borderWidth">
		The border width.

            </param>
            <param name="borderColor">
		The border color

            </param>
            <param name="backColor">
		The background color.

            </param>
            <param name="foreColor">
		The foreground color.

            </param>
            <param name="font">
		Font settings.

            </param>
            <param name="sf">
		Text formatting and layout settings.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(BrickStyle)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> class and copies the settings from the object passed as the parameter.
</para>
            </summary>
            <param name="src">
		A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object whose settings are used to initialize the created object's properties.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.#ctor(Single)">
            <summary>
                <para>Initializes a new instance of the BrickStyle class with the specified dpi value.
</para>
            </summary>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value for the BrickStyle's padding.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BackColor">
            <summary>
                <para>Gets or sets the background color.
</para>
            </summary>
            <value>A <B>Color</B> representing the background color.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderColor">
            <summary>
                <para>Gets or sets the border color.
</para>
            </summary>
            <value>A <B>Color</B> representing the border color. 
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle">
            <summary>
                <para>Gets or sets the border style of a brick.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that represents the border style of a brick.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.BorderWidth">
            <summary>
                <para>Gets or sets the border width.
</para>
            </summary>
            <value>The border width.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Clone">
            <summary>
                <para>Creates a new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.

</para>
            </summary>
            <returns>A new <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, which is a copy of the current instance.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.CreateDefault">
            <summary>
                <para>Creates the BrickStyle instance with the defaul settings.
</para>
            </summary>
            <returns>A BrickStyle object representing a new brick style.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Default">
            <summary>
                <para>Gets the <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object whose properties are set to their default values.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> object representing a report drawing style.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.DefaultFont">
            <summary>
                <para>Gets the default font for a brick style.
</para>
            </summary>
            <value>The default font for a brick style.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(RectangleF,Single,Boolean)">
            <summary>
                <para>Deflates the specified rectangle by the width of borders represented by this brick style, and optionally applies the current border style.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before deflating.


            </param>
            <param name="applyBorderStyle">
		<b>true</b> to apply the current border style; otherwise, <b>false</b>. The current border style can be accessed via the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle"/> property.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(RectangleF,Single)">
            <summary>
                <para>Deflates the specified rectangle by the width of borders represented by this brick style.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before deflating.


            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(RectangleF,BorderSide,Single,BrickBorderStyle)">
            <summary>
                <para>Deflates the specified rectangle by the specified width of the specified borders using the specified border style.


</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.

            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <param name="borderStyle">
		A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that specifies the brick style.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.DeflateBorderWidth(RectangleF,BorderSide,Single)">
            <summary>
                <para>Deflates the specified rectangle by the specified width of the specified borders.


</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be deflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.


            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the deflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Dispose">
            <summary>
                <para>Disposes of the BrickStyle object.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Equals(Object)">
            <summary>
                <para>Determines whether the specified <B>Object</B> is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance.
</para>
            </summary>
            <param name="obj">
		The <B>Object</B> to compare with the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance.

            </param>
            <returns><B>true</B>, if the specified <B>Object</B> is equal to the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/> instance, otherwise, <B>false</B>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Font">
            <summary>
                <para>Gets or sets the <B>Font</B> used to display text.
</para>
            </summary>
            <value>The <B>Font</B> used to display text.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.ForeColor">
            <summary>
                <para>Gets or sets the foreground color.
</para>
            </summary>
            <value>The foreground color.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.GetHashCode">
            <summary>
                <para>Serves as a hash function suitable for use in hashing algorithms and data structures like a hash table.

</para>
            </summary>
            <returns>Hash code for the current <see cref="T:DevExpress.XtraPrinting.BrickStyle"/>.

</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(RectangleF,Single,Boolean)">
            <summary>
                <para>Inflates the specified rectangle by the width of borders represented by this brick style, and optionally applies the current border style.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before inflating.


            </param>
            <param name="applyBorderStyle">
		<b>true</b> to apply the current border style; otherwise, <b>false</b>. The current border style can be accessed via the <see cref="P:DevExpress.XtraPrinting.BrickStyle.BorderStyle"/> property.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(RectangleF,Single)">
            <summary>
                <para>Inflates the specified rectangle by the width of borders represented by this brick style.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="dpi">
		A <see cref="T:System.Single"/> value which specifies the dpi value to be applied to the width of borders before inflating.


            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(RectangleF,BorderSide,Single,BrickBorderStyle)">
            <summary>
                <para>Inflates the specified rectangle by the specified width of specified borders using the specified border style.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.

            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <param name="borderStyle">
		A <see cref="T:DevExpress.XtraPrinting.BrickBorderStyle"/> enumeration value that specifies the brick style.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.InflateBorderWidth(RectangleF,BorderSide,Single)">
            <summary>
                <para>Inflates the specified rectangle by the specified width of specified borders.

</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.RectangleF"/> value which specifies the rectangle to be inflated.

            </param>
            <param name="sides">
		A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumeration value that specifies which sides of a brick have borders.

            </param>
            <param name="borderWidth">
		A <see cref="T:System.Single"/> value which specifies the width of borders.

            </param>
            <returns>A <see cref="T:System.Drawing.RectangleF"/> value that represents the inflated rectangle.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.IsTransparent">
            <summary>
                <para>Gets or sets a value indicating whether the brick style paints a <i>transparent</i> brick.

</para>
            </summary>
            <value><b>true</b> if the brick will be painted as <i>transparent</i>; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.IsValid">
            <summary>
                <para>Gets a value indicating whether the brick style is valid.

</para>
            </summary>
            <value><b>true</b> if the current brick style is valid; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Padding">
            <summary>
                <para>Gets or sets the padding values of a brick.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.PaddingInfo"/> object which contains the padding values of a brick.

</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStyle.Scale(Single)">
            <summary>
                <para>Specifies the scale factor value which will be applied for the current brick style.

</para>
            </summary>
            <param name="factor">
		A <see cref="T:System.Single"/> value which represents the scale factor to be applied.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.Sides">
            <summary>
                <para>Gets or sets a value defining which borders of the current brick are visible.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BorderSide"/> enumerator value, defining visible brick borders.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.StringFormat">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance specifying text formatting and layout.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> specifying text formatting and layout.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStyle.TextAlignment">
            <summary>
                <para>Gets or sets the alignment of the text in the brick.

</para>
            </summary>
            <value>One of the <see cref="T:DevExpress.XtraPrinting.TextAlignment"/> enumeration's values that specifies how the text is aligned in the brick.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.Accessor.Accessor">

            <summary>
                <para>This class supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.#ctor">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.GetProperties(Object,Hashtable)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="ht">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.GetProperty(Object,String)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="name">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.InvokeMethod(Object,String,Object[])">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="name">
		 [To be supplied] 
            </param>
            <param name="args">
		 [To be supplied] 
            </param>
            <returns> [To be supplied] </returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.SetProperties(Object,Hashtable)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="ht">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.SetProperties(Object,Object[,])">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		 [To be supplied] 
            </param>
            <param name="array">
		 [To be supplied] 
            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.Accessor.SetProperty(Object,String,Object)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="obj">
		
            </param>
            <param name="name">
		

            </param>
            <param name="value">
		

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.Accessible.Accessible">

            <summary>
                <para>Serves as the base for classes that allow you to access their properties and methods by their names.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.Accessible.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.Accessible"/> class instance with default settings.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.TextOptions.TextOptions">

            <summary>
                <para>Contains options that specify how text is rendered.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.TextOptions.#ctor(HorzAlignment,VertAlignment,WordWrap,Trimming)">
            <summary>
                <para>Initializes a new instance of the TextOptions class with the specified alignments, word wrapping and text trimming options.

</para>
            </summary>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the horizontal alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HAlignment"/> property.


            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the vertical alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.VAlignment"/> property.


            </param>
            <param name="wordWrap">
		A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies word wrapping mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.WordWrap"/> property.


            </param>
            <param name="trimming">
		A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.Trimming"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.#ctor(AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the TextOptions class with the specified owner, the text settings are set to default values.

</para>
            </summary>
            <param name="owner">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which becomes the owner of the current object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.#ctor(HorzAlignment,VertAlignment,WordWrap,Trimming,HKeyPrefix)">
            <summary>
                <para>Initializes a new instance of the TextOptions class with the specified alignments, word wrapping and text trimming options.

</para>
            </summary>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the horizontal alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HAlignment"/> property.

            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the vertical alignment of text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.VAlignment"/> property.


            </param>
            <param name="wordWrap">
		A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies word wrapping mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.WordWrap"/> property.

            </param>
            <param name="trimming">
		A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.Trimming"/> property.

            </param>
            <param name="hotKeyPrefix">
		A <see cref="T:DevExpress.Utils.HKeyPrefix"/> enumeration value that specifies the hotkey prefix for the text. This value is assigned to the <see cref="P:DevExpress.Utils.TextOptions.HotkeyPrefix"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.Assign(TextOptions)">
            <summary>
                <para>Copies settings from the specified object to the current TextOptions object.
</para>
            </summary>
            <param name="options">
		A TextOptions object whose settings are copied to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptions">
            <summary>
                <para>Gets an object that specifies the default text options.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.TextOptions"/> object that specifies the default text options.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsCenteredWithEllipsis">
            <summary>
                <para>Gets an object whose settings force text to be centered.

</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsMultiLine">
            <summary>
                <para>Gets an object whose settings allow text to wrap.
</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsNoWrap">
            <summary>
                <para>Gets an object whose settings prevent text from wrapping.

</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultOptionsNoWrapEx">
            <summary>
                <para>Gets an object whose settings force text to be centered and prevent it from wrapping.

</para>
            </summary>
            <value>A TextOptions object with its settings set to the corresponding values.

</value>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.DefaultStringFormat">
            <summary>
                <para>Gets an object that contains formatting information whose settings are set to default values.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.StringFormat"/> object whose settings are set to default values.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.GetStringFormat">
            <summary>
                <para>Returns a <see cref="T:System.Drawing.StringFormat"/> object whose settings reflect the alignment, word wrapping and text trimming options of the <see cref="P:DevExpress.Utils.TextOptions.DefaultOptions"/> object.

</para>
            </summary>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object whose properties are set to match the appropriate values.

</returns>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.GetStringFormat(TextOptions)">
            <summary>
                <para>Returns a <see cref="T:System.Drawing.StringFormat"/> object whose settings reflect the alignment, word wrapping and text trimming options of the specified TextOptions object.

</para>
            </summary>
            <param name="defaultOptions">
		A TextOptions object whose settings are used to initialize the corresponding settings of the <see cref="T:System.Drawing.StringFormat"/> object that is to be returned.

            </param>
            <returns>A <see cref="T:System.Drawing.StringFormat"/> object whose properties are set to match the appropriate values.

</returns>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.HAlignment">
            <summary>
                <para>Gets or sets the horizontal alignment of text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that specifies the text horizontal alignment.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.HorzAlignmentToStringAlignment(HorzAlignment)">
            <summary>
                <para>Converts the specified <see cref="T:DevExpress.Utils.HorzAlignment"/> value to a corresponding <see cref="T:System.Drawing.StringAlignment"/> value.

</para>
            </summary>
            <param name="align">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> value that is to be converted.

            </param>
            <returns>A <see cref="T:System.Drawing.StringAlignment"/> value that corresponds to the specified <see cref="T:DevExpress.Utils.HorzAlignment"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.HotkeyPrefix">
            <summary>
                <para>Gets or sets the hotkey prefix for the text. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.HKeyPrefix"/> enumeration value which represents the hotkey prefix for the text.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.Reset">
            <summary>
                <para>Resets all the text settings to their default values.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.Trimming">
            <summary>
                <para>Gets or sets text trimming mode.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Trimming"/> value that specifies text trimming mode.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.UpdateDefaultOptions(TextOptions)">
            <summary>
                <para>For internal use. Copies settings from the specified object to the current object.
</para>
            </summary>
            <param name="defaultOptions">
		A <see cref="T:DevExpress.Utils.TextOptions"/> object whose settings are copied to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.VAlignment">
            <summary>
                <para>Gets or sets the vertical alignment of text.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.VertAlignment"/> value that specifies the text vertical alignment.
</value>


        </member>
        <member name="M:DevExpress.Utils.TextOptions.VertAlignmentToStringAlignment(VertAlignment)">
            <summary>
                <para>Converts the specified <see cref="T:DevExpress.Utils.VertAlignment"/> value to a corresponding <see cref="T:System.Drawing.StringAlignment"/> value.
</para>
            </summary>
            <param name="align">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> value that is to be converted.

            </param>
            <returns>A <see cref="T:System.Drawing.StringAlignment"/> value that corresponds to the specified <see cref="T:DevExpress.Utils.VertAlignment"/> value.
</returns>


        </member>
        <member name="P:DevExpress.Utils.TextOptions.WordWrap">
            <summary>
                <para>Gets or sets text wrapping mode.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.WordWrap"/> value that specifies text wrapping mode.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.IPrintable.IPrintable">

            <summary>
                <para>Defines methods that enable different controls to be printed using the <b>XtraPrinting Library</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.AcceptChanges">
            <summary>
                <para>Applies all changes made by the <b>Property editor</b> when implemented by a class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.HasPropertyEditor">
            <summary>
                <para>Determines whether the class provides the <b>Property editor</b> form.
</para>
            </summary>
            <returns><b>true</b>, if the class provides the <b>Property editor</b>; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.IPrintable.PropertyEditorControl">
            <summary>
                <para>Returns a form which allows a user to set printing properties when implemented by a class.
</para>
            </summary>
            <value>The <b>Property editor</b> form that allows customizing printing properties of a control.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.RejectChanges">
            <summary>
                <para>Cancels changes made by a user in the <b>Property editor</b> when implemented by a class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.ShowHelp">
            <summary>
                <para>Invokes the help system for the <b>Property editor</b> when implemented by a class .
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.IPrintable.SupportsHelp">
            <summary>
                <para>Determines whether the help system is available for the <b>Property editor</b> when implemented by a class .
</para>
            </summary>
            <returns><b>true</b> if the help system is available for the <b>Property editor</b>; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="T:DevExpress.Utils.Drawing.GraphicsCache.GraphicsCache">

            <summary>
                <para>Provides storage for pens, fonts and brushes used during painting.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(PaintEventArgs,XPaint)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used for painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="paint">
		A <B>DevExpress.Utils.Paint.XPaint</B> object providing painting methods used in the <see cref="T:DevExpress.XtraNavBar.NavBarControl"/> control. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Paint"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(PaintEventArgs)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:System.Windows.Forms.PaintEventArgs"/> object that contains data used to paint.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(Graphics)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="g">
		The <see cref="T:System.Drawing.Graphics"/> object to initialize the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DXPaintEventArgs)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class.
</para>
            </summary>
            <param name="e">
		A <see cref="T:DevExpress.Utils.Drawing.DXPaintEventArgs"/> object that contains data used to perform painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.#ctor(DXPaintEventArgs,XPaint)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> class
</para>
            </summary>
            <param name="e">
		A <see cref="T:DevExpress.Utils.Drawing.DXPaintEventArgs"/> object that contains data used to perform painting. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs"/> property.

            </param>
            <param name="paint">
		A <b>DevExpress.Utils.Paint.XPaint</b>  object that provides methods used for drawing objects. This value is assigned to the <see cref="P:DevExpress.Utils.Drawing.GraphicsCache.Paint"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Cache">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.ResourceCache"/> object.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcClipRectangle(Rectangle)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcRectangle(Rectangle)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.CalcTextSize(String,Font,StringFormat,Int32)">
            <summary>
                <para>Calculates the length of the specified string when it's drawn with the specified font and using the specified formatting.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value which represents a string to measure.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and the associated settings of the text.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which represents formatting information, such as the line spacing and alignment of the string.

            </param>
            <param name="maxWidth">
		An integer value specifying the maximum width of the string (in pixels).

            </param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> structure which represents the size (in pixels) of the string.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Clear">
            <summary>
                <para>Clears the internal hash tables that store the pens, fonts and, solid and linear gradient brushes that have recently been used.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.ClipInfo">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GraphicsClip"/> object.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.Dispose">
            <summary>
                <para>Releases all resources used by this <see cref="T:DevExpress.Utils.GraphicsCache"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawRectangle(Pen,Rectangle)">
            <summary>
                <para>Draws a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="pen">
		A <see cref="T:System.Drawing.Pen"/> object which specifies the color, width and style of the rectangle.

            </param>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the rectangle to draw.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawString(String,Font,Brush,Rectangle,StringFormat)">
            <summary>
                <para>Draws a text string at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value representing the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes, such as the line spacing and alignment, that are applied to the drawn text.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.DrawVString(String,Font,Brush,Rectangle,StringFormat,Int32)">
            <summary>
                <para>Draws a text string vertically with the specified angle and at the specified position using the specified font, color and format.
</para>
            </summary>
            <param name="text">
		A <see cref="T:System.String"/> value which represents the text to be drawn.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object which defines the font and associated settings of the text to be drawn.

            </param>
            <param name="foreBrush">
		A <see cref="T:System.Drawing.Brush"/> object which specifies the color and texture of the drawn text.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the drawing area.

            </param>
            <param name="strFormat">
		A <see cref="T:System.Drawing.StringFormat"/> object which specifies formatting attributes such as the line spacing and alignment that are applied to the drawn text.

            </param>
            <param name="angle">
		An integer value specifying the angle in degrees at which the text should be drawn.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(Brush,Rectangle)">
            <summary>
                <para>Fills the interior of a rectangle specified by a <see cref="T:System.Drawing.Rectangle"/> structure.
</para>
            </summary>
            <param name="brush">
		A <see cref="T:System.Drawing.Brush"/> object which represents the brush used to fill the rectangle.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to fill.

            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.FillRectangle(Color,Rectangle)">
            <summary>
                <para>Fills the specified rectangular area with the specified color.
</para>
            </summary>
            <param name="color">
		A <see cref="T:System.Drawing.Color"/> value that specifies the filling color.

            </param>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> value which represents the rectangle to be filled.


            </param>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetFont(Font,FontStyle)">
            <summary>
                <para>Gets a font object with the specified settings.
</para>
            </summary>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object whose settings specify the desired font's typeface and size.

            </param>
            <param name="style">
		A bitwise combination of <see cref="T:System.Drawing.Font"/> enumeration values specifying the desired font style.

            </param>
            <returns>A <see cref="T:System.Drawing.Font"/> object representing a font with the specified settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(Rectangle,Color,Color,LinearGradientMode)">
            <summary>
                <para>Returns a linear gradient brush with specified settings.
</para>
            </summary>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <B>System.Drawing.Color</B> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <B>System.Drawing.Color</B> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the gradient orientation. 

            </param>
            <returns>A <B>System.Drawing.Brush</B> descendant representing the requested linear gradient brush (typically a <B>System.Drawing.Drawing2D.LinearGradientBrush</B> object).
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrush(Rectangle,Color,Color,LinearGradientMode,Int32)">
            <summary>
                <para>Returns a linear gradient brush with the specified settings.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <see cref="T:System.Drawing.Drawing2D.LinearGradientMode"/> enumeration value specifying the gradient's orientation. 

            </param>
            <param name="blendCount">
		An integer value specifying the number of blend patterns for the brush.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the requested linear gradient brush (typically a <b>System.Drawing.Drawing2D.LinearGradientBrush</b> object).
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetGradientBrushCache(Rectangle,Color,Color,LinearGradientMode,Int32,Object)">
            <summary>
                <para>Returns a linear gradient brush with the specified key.
</para>
            </summary>
            <param name="rect">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the endpoints of the linear gradient. The starting point is the upper-left corner of the rectangle, and the endpoint is the upper-right corner of the rectangle. 

            </param>
            <param name="startColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the starting color for the gradient. 

            </param>
            <param name="endColor">
		A <see cref="T:System.Drawing.Color"/> object that represents the ending color for the gradient. 

            </param>
            <param name="mode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the gradient's orientation. 

            </param>
            <param name="blendCount">
		An integer value specifying the number of blend patterns for the brush. 

            </param>
            <param name="hash">
		An object, specifying the key value.

            </param>
            <returns>A <see cref="T:System.Drawing.Brush"/> descendant representing the requested linear gradient brush (typically a <B>System.Drawing.Drawing2D.LinearGradientBrush</B> object).
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(Color,Int32)">
            <summary>
                <para>Returns a pen with specified settings.
</para>
            </summary>
            <param name="color">
		A <B>System.Drawing.Color</B> object specifying the pen color.

            </param>
            <param name="width">
		An integer value specifying the pen width.

            </param>
            <returns>A <B>System.Drawing.Pen</B> object representing the requested pen.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetPen(Color)">
            <summary>
                <para>Returns the pixel-wide pen with a specified color.
</para>
            </summary>
            <param name="color">
		A <B>System.Drawing.Color</B> object specifying the pen color.

            </param>
            <returns>A <B>System.Drawing.Pen</B> object representing the requested pen.
</returns>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.GetSolidBrush(Color)">
            <summary>
                <para>Gets a solid brush with specified parameters.
</para>
            </summary>
            <param name="color">
		A <B>System.Drawing.Color</B> object specifying the brush color.

            </param>
            <returns>A <B>System.Drawing.Brush</B> descendant representing the requested brush (typically a <B>System.Drawing.SolidBrush</B> object).
</returns>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Graphics">
            <summary>
                <para>Gets an object that serves as the painting surface and provides painting facilities.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Graphics"/> object providing painting facilities.
</value>


        </member>
        <member name="M:DevExpress.Utils.Drawing.GraphicsCache.IsNeedDrawRect(Rectangle)">
            <summary>
                <para>Returns whether the region which is bounded by the specified rectangle needs to be redrawn.

</para>
            </summary>
            <param name="r">
		A <see cref="T:System.Drawing.Rectangle"/> structure that specifies the rectangle to test.

            </param>
            <returns><b>true</b> if the specified rectangle needs to be redrawn; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Offset">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.OffsetEx">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Point"/> structure.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.Paint">
            <summary>
                <para>Gets or sets a <b>DevExpress.Utils.Paint.XPaint</b> object.
</para>
            </summary>
            <value>A <b>DevExpress.Utils.Paint.XPaint</b> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.PaintArgs">
            <summary>
                <para>Gets an object providing information for painting.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.DXPaintEventArgs"/> object that contains data used to perform painting.
</value>


        </member>
        <member name="P:DevExpress.Utils.Drawing.GraphicsCache.TransformMatrix">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Drawing2D.Matrix"/> object.
</value>


        </member>
        <member name="T:DevExpress.Utils.ViewStyleHashtable.ViewStyleHashtable">

            <summary>
                <para>Associates style names with style objects.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Add(String,String)">
            <summary>
                <para>Creates a style with a specified name and adds it to a hash table.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style to add.

            </param>
            <param name="creator">
		A string value identifying the style creator.

            </param>
            <returns>The created and added <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Add">
            <summary>
                <para>Adds a new style with default settings to a hash table.
</para>
            </summary>
            <returns>The added <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Add(String,ViewStyle)">
            <summary>
                <para>Creates a style with the name specified and adds it to the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> hash table.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style to add.

            </param>
            <param name="style">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object to add.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.AddReplace(String,Object)">
            <summary>
                <para>Adds a specified style to a hash table replacing the style with the same key (if any).
</para>
            </summary>
            <param name="key">
		An object specifying the key value corresponding to the added style (the style name).

            </param>
            <param name="value">
		An object representing the added style (typically a <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant).

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Assign(ViewStyleHashtable)">
            <summary>
                <para>This member supports the .NET Framework infrastructure and cannot be used directly from your code.
</para>
            </summary>
            <param name="styles">
		A <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Clear">
            <summary>
                <para>Removes all items from the hashtable.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.ClearModified">
            <summary>
                <para>Sets the <see cref="P:DevExpress.Utils.ViewStyleHashtable.Modified"/> property to <b>false</b>.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ViewStyleHashtable.CollectionChanged">
            <summary>
                <para>Fires immediately after the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> hashtable has changed.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Contains(String)">
            <summary>
                <para>Determines whether the hashtable contains a specific style.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the <see cref="T:DevExpress.Utils.ViewStyle"/> object to locate in the collection.

            </param>
            <returns><b>true</b> if the hashtable contains an item with the specified key; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Count">
            <summary>
                <para>Gets the number of key/value pairs contained in a hashtable.
</para>
            </summary>
            <value>The number of items in the hashtable.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.CreateStyle(String,String)">
            <summary>
                <para>Creates a style with the specified name without adding it to the hash table.
</para>
            </summary>
            <param name="styleName">
		A string specifying the name of the style to create.

            </param>
            <param name="creator">
		A string identifying the style creator.

            </param>
            <returns>The style which was created.
</returns>


        </member>
        <member name="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle">
            <summary>
                <para>Fires when a style needs to be created and added to a hash table.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ViewStyleHashtable.IsNeedSerializeStyle">
            <summary>
                <para>This member is not intended to be used directly from your code.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Item(String)">
            <summary>
                <para>Gets the style object specified by its name.
</para>
            </summary>
            <param name="styleName">
		A string value representing the name of the requested style.

            </param>
            <value>A <see cref="T:DevExpress.Utils.ViewStyle"/> object (or descendant) with the specified name.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Keys">
            <summary>
                <para>Gets an <see cref="T:System.Collections.ICollection"/> object containing all the keys in the hashtable.
</para>
            </summary>
            <value>An <see cref="T:System.Collections.ICollection"/> containing all the keys in the hashtable.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Modified">
            <summary>
                <para>Indicates whether the collection has been modified.
</para>
            </summary>
            <value><b>true</b> if the collection has been modified; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleHashtable.Remove(String)">
            <summary>
                <para>Removes the style with the specified name from the hash table.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style to be removed.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleHashtable.Values">
            <summary>
                <para>Gets an <see cref="T:System.Collections.ICollection"/> object containing all the values in the hashtable.
</para>
            </summary>
            <value>An <see cref="T:System.Collections.ICollection"/> object containing all the values in the hashtable.
</value>


        </member>
        <member name="T:DevExpress.Utils.ViewStyles.ViewStyles">

            <summary>
                <para>Lists types of control elements and style names applied to them.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyles.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyles"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Add(Object,Object)">
            <summary>
                <para>Adds a new "element name - style name" pair to the internal hashtable.
</para>
            </summary>
            <param name="key">
		The object identifying an element name.

            </param>
            <param name="val">
		The object identifying the name of a style to apply to the specified element

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.AddReplace(Object,Object)">
            <summary>
                <para>Adds a specified style name to a hash table replacing the style name with the same key (if any).
</para>
            </summary>
            <param name="key">
		An object specifying the key of the added value (a string representing the control's element name).

            </param>
            <param name="value">
		An object specifying the added value (a string representing the style name).

            </param>


        </member>
        <member name="E:DevExpress.Utils.ViewStyles.Changed">
            <summary>
                <para>Occurs when modifying the internal hashtable.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Clear">
            <summary>
                <para>Removes all items from the hashtable.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Clone">
            <summary>
                <para>Creates a copy of this <see cref="T:DevExpress.Utils.ViewStyles"/> object.
</para>
            </summary>
            <returns>An object representing the copy of this <see cref="T:DevExpress.Utils.ViewStyles"/> object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Contains(Object)">
            <summary>
                <para>Determines whether the hashtable contains a specific key (element's name).
</para>
            </summary>
            <param name="key">
		The key (element's name) to locate in the hashtable. 

            </param>
            <returns><b>true</b> if the hashtable contains an item with the specified key; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.ContainsKey(Object)">
            <summary>
                <para>Determines whether the hashtable contains a specific key (element's name).
</para>
            </summary>
            <param name="key">
		The key (element's name) to locate in the hashtable.

            </param>
            <returns><b>true</b> if the hashtable contains an item with the specified key; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.ContainsValue(Object)">
            <summary>
                <para>Determines whether the hashtable contains a specific value (style's name).
</para>
            </summary>
            <param name="key">
		The value (style name) to locate in the hashtable.

            </param>
            <returns><b>true</b> if the hashtable contains an element with the specified value; otherwise, <b>false</b>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Count">
            <summary>
                <para>Gets the number of key-and-value pairs contained in the hashtable.
</para>
            </summary>
            <value>The number of items in the hashtable.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.GetEnumerator">
            <summary>
                <para>Returns an <see cref="T:System.Collections.IDictionaryEnumerator"/> that can iterate through the hashtable.
</para>
            </summary>
            <returns>An <see cref="T:System.Collections.IDictionaryEnumerator"/> for the hashtable.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Item(String)">
            <summary>
                <para>Gets or sets the name of a style applied to a particular view element.
</para>
            </summary>
            <param name="key">
		A string value specifying the view element.

            </param>
            <value>The name of the style applied to the specified view element. <b>null</b> (<b>Nothing</b> in Visual Basic) if the view element is specified incorrectly.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Item(Object)">
            <summary>
                <para>Gets or sets the value (style name) associated with a specific key (element's name).
</para>
            </summary>
            <param name="key">
		The key, for which to return the corresponding value. 

            </param>
            <value>The value associated with the specified key. <b>null</b> if the key is not found.
</value>


        </member>
        <member name="P:DevExpress.Utils.ViewStyles.Keys">
            <summary>
                <para>Gets an <see cref="T:System.Collections.ICollection"/> object containing all the keys in the hashtable.
</para>
            </summary>
            <value>An <see cref="T:System.Collections.ICollection"/> containing all keys in the hashtable.

</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyles.Remove(Object)">
            <summary>
                <para>Removes an item with the specified key (element's name) from the hashtable.
</para>
            </summary>
            <param name="key">
		The key of the item to remove.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ViewStyleEx.ViewStyleEx">

            <summary>
                <para>Represents a style with extended settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,Font,String,Boolean,Boolean,Boolean,HorzAlignment,VertAlignment,Image,Color,Color,Color,LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <B>System.Drawing.Font</B> object specifying the font provided by the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="image">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,String,Boolean,Boolean,Boolean,HorzAlignment,VertAlignment,Image,Color,Color,Color,LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="image">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,String,StyleOptions,Boolean,Boolean,Boolean,HorzAlignment,VertAlignment,Image,Color,Color,Color,LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="image">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,Font,String,StyleOptions,Boolean,Boolean,Boolean,HorzAlignment,VertAlignment,Image,Color,Color,Color,LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <B>System.Drawing.Font</B> object specifying the font provided by the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="image">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,Font,String,StyleOptions,Boolean,Boolean,Boolean,HorzAlignment,VertAlignment,Image,Color,Color)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <B>System.Drawing.Font</B> object specifying the font provided by the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="parentStyleName">
		A string value specifying the parent style name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ParentStyleName"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="drawEndEllipsis">
		<B>true</B> if objects using this style must draw an ellipsis when strings don't fit within their area; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawEndEllipsis"/> property.

            </param>
            <param name="wordWrap">
		<B>true</B> if objects using this style must use word wrapping for long strings; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.WordWrap"/> property.

            </param>
            <param name="drawFocusRect">
		<B>true</B> if a focus rectangle must be drawn around the object using the created style; otherwise <B>false</B>. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.DrawFocusRect"/> property.

            </param>
            <param name="hAlignment">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.HAlignment"/> property.

            </param>
            <param name="vAlignment">
		A <see cref="T:DevExpress.Utils.VertAlignment"/> enumeration value specifying the horizontal alignment of the object's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.VAlignment"/> property.

            </param>
            <param name="image">
		A <B>System.Drawing.Image</B> object specifying the image assigned to objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Image"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the background color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with a predefined name and creator class.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with a predefined name.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,Font,Color,Color,Color,LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object specifying the font used for drawing the text. The object is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,Font,StyleOptions,Color,Color,Color,LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="font">
		A <see cref="T:System.Drawing.Font"/> object specifying the font used for drawing the text. The object is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Font"/> property.

            </param>
            <param name="options">
		A set of <see cref="T:DevExpress.Utils.StyleOptions"/> flags specifying options for the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.Options"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.#ctor(String,String,Color,Color,Color,LinearGradientMode)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ViewStyleEx"/> class with predefined settings.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleName"/> property.

            </param>
            <param name="styleCreator">
		A string value specifying the creator class name. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.StyleCreator"/> property.

            </param>
            <param name="backColor">
		A <B>System.Drawing.Color</B> object specifying the starting color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.BackColor"/> property.

            </param>
            <param name="foreColor">
		A <B>System.Drawing.Color</B> object specifying the foreground color of objects using the created style. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyle.ForeColor"/> property.

            </param>
            <param name="backColor2">
		A <B>System.Drawing.Color</B> object specifying the ending color of the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.BackColor2"/> property.

            </param>
            <param name="gradientMode">
		A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the direction for the gradient brush used to fill the object's background. This value is assigned to the <see cref="P:DevExpress.Utils.ViewStyleEx.GradientMode"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.AssignTo(ViewStyle)">
            <summary>
                <para>Assigns the contents of this object to another <see cref="T:DevExpress.Utils.ViewStyle"/> object.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant to which the contents of this object are assigned.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleEx.BackColor2">
            <summary>
                <para>Specifies the ending color of the linear gradient brush used to fill the object's background.
</para>
            </summary>
            <value>A <B>System.Drawing.Color</B> object specifying the ending color of the linear gradient brush used to fill the object's background.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.FillRectangle(GraphicsCache,Rectangle)">
            <summary>
                <para>Fills a specified rectangle with the brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object used to store pens and bushes used to paint and provide access to the <B>Graphics</B> object.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle to be filled.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.FillRectangle(Graphics,Rectangle)">
            <summary>
                <para>Fills the specified rectangle with the background brush defined by the style object.
</para>
            </summary>
            <param name="g">
		A <B>System.Drawing.Graphics</B> object representing the painting surface.

            </param>
            <param name="r">
		A <B>System.Drawing.Rectangle</B> structure that specifies the rectangle to be filled.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.GetBackBrush(GraphicsCache,Rectangle)">
            <summary>
                <para>Gets the brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.GraphicsCache"/> object that provides access to pens and brushes used to paint.

            </param>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle for which a brush is created.

            </param>
            <returns>A <B>System.Drawing.Brush</B> object representing the brush specified via the <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.GetBackBrush(Rectangle)">
            <summary>
                <para>Gets the brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <param name="rect">
		A <B>System.Drawing.Rectangle</B> structure specifying the rectangle for which a brush is created.

            </param>
            <returns>A <B>System.Drawing.Brush</B> object representing the brush specified via the <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleEx.GradientMode">
            <summary>
                <para>Gets or sets a direction for the linear gradient brush specified via this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object's settings.
</para>
            </summary>
            <value>A <B>System.Drawing.Drawing2D.LinearGradientMode</B> enumeration value specifying the gradient brush direction.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.IsEqualTo(ViewStyle)">
            <summary>
                <para>Gets a value indicating whether properties of the specified object return the same values as properties of this object.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant whose property values are compared to this object's properties.

            </param>
            <returns><B>true</B> if property values are the same; otherwise <B>false</B>.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.IsFieldsEqualTo(ViewStyle)">
            <summary>
                <para>Gets a value indicating whether field values of the specified object are the same as field values of this object.
</para>
            </summary>
            <param name="vs">
		A <see cref="T:DevExpress.Utils.ViewStyle"/> object or descendant whose property values are compared to this object's properties.

            </param>
            <returns><B>true</B> if property values are the same; otherwise <B>false</B>.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ViewStyleEx.IsGradientBack">
            <summary>
                <para>Gets a value indicating whether the background must be painted using a gradient brush. 
</para>
            </summary>
            <value><B>true</B> if the background must be painted using a gradient brush; otherwise <B>false</B>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ViewStyleEx.Reset">
            <summary>
                <para>Sets properties of this <see cref="T:DevExpress.Utils.ViewStyleEx"/> object to their default values.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.CreateViewStyleEventHandler.CreateViewStyleEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.CreateViewStyleEventHandler.Invoke(Object,CreateViewStyleEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle"/> event.
</para>
            </summary>
            <param name="sender">
		An object representing the source of the event (typically the <see cref="T:DevExpress.Utils.ViewStyleHashtable"/> object to which a style is about to be added).

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.CreateViewStyleEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Utils.CreateViewStyleEventArgs.CreateViewStyleEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ViewStyleHashtable.CreateViewStyle"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.CreateViewStyleEventArgs.#ctor(String,String)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.CreateViewStyleEventArgs"/> class.
</para>
            </summary>
            <param name="styleName">
		A string value specifying the name of the style which is about to be created. This value is assigned to the <see cref="P:DevExpress.Utils.CreateViewStyleEventArgs.StyleName"/> property.

            </param>
            <param name="creatorName">
		A string value identifying the creator of the style. This value is assigned to the <see cref="P:DevExpress.Utils.CreateViewStyleEventArgs.CreatorName"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.CreateViewStyleEventArgs.CreatorName">
            <summary>
                <para>Gets the name of the style creator.
</para>
            </summary>
            <value>A string value identifying the style creator.
</value>


        </member>
        <member name="P:DevExpress.Utils.CreateViewStyleEventArgs.Style">
            <summary>
                <para>Gets or sets the style which is about to be created and added to a hash table.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ViewStyle"/> object (or descendant) representing the style which is about to be added to a hashtable.
</value>


        </member>
        <member name="P:DevExpress.Utils.CreateViewStyleEventArgs.StyleName">
            <summary>
                <para>Gets the style name.
</para>
            </summary>
            <value>A string value specifying the style name.
</value>


        </member>
        <member name="T:DevExpress.Skins.SkinManager.SkinManager">

            <summary>
                <para>Manages skins for Developer Express controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Skins.SkinManager.#ctor">
            <summary>
                <para>Initializes a new instance of the SkinManager class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.AllowFormSkins">
            <summary>
                <para>Gets whether the form title bar skinning feature is enabled.
</para>
            </summary>
            <value><b>true</b> if the form title bar skinning feature is enabled; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.Default">
            <summary>
                <para>Provides access to the default skin manager.
</para>
            </summary>
            <value>A SkinManager object that represents the default skin manager.
</value>


        </member>
        <member name="F:DevExpress.Skins.SkinManager.DefaultSkinName">
            <summary>
                <para>Gets the name of the default skin, which is used by controls by default.
</para>
            </summary>
            <returns>A string that specifies the name of the default skin.
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.DisableFormSkins">
            <summary>
                <para>Disables the title bar skinning feature for Developer Express forms.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.EnableFormSkins">
            <summary>
                <para>Enables the title bar skinning feature for Developer Express forms.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.EnableFormSkinsIfNotVista">
            <summary>
                <para>Enables the title bar skinning feature for Developer Express forms, if the application is not running under Microsoft Vista.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkin(Object)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkin(Object,ISkinProvider)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		@nbsp;

            </param>
            <param name="provider">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetSkin(Object,String)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		@nbsp;

            </param>
            <param name="skinName">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.GetValidSkinName(String)">
            <summary>
                <para>This method returns the specified skin name, if it's valid. If the skin name is invalid, the default skin's name is returned.
</para>
            </summary>
            <param name="skinName">
		A string that specifies the skin name to test.

            </param>
            <returns>A string that specifies the valid skin name.
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterAssembly(Assembly)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="asm">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkin(SkinCreator)">
            <summary>
                <para>Registers the specified skin for runtime use. This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="creator">
		@nbsp;

            </param>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkin(Object,SkinBuilder)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="productId">
		@nbsp;

            </param>
            <param name="skinBuilder">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkinAssembly(Assembly)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="asm">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="M:DevExpress.Skins.SkinManager.RegisterSkins(Assembly)">
            <summary>
                <para>This method supports the internal infrastructure and is not intended to be used directly from your code.
</para>
            </summary>
            <param name="asm">
		@nbsp;

            </param>
            <returns>@nbsp;
</returns>


        </member>
        <member name="P:DevExpress.Skins.SkinManager.Skins">
            <summary>
                <para>Gets the collection of skins that are currently available for use in Developer Express controls.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Skins.SkinContainerCollection"/> collection that stores available skins.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipLocation.ToolTipLocation">

            <summary>
                <para>Specifies the location where a tooltip is displayed in relation to the mouse cursor position.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomCenter">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomLeft">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the left relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.BottomRight">
            <summary>
                <para>A tooltip appears vertically aligned at the bottom, and horizontally aligned on the right relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.Default">
            <summary>
                <para>The default tooltip location.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.Fixed">
            <summary>
                <para>For internal use.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftBottom">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the bottom relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftCenter">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.LeftTop">
            <summary>
                <para>A tooltip appears horizontally aligned on the left, and vertically aligned at the top relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightBottom">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the bottom relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightCenter">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.RightTop">
            <summary>
                <para>A tooltip appears horizontally aligned on the right, and vertically aligned at the top relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopCenter">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally centered relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopLeft">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the left relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipLocation.TopRight">
            <summary>
                <para>A tooltip appears vertically aligned at the top, and horizontally aligned on the right relative to the mouse cursor position.
<para></para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipIconType.ToolTipIconType">

            <summary>
                <para>Lists values specifying icon types to be displayed within tooltips.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Application">
            <summary>
                <para>A tooltip contains the default application icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Asterics">
            <summary>
                <para>A tooltip contains the system asterisk icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Error">
            <summary>
                <para>A tooltip contains the system error icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Exclamation">
            <summary>
                <para>A tooltip contains the system exclamation icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Hand">
            <summary>
                <para>A tooltip contains the system hand icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Information">
            <summary>
                <para>A tooltip contains the system information icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.None">
            <summary>
                <para>A tooltip contains no predefined icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Question">
            <summary>
                <para>A tooltip contains the system question icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.Warning">
            <summary>
                <para>A tooltip contains the system warning icon.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconType.WindLogo">
            <summary>
                <para>A tooltip contains the Windows logo icon.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipIconSize.ToolTipIconSize">

            <summary>
                <para>Specifies the size of a predefined icon displayed within a tooltip.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.ToolTipIconSize.Large">
            <summary>
                <para>An icon displayed within a tooltip is large. The icon type can be selected via the <see cref="P:DevExpress.Utils.ToolTipController.IconType"/> property or can be specified in a handler of the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event via <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.ToolTipIconSize.Small">
            <summary>
                <para>An icon displayed within a tooltip is small. The icon type can be selected via the <see cref="P:DevExpress.Utils.ToolTipController.IconType"/> property or can be specified in a handler of the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event via <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ViewStyleGetDefaultHorzAlignment.ViewStyleGetDefaultHorzAlignment">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ViewStyle.GetDefaultHorzAlignment"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ViewStyleGetDefaultHorzAlignment.Invoke(Object,HorzAlignment)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ViewStyle.GetDefaultHorzAlignment"/> event.
</para>
            </summary>
            <param name="sender">
		An object representing the source of the event.

            </param>
            <param name="align">
		A <see cref="T:DevExpress.Utils.HorzAlignment"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipControllerShowEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(Control,Object)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> and <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> properties.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> class and initializes properties with default values
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.#ctor(Control,Object,String,String,ToolTipLocation,Boolean,Boolean,Int32,ToolTipIconType,ToolTipIconSize,Object,Int32,AppearanceObject,AppearanceObject)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerShowEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		A <see cref="T:System.String"/> value that specifies the tooltip's text. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip"/> property.

            </param>
            <param name="title">
		A <see cref="T:System.String"/> value that specifies the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title"/> property.

            </param>
            <param name="toolTipLocation">
		A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value that specifies the relative position of the tooltip window. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation"/> property.

            </param>
            <param name="showBeak">
		<b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak"/> property.

            </param>
            <param name="rounded">
		<b>true</b> if tooltip window's corners are rounded; otherwise, <b>false</b>. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded"/> property.

            </param>
            <param name="roundRadius">
		The radius of the rounded corners. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius"/> property.

            </param>
            <param name="iconType">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value that specifies the kind of the predefined icon. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType"/> property.

            </param>
            <param name="iconSize">
		A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value that specifies the icon's size. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize"/> property.

            </param>
            <param name="imageList">
		An object that represents the source of the images that can be displayed within tooltips. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList"/> property.

            </param>
            <param name="imageIndex">
		The index of the image to display in the tooltip. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex"/> property.

            </param>
            <param name="appearance">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the tooltip's appearance settings. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance"/> property.

            </param>
            <param name="appearanceTitle">
		An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that provides the appearance settings used to paint the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Appearance">
            <summary>
                <para>Gets the tooltip's appearance settings.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the tooltip's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AppearanceTitle">
            <summary>
                <para>Gets the appearance settings used to paint the tooltip's title.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the appearance settings used to paint the tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.AutoHide">
            <summary>
                <para>Gets or sets whether the tooltip is hidden after a specific time ellapses.
</para>
            </summary>
            <value><b>true</b> if the tooltip is hidden after a specific time period ellapses; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.Equals(Object)">
            <summary>
                <para>Determines whether two objects are equal.
</para>
            </summary>
            <param name="obj">
		The object specifying a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance to compare with the current object.

            </param>
            <returns><b>true</b> if the specified object is equal to the current <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> instance.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.GetHashCode">
            <summary>
                <para>Gets the hash code (a number) that corresponds to the value of the current object.
</para>
            </summary>
            <returns>The hash code for the current object.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerShowEventArgs.GetToolTipLocation">
            <summary>
                <para>Gets the actual location of the tooltip window relative to the position where the tooltip should appear.

</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value specifying the relative position of the tooltip window.
</returns>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconSize">
            <summary>
                <para>Gets the size of the predefined icon to display in the tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconSize"/> value specifying the icon size.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.IconType">
            <summary>
                <para>Gets or sets the kind of predefined icons to display in the tooltip.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value specifying the kind of predefined icon to display.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageIndex">
            <summary>
                <para>Gets or sets the index of an image from the <see cref="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList"/> to display in the tooltip.
</para>
            </summary>
            <value>The index of a custom image to display in the tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ImageList">
            <summary>
                <para>Gets or sets the source of images that can be displayed within tooltips.
</para>
            </summary>
            <value>An object that represents the source of images that can be displayed within tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Rounded">
            <summary>
                <para>Gets or sets whether the tooltip window has rounded corners.
</para>
            </summary>
            <value><b>true</b> if tooltip window's corners are rounded; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.RoundRadius">
            <summary>
                <para>Gets or sets the radius of the rounded corners of the tooltip window.
</para>
            </summary>
            <value>The radius of the rounded corners.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Show">
            <summary>
                <para>Gets or sets whether the tooltip should be displayed.
</para>
            </summary>
            <value><b>true</b> if the tooltip should be displayed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ShowBeak">
            <summary>
                <para>Tests whether callout beaks are displayed for hints.
</para>
            </summary>
            <value><b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.SuperTip">
            <summary>
                <para>Gets or sets a <see cref="T:DevExpress.Utils.SuperToolTip"/>.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.Title">
            <summary>
                <para>Gets or sets the tooltip's title.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTip">
            <summary>
                <para>Gets or sets the text for the tooltip.
</para>
            </summary>
            <value>The string representing the text to display in the tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipImage">
            <summary>
                <para>Gets or sets the image to display within the current tooltip.
</para>
            </summary>
            <value>An <see cref="T:System.Drawing.Image"/> object that specifies the image to display within the current tooltip.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipLocation">
            <summary>
                <para>Gets or sets the location of the tooltip window relative to the position where the tooltip should appear.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipLocation"/> value specifying the relative position of the tooltip window.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerShowEventArgs.ToolTipType">
            <summary>
                <para>Gets or sets the type of tooltip to be displayed.

</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltip to be displayed.

</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerEventArgsBase.ToolTipControllerEventArgsBase">

            <summary>
                <para>The base class for classes providing data for <see cref="T:DevExpress.Utils.ToolTipController"/>'s events.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor(Control,Object)">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.
</para>
            </summary>
            <param name="control">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		The object to initialize the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerEventArgsBase.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.Utils.ToolTipControllerEventArgsBase"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl">
            <summary>
                <para>Gets or sets the control for which a tooltip controller's event is fired.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Control"/> object for which the event is fired.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject">
            <summary>
                <para>Gets or sets the element of the control for which the tooltip should be displayed.
</para>
            </summary>
            <value>An object defining the element for which to display the tooltip.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventHandler.ToolTipControllerCalcSizeEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.

</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventHandler.Invoke(Object,ToolTipControllerCalcSizeEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTipControllerCalcSizeEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.Utils.ToolTipController.CalcSize"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(Control,Object,String,String)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class.
</para>
            </summary>
            <param name="control">
		An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		An object which identifies the element that the tooltip is displayed for. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		A <see cref="T:System.String"/> value which specifies the tooltip's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip"/> property.

            </param>
            <param name="title">
		A <see cref="T:System.String"/> value which specifies the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(Control,Object,String,String,Size,Point)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs"/> class with the specified settings.
</para>
            </summary>
            <param name="control">
		An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		An object which identifies the element which the tooltip is displayed for. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="toolTip">
		A <see cref="T:System.String"/> value which specifies the tooltip's contents. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip"/> property.

            </param>
            <param name="title">
		A <see cref="T:System.String"/> value which specifies the tooltip's title. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title"/> property.

            </param>
            <param name="size">
		A <see cref="T:System.Drawing.Size"/> structure which specifies the tooltip's bounds. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size"/> property.

            </param>
            <param name="position">
		A <see cref="T:System.Drawing.Point"/> structure which specifies the screen coordinates of the top left tooltip corner. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position"/> property.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.#ctor(Control,Object,ToolTipControllerShowEventArgs)">
            <summary>
                <para>Initializes a new instance of the ToolTipControllerCalcSizeEventArgs class with the specified settings.
</para>
            </summary>
            <param name="control">
		An object for which the event is fired. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedControl"/> property.

            </param>
            <param name="obj">
		An object which identifies the element that the tooltip is displayed for. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerEventArgsBase.SelectedObject"/> property.

            </param>
            <param name="showArgs">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object that provides additional event data. This value is assigned to the <see cref="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ShowInfo"/> property.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Position">
            <summary>
                <para>Gets or sets the coordinates of the top left tooltip corner.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Point"/> object specifying the coordinates of the top left tooltip corner relative to the desktop.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ShowInfo">
            <summary>
                <para>Gets the additional event data.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object that provides additional event data.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Size">
            <summary>
                <para>Gets or sets the tooltip dimensions.
</para>
            </summary>
            <value>The <see cref="T:System.Drawing.Size"/> object specifying the width and height of a tooltip rectangle. 
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.Title">
            <summary>
                <para>Gets the tooltip's title.
</para>
            </summary>
            <value>A <see cref="T:System.String"/> value which specifies the tooltip's title.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipControllerCalcSizeEventArgs.ToolTip">
            <summary>
                <para>Gets the text to be displayed within the tooltip.
</para>
            </summary>
            <value>The <see cref="T:System.String"/> object specifying the text to be displayed within the tooltip.
</value>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerBeforeShowEventHandler.ToolTipControllerBeforeShowEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerBeforeShowEventHandler.Invoke(Object,ToolTipControllerShowEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.BeforeShow"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This identifies the <see cref="T:DevExpress.Utils.ToolTipController"/> component which fires the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing data related to the event.

            </param>


        </member>
        <member name="T:DevExpress.Utils.ToolTipController.ToolTipController">

            <summary>
                <para>Provides tooltip appearance and behavior options for controls.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipController.#ctor">
            <summary>
                <para>Creates a new instance of the <see cref="T:DevExpress.Utils.ToolTipController"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.#ctor(IContainer)">
            <summary>
                <para>Initializes a new instance of the ToolTipController class with the specified container.
</para>
            </summary>
            <param name="container">
		A <see cref="T:System.ComponentModel.IContainer"/> that represents the container for the tooltip controller.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Active">
            <summary>
                <para>Gets or sets whether the component's functionality is enabled.
</para>
            </summary>
            <value><b>true</b> if displaying tooltips is allowed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ActiveControlClient">
            <summary>
                <para>Gets the active control, if it implements the IToolTipControlClient interface. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.IToolTipControlClient"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ActiveObject">
            <summary>
                <para>Returns the object that identifies which of the bound control's elements the tooltip is displayed for.
</para>
            </summary>
            <value>A <see cref="T:System.Object"/> object representing the bound control's element that the tooltip is displayed for.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ActiveObjectInfo">
            <summary>
                <para>An object containing tooltip information for the current element of a bound control.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object containing tooltip information for the current element of a bound control.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.AddClientControl(Control)">
            <summary>
                <para>Enables the display of tooltips for the specified control implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface.
</para>
            </summary>
            <param name="control">
		The control, implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface, for which tooltips should be enabled.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Appearance">
            <summary>
                <para>Gets or sets the settings that control the appearance of a tooltip's window and text.

</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.AppearanceTitle">
            <summary>
                <para>Provide the settings that control the appearance of a tooltip's title.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object that contains the appearance settings.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.AutoPopDelay">
            <summary>
                <para>Gets or sets the tooltip delay in milliseconds.
</para>
            </summary>
            <value>Integer value specifying tooltip delay.
</value>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.BeforeShow">
            <summary>
                <para>Enables you to customize the text and settings of the tooltip before displaying it onscreen.
</para>
            </summary>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.CalcSize">
            <summary>
                <para>Enables you to specify the position  and size of the tooltip window.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.CreateShowArgs">
            <summary>
                <para>Returns a <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object containing settings of  the current tooltip controller.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object with settings of the current tooltip controller.
</returns>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.CustomDraw">
            <summary>
                <para>Enables a tooltip's window to be custom painted.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.DefaultController">
            <summary>
                <para>Gets the default <see cref="T:DevExpress.Utils.ToolTipController"/> used for displaying tooltips.
</para>
            </summary>
            <value>A default <see cref="T:DevExpress.Utils.ToolTipController"/> object.
</value>


        </member>
        <member name="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo">
            <summary>
                <para>Allows you to provide custom tooltips for any element of a control that implements the <see cref="T:DevExpress.Utils.IToolTipControlClient"/> interface.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetSuperTip(Control)">
            <summary>
                <para>Gets a <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the specified control.
</para>
            </summary>
            <param name="control">
		The control whose SuperToolTip object is to be obtained.

            </param>
            <returns>A <see cref="T:DevExpress.Utils.SuperToolTip"/> object associated with the control.
</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetTitle(Control)">
            <summary>
                <para>Gets a regular tooltip's title displayed within the specified control.

</para>
            </summary>
            <param name="control">
		A control whose regular tooltip's title is to be obtained.


            </param>
            <returns>A string representing a regular tooltip's title for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetToolTip(Control)">
            <summary>
                <para>Gets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control whose tooltip should be obtained.


            </param>
            <returns>A string representing a regular tooltip for the control.

</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.GetToolTipIconType(Control)">
            <summary>
                <para>Gets the type of the icon displayed within the specified control's regular tooltip.
</para>
            </summary>
            <param name="control">
		A control whose tooltip's icon type is to be obtained.



            </param>
            <returns>A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon displayed within the specified control's regular tooltip.


</returns>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.HideHint">
            <summary>
                <para>Hides the hint if it is being displayed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.IconSize">
            <summary>
                <para>Gets or sets tooltip icon size.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipIconSize"/> enumerator.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.IconType">
            <summary>
                <para>Gets or sets tooltip icon type.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipIconType"/> enumerator.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ImageIndex">
            <summary>
                <para>Gets or sets the index of an image to be displayed within tooltips.
</para>
            </summary>
            <value>The integer value specifying the index of an image to be displayed within tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ImageList">
            <summary>
                <para>Gets or sets the source of the images that can be displayed within tooltips.
</para>
            </summary>
            <value>An object (an <see cref="T:DevExpress.Utils.ImageCollection"/> or an <see cref="T:System.Windows.Forms.ImageList"/>) that represents the source of images that can be displayed within tooltips.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.InitialDelay">
            <summary>
                <para>Gets or sets the initial tooltip delay in milliseconds.
</para>
            </summary>
            <value>Integer value, specifying initial tooltip delay.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.RemoveClientControl(Control)">
            <summary>
                <para>Disables displaying tooltips for the specified control implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface.
</para>
            </summary>
            <param name="control">
		The control, implementing the <b>DevExpress.Utils.IToolTipControlClient</b> interface, for which the <see cref="T:DevExpress.Utils.ToolTipController"/>'s functionality should be disabled.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ResetAutoPopupDelay">
            <summary>
                <para>Resets the timer which controls when a tooltip's window is hidden.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ReshowDelay">
            <summary>
                <para>Gets or sets the time interval that must pass before another hint is displayed if another hint is currently visible.
</para>
            </summary>
            <value>An integer value specifying the time interval in milliseconds.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Rounded">
            <summary>
                <para>Gets or sets whether the tooltip's corners are rounded.
</para>
            </summary>
            <value><b>true</b> to display hints with rounded corners; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.RoundRadius">
            <summary>
                <para>Gets or sets the radius of the rounded corners of the tooltip window.
</para>
            </summary>
            <value>The radius of the rounded corners.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetSuperTip(Control,SuperToolTip)">
            <summary>
                <para>Associates a <see cref="T:DevExpress.Utils.SuperToolTip"/> object with the specified control. 
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.SuperToolTip"/> object to associate with the control.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetTitle(Control,String)">
            <summary>
                <para>Sets a regular tooltip's title for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set a regular tooltip's title.


            </param>
            <param name="value">
		A string representing a regular tooltip's title.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetToolTip(Control,String)">
            <summary>
                <para>Sets a regular tooltip for the specified control.
</para>
            </summary>
            <param name="control">
		A control for which to set the tooltip.


            </param>
            <param name="value">
		A string representing a regular tooltip's text.


            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.SetToolTipIconType(Control,ToolTipIconType)">
            <summary>
                <para>Sets the type of the icon displayed within the specified control's regular tooltip.

</para>
            </summary>
            <param name="control">
		A control for which the icon type is set.



            </param>
            <param name="value">
		A <see cref="T:DevExpress.Utils.ToolTipIconType"/> value representing the type of the icon that should be displayed within the specified control's regular tooltip.

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ShowBeak">
            <summary>
                <para>Tests whether callout beaks are displayed for hints.
</para>
            </summary>
            <value><b>true</b> if the callout beak is displayed when a hint appears; otherwise, <b>false</b>.
</value>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(ToolTipControllerShowEventArgs,Control)">
            <summary>
                <para>Displays a hint for a control using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying the settings used to display tooltips.

            </param>
            <param name="control">
		The control for which to display the tooltip.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,Control,ToolTipLocation)">
            <summary>
                <para>Displays a hint relative to a specific control.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="control">
		The control for which to display the tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String)">
            <summary>
                <para>Displays a hint relative to the mouse cursor using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,ToolTipLocation)">
            <summary>
                <para>Displays a hint at the specified position relative to the mouse cursor.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the mouse cursor at which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,Point)">
            <summary>
                <para>Displays a hint relative to the specified point using current <see cref="T:DevExpress.Utils.ToolTipController"/> settings

</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="cursorPosition">
		The point relative to which the tooltip should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,ToolTipLocation,Point)">
            <summary>
                <para>Displays a hint at a specified position relative to a specific point.
</para>
            </summary>
            <param name="toolTip">
		The text to display as a tooltip.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified point at which the hint should be displayed.

            </param>
            <param name="cursorPosition">
		The point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(ToolTipControllerShowEventArgs,Point)">
            <summary>
                <para>Displays a hint relative to a specific point using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.


            </param>
            <param name="cursorPosition">
		A point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(ToolTipControllerShowEventArgs)">
            <summary>
                <para>Displays a hint relative to the mouse cursor using specified settings.
</para>
            </summary>
            <param name="eShow">
		A <see cref="T:DevExpress.Utils.ToolTipControllerShowEventArgs"/> object specifying settings for displaying tooltips.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(ToolTipControlInfo)">
            <summary>
                <para>Displays a hint using the specified tooltip information.
</para>
            </summary>
            <param name="info">
		A <see cref="T:DevExpress.Utils.ToolTipControlInfo"/> object containing information for displaying a hint.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,String,Control,ToolTipLocation)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the specified control.
</para>
            </summary>
            <param name="toolTip">
		A string which represents the tooltip's text.

            </param>
            <param name="title">
		A string which represents the tooltip's title.

            </param>
            <param name="control">
		The control to display the tooltip for. 


            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed. 

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,String)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the mouse cursor using the current ToolTipController settings. 

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,String,ToolTipLocation,Point)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the specified point.

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed. 

            </param>
            <param name="cursorPosition">
		A point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,String,Point)">
            <summary>
                <para>Displays a hint with the specified text and title at the specified point using the current ToolTipController settings 

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>
            <param name="cursorPosition">
		A point relative to which the hint should be displayed.

            </param>


        </member>
        <member name="M:DevExpress.Utils.ToolTipController.ShowHint(String,String,ToolTipLocation)">
            <summary>
                <para>Displays a hint with the specified text and title relative to the mouse cursor's position.

</para>
            </summary>
            <param name="toolTip">
		A string that represents a tooltip's text.

            </param>
            <param name="title">
		A string that represents a tooltip's title.

            </param>
            <param name="toolTipLocation">
		The position relative to the specified control at which the tooltip should be displayed. 

            </param>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ShowShadow">
            <summary>
                <para>Gets or sets whether the tooltips are shown shadowed.
</para>
            </summary>
            <value><b>true</b> if the tooltips are shown shadowed; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.Style">
            <summary>
                <para>Gets the appearance settings used to paint the hints of bound controls.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which provides the appearance settings used to paint the hints of bound controls.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ToolTipLocation">
            <summary>
                <para>Gets or sets the tooltip location.
</para>
            </summary>
            <value>The <see cref="T:DevExpress.Utils.ToolTipLocation"/> enumerator.
</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.ToolTipType">
            <summary>
                <para>Gets or sets the type of tooltips displayed by the controller.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipType"/> value that specifies the type of tooltips to be displayed.

</value>


        </member>
        <member name="P:DevExpress.Utils.ToolTipController.UseWindowStyle">
            <summary>
                <para>Obsolete. Gets or sets whether the default style should be used for the hint.
</para>
            </summary>
            <value><b>true</b> if the default style is applied to the hint; <b>false</b> if the <see cref="P:DevExpress.Utils.ToolTipController.Style"/> is used
</value>


        </member>
        <member name="T:DevExpress.LookAndFeel.DefaultLookAndFeel.DefaultLookAndFeel">

            <summary>
                <para>A component providing access to default LookAndFeel settings.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.LookAndFeel.DefaultLookAndFeel.#ctor">
            <summary>
                <para>Creates an instance of the <see cref="T:DevExpress.LookAndFeel.DefaultLookAndFeel"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.LookAndFeel.DefaultLookAndFeel.#ctor(IContainer)">
            <summary>
                <para>Initializes a new instance of the DefaultLookAndFeel class with the specified container.
</para>
            </summary>
            <param name="container">
		A <see cref="T:System.ComponentModel.IContainer"/> that represents the container for the default LookAndFeel object.

            </param>


        </member>
        <member name="P:DevExpress.LookAndFeel.DefaultLookAndFeel.LookAndFeel">
            <summary>
                <para>Gets or sets the <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining default LookAndFeel settings.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object defining default LookAndFeel settings.
</value>


        </member>
        <member name="T:DevExpress.Utils.SuperToolTip.SuperToolTip">

            <summary>
                <para>Represents a tooltip that supports multiple text and image regions.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.#ctor">
            <summary>
                <para>Initializes a new instance of the SuperToolTip class with the default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.Assign(SuperToolTip)">
            <summary>
                <para>Copies the settings and contents of the specified tooltip to the current object.
</para>
            </summary>
            <param name="source">
		A source <see cref="T:DevExpress.Utils.SuperToolTip"/> object.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.Clone">
            <summary>
                <para>Returns a copy of the current object.
</para>
            </summary>
            <returns>A SuperToolTip object which is a copy of the current tooltip.
</returns>


        </member>
        <member name="F:DevExpress.Utils.SuperToolTip.DefaultDistanceBetweenItems">
            <summary>
                <para>The default distance between items. This constant specifies the default value for the <see cref="P:DevExpress.Utils.SuperToolTip.DistanceBetweenItems"/> property.
</para>
            </summary>
            <returns> [To be supplied] </returns>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.DistanceBetweenItems">
            <summary>
                <para>Specifies the distance between tooltip items.
</para>
            </summary>
            <value>An integer which specifies the distance between tooltip items.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.FixedTooltipWidth">
            <summary>
                <para>Gets or sets whether the tooltip's width is fixed or automatically adjusted to fit the tooltip's contents entirely.
</para>
            </summary>
            <value><b>true</b> if the tooltip's width is fixed; <b>false</b> if the tooltip is automatically resized to fit its contents entirely.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.IsEmpty">
            <summary>
                <para>Gets whether the SuperToolTip is empty.
</para>
            </summary>
            <value><b>true</b> if the SuperToolTip doesn't contain any information to display; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.Items">
            <summary>
                <para>Gets the collection of items which constitute the SuperToolTip object.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.ToolTipItemCollection"/> which contains items displayed by the SuperToolTip object.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.LookAndFeel">
            <summary>
                <para>This property is not supported by this class. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.MaxWidth">
            <summary>
                <para>Specifies the tooltip window's maximum width, in pixels.
</para>
            </summary>
            <value>An integer value that specifies the tooltip window's maximum width.
</value>


        </member>
        <member name="P:DevExpress.Utils.SuperToolTip.Padding">
            <summary>
                <para>Gets or sets padding within the SuperToolTip.

</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Padding"/> object that specifies the tooltip's internal spacing characteristics.
</value>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.Setup(SuperToolTipSetupArgs)">
            <summary>
                <para>Creates tooltip items based on the specified setup information.
</para>
            </summary>
            <param name="info">
		A <see cref="T:DevExpress.Utils.SuperToolTipSetupArgs"/> object which contains initialization information.

            </param>


        </member>
        <member name="M:DevExpress.Utils.SuperToolTip.ToString">
            <summary>
                <para>Gets the textual representation of the current SuperToolTip.
</para>
            </summary>
            <returns>A string which specifies the tooltip's textual representation.
</returns>


        </member>
        <member name="T:DevExpress.XtraEditors.XtraUserControl.XtraUserControl">

            <summary>
                <para>Represents an <b>XtraUserControl</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.XtraUserControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraUserControl"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the user control.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the user control's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.BackColor">
            <summary>
                <para>Gets or sets the user control's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the user control's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.Font">
            <summary>
                <para>Gets or sets font settings applied to the control.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object that contains font settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraUserControl.LookAndFeel">
            <summary>
                <para>Provides access to the settings which control the user control's look and feel. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the user control's look and feel.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraUserControl.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraUserControl.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.XtraForm.XtraForm">

            <summary>
                <para>Represents a window or dialog box that makes up an application's user interface.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.XtraForm"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.AllowFormSkin">
            <summary>
                <para>Gets or sets whether the form's title bar and borders are painted using the current skin.
</para>
            </summary>
            <value><b>true</b> if the form's title bar and borders are painted using the current skin; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the form.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the form's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.BackColor">
            <summary>
                <para>Gets or sets the background color of the form's client region. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the background color of the form's client region.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.Font">
            <summary>
                <para>Gets or sets the form's font. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which specifies the form's font. 
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.ForeColor">
            <summary>
                <para>Gets or sets the foreground color of the form's client region. 
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the foreground color of the form's client region.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.XtraForm.LookAndFeel">
            <summary>
                <para>Provides access to the settings that control the look-and-feel of all the DevExpress controls contained within the form.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the look and feel of the controls owned by the form.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraForm.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResetForeColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.XtraForm.ForeColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.ResumeRedraw">
            <summary>
                <para>Resumes painting the form whose painting had been suspended.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.XtraForm.SuspendRedraw">
            <summary>
                <para>Suspends painting the form.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitterControl.SplitterControl">

            <summary>
                <para>Represents a <b>splitter</b> control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.SplitterControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SplitterControl"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitterControl.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the splitter.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the splitter's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitterControl.BackColor">
            <summary>
                <para>Gets or sets the splitter's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the splitter's background color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitterControl.LookAndFeel">
            <summary>
                <para>Provides access to the settings which control the splitter's look and feel. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the splitter's look and feel.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitContainerControl.SplitContainerControl">

            <summary>
                <para>Represent a <b>Split Container</b>.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.SplitContainerControl"/> class.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.BeginInit">
            <summary>
                <para>Starts the split container's initialization. Initialization occurs at runtime.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Controls">
            <summary>
                <para>Gets the collection of controls contained within the split container control.
</para>
            </summary>
            <value>A <see cref="T:System.Windows.Forms.Control.ControlCollection"/> object which represents the collection of controls contained within the split container control.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.EndInit">
            <summary>
                <para>Ends the split container's initialization. 
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.FixedPanel">
            <summary>
                <para>Gets or sets the fixed panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitFixedPanel"/> enumeration value which specifies the fixed panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Horizontal">
            <summary>
                <para>Gets or sets whether the panels are located one after another or one above another.
</para>
            </summary>
            <value><b>true</b> if the panels are located one after another; <b>false</b> if the panels are located one above another.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Panel1">
            <summary>
                <para>Gets the left (or top) panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitGroupPanel"/> object which represents the left (or top) panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.Panel2">
            <summary>
                <para>Gets the right (or bottom) panel.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitGroupPanel"/> object which represents the right (or bottom) panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.PanelVisibility">
            <summary>
                <para>Gets or sets the visibility of the panels.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.SplitPanelVisibility"/> enumeration value which specifies the visibility of panels.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.SplitContainerControl.SetPanelBorderStyle(BorderStyles)">
            <summary>
                <para>Specifies the border style of the panels.
</para>
            </summary>
            <param name="border">
		A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration value specifying the border style of the panels.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.ShowCaption">
            <summary>
                <para>Gets or sets whether the split container's caption is displayed.
</para>
            </summary>
            <value><b>true</b> to display the split container's caption; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.SplitterBounds">
            <summary>
                <para>Gets or sets the splitter's size and location.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the size and location of the splitter.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.SplitContainerControl.SplitterMoved">
            <summary>
                <para>Occurs after the splitter's position has been changed.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.SplitContainerControl.SplitterPosition">
            <summary>
                <para>Gets or sets the splitter's location.
</para>
            </summary>
            <value>An integer value specifying the splitter's current location in pixels from the side of the fixed panel.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.PanelControl.PanelControl">

            <summary>
                <para>Represents a <b>panel</b> control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.PanelControl"/> class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.Appearance">
            <summary>
                <para>Gets the appearance settings used to paint the panel.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the panel's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.AutoScroll">
            <summary>
                <para>Not supported.
</para>
            </summary>
            <value>A Boolean value.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.AutoScrollMargin">
            <summary>
                <para>Not supported.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the height and width of the auto-scroll margin, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.AutoScrollMinSize">
            <summary>
                <para>Not supported.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Size"/> object that represents the minimum height and width of the control's scrollbars, in pixels.

</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.BackColor">
            <summary>
                <para>Gets or sets the panel's background color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the panel's background color. 
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.BeginInit">
            <summary>
                <para>Starts the panel's initialization. Initialization occurs at runtime.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.BorderStyle">
            <summary>
                <para>Gets or sets the panel's border style.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraEditors.Controls.BorderStyles"/> enumeration value specifying the panel's border style.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.CalcBoundsByClient(Graphics,Rectangle)">
            <summary>
                <para>Returns the panel's bounding rectangle, calculated from the bounds of its client region.
</para>
            </summary>
            <param name="graphics">
		A <see cref="T:System.Drawing.Graphics"/> object.

            </param>
            <param name="bounds">
		A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the panel's client region.

            </param>
            <returns>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the panel's bounding rectangle, calculated from the bounds of its client region.
</returns>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.DisplayRectangle">
            <summary>
                <para>Gets the bounds of the panel's client region.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the bounding rectangle of the panel's client region.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.EndInit">
            <summary>
                <para>Ends the panel's initialization.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.Font">
            <summary>
                <para>Gets or sets the panel's font.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Font"/> object which specifies the panel's font.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.ForeColor">
            <summary>
                <para>Gets or sets the panel's foreground color.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Color"/> structure which specifies the panel's foreground color.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.LookAndFeel">
            <summary>
                <para>Provides access to the settings which control the panel's look and feel. 
</para>
            </summary>
            <value>A <see cref="T:DevExpress.LookAndFeel.UserLookAndFeel"/> object whose properties specify the panel's look and feel.
</value>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.ResetBackColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.PanelControl.BackColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraEditors.PanelControl.ResetForeColor">
            <summary>
                <para>Resets the <see cref="P:DevExpress.XtraEditors.PanelControl.ForeColor"/> property back to its default value.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.Text">
            <summary>
                <para>Gets or sets the text associated with the panel control.
</para>
            </summary>
            <value>A string value specifying the text associated with the panel.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.PanelControl.UseCompatibleDrawingMode">
            <summary>
                <para>Gets or sets whether the PanelControl should use the non-default painting mode.

</para>
            </summary>
            <value><b>true</b> if the PanelControl control uses the non-default painting mode; otherwise, <b>false</b>.

</value>


        </member>
        <member name="T:DevExpress.XtraEditors.GroupControl.GroupControl">

            <summary>
                <para>Represents a <b>group</b> control.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.GroupControl.#ctor">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.GroupControl"/> class.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.AppearanceCaption">
            <summary>
                <para>Gets the appearance settings used to paint the group's caption.
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.AppearanceObject"/> object which contains the caption's appearance settings.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.CaptionLocation">
            <summary>
                <para>Gets or sets the location of the group control's caption.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Locations"/> enumeration member which specifies the group caption's location.
</value>


        </member>
        <member name="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption">
            <summary>
                <para>Enables group caption to be custom painted.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupControl.ShowCaption">
            <summary>
                <para>Gets or sets whether the group's caption is displayed.
</para>
            </summary>
            <value><b>true</b> to display the group's caption; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventHandler.GroupCaptionCustomDrawEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventHandler.Invoke(Object,GroupCaptionCustomDrawEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This parameter identifies the group control which raised the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.GroupCaptionCustomDrawEventArgs">

            <summary>
                <para>Provides data for the <see cref="E:DevExpress.XtraEditors.GroupControl.CustomDrawCaption"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.#ctor(GraphicsCache,ObjectPainter,ObjectInfoArgs)">
            <summary>
                <para>Initializes a new instance of the <see cref="T:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs"/> class.
</para>
            </summary>
            <param name="cache">
		A <see cref="T:DevExpress.Utils.Drawing.GraphicsCache"/> object which specifies the storage for the most commonly used pens, fonts and brushes. This value is assigned to the <see cref="P:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.Cache"/> property.

            </param>
            <param name="painter">
		An <see cref="T:DevExpress.Utils.Drawing.ObjectPainter"/> object that provides facilities for painting an element using the default mechanism. This value is assigned to the <see cref="P:DevExpress.XtraEditors.ObjectCustomDrawEventArgs.Painter"/> property.

            </param>
            <param name="info">
		A <see cref="T:DevExpress.Utils.Drawing.ObjectInfoArgs"/> object that contains information about the element being painted. This value is assigned to the <see cref="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.Info"/> property.

            </param>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.CaptionBounds">
            <summary>
                <para>Gets the painted caption's bounding rectangle.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Rectangle"/> structure which represents the painted caption's bounding rectangle.
</value>


        </member>
        <member name="P:DevExpress.XtraEditors.GroupCaptionCustomDrawEventArgs.Info">
            <summary>
                <para>Gets information on the painted group.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.Utils.Drawing.GroupObjectInfoArgs"/> object which provides information about the painted group.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitPanelVisibility.SplitPanelVisibility">

            <summary>
                <para>Lists values that specify the visibility of the panels within a split container.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Both">
            <summary>
                <para>Both <b>Panel1</b> and <b>Panel2</b> are visible.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Panel1">
            <summary>
                <para><b>Panel2</b> is hidden.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitPanelVisibility.Panel2">
            <summary>
                <para><b>Panel1</b> is hidden.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.SplitFixedPanel.SplitFixedPanel">

            <summary>
                <para>Lists values that specify which panel within the split container is fixed.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.SplitFixedPanel.None">
            <summary>
                <para>The panels' widths (or heights) are proportionally changed when a split container is being resized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitFixedPanel.Panel1">
            <summary>
                <para>The width (height if the panels are oriented one above another) of the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.Panel1"/> isn't changed when the split container is resized.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.SplitFixedPanel.Panel2">
            <summary>
                <para>The width (height if the panels are oriented one above another) of the <see cref="P:DevExpress.XtraEditors.SplitContainerControl.Panel2"/> isn't changed when the split container is resized.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.OptionsLayoutGrid.OptionsLayoutGrid">

            <summary>
                <para>Contains options that specify how a control's layout is stored to and restored from storage (a stream, xml file or system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsLayoutGrid class with default settings.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.Assign(BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter.

</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.Columns">
            <summary>
                <para>Contains options that specify how the columns' and bands' settings are stored to and restored from storage (a stream, xml file or sysytem registry).
</para>
            </summary>
            <value>An <see cref="T:DevExpress.Utils.OptionsColumnLayout"/> object that specifies how the columns' and bands' settings are stored to and restored from storage.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsLayoutGrid.Reset">
            <summary>
                <para>Resets all options to their default values.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAllOptions">
            <summary>
                <para>Gets or sets whether all the control's settings (except for the appearance settings and style conditions) are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if all the control's settings are included in the layout when it's saved to storage and these settings are restored when the layout is restored from the storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreAppearance">
            <summary>
                <para>Gets or sets whether the control's appearance settings are also stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's appearance settings are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreDataSettings">
            <summary>
                <para>Gets or sets whether the control's grouping, sorting, filtering settings and summaries are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's grouping, sorting, filtering settings and summaries are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsLayoutGrid.StoreVisualOptions">
            <summary>
                <para>Gets or sets whether the control's visual options are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the control's visual options are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.Utils.OptionsColumnLayout.OptionsColumnLayout">

            <summary>
                <para>Contains options that specify how column specific settings are stored to and restored from storage (a stream, xml file or the system registry).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.OptionsColumnLayout.#ctor">
            <summary>
                <para>Initializes a new instance of the OptionsColumnLayout class with default settings.
</para>
            </summary>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.AddNewColumns">
            <summary>
                <para>Gets or sets whether the columns that exist in the current control but do not exist in a layout when it's restored should be retained.

</para>
            </summary>
            <value><b>true</b> to retain the columns that exist in the current control's layout but don't exist in the layout being restored; <b>false</b> to destroy such columns.

</value>


        </member>
        <member name="M:DevExpress.Utils.OptionsColumnLayout.Assign(BaseOptions)">
            <summary>
                <para>Copies all the settings from the options object passed as the parameter.

</para>
            </summary>
            <param name="options">
		A <see cref="T:DevExpress.Utils.Controls.BaseOptions"/> descendant whose settings are assigned to the current object.

            </param>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.RemoveOldColumns">
            <summary>
                <para>Gets or sets whether the columns that exist in a layout when it's restored but that don't exist in the current control should be discarded or added to the control.

</para>
            </summary>
            <value><b>true</b> to discard the columns that exist in the layout being restored but don't exist in the current control; <b>false</b> to add these columns to the control.

</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAllOptions">
            <summary>
                <para>Gets or sets whether all the settings of a control's columns/bands (except for the appearance settings) are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if all the settings of a control's columns/bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.

</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreAppearance">
            <summary>
                <para>Gets or sets whether the appearance settings of the columns and bands are also stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the appearance settings of the columns and bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="P:DevExpress.Utils.OptionsColumnLayout.StoreLayout">
            <summary>
                <para>Gets or sets whether the position, width and visibility of the columns and bands are stored when the layout is saved to storage and restored when the layout is restored from storage.
</para>
            </summary>
            <value><b>true</b> if the position, width and visibility of columns and bands are included in the layout when it's saved to storage and these settings are restored when the layout is restored from storage; otherwise, <b>false</b>.
</value>


        </member>
        <member name="T:DevExpress.XtraPrinting.IBasePrintable.IBasePrintable">

            <summary>
                <para>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.CreateArea(String,IBrickGraphics)">
            <summary>
                <para>When implemented by a class, creates report elements (bricks) for a specific area.
</para>
            </summary>
            <param name="areaName">
		The name of the report area (section) for which elements should be created.

            </param>
            <param name="graph">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IBrickGraphics"/> interface which is a graphical surface on which report elements are to be drawn.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.Finalize(IPrintingSystem,ILink)">
            <summary>
                <para>When implemented by a class, finalizes the printing of the report. 
</para>
            </summary>
            <param name="ps">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface used to print a control.


            </param>
            <param name="link">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.ILink"/> interface which refers to a control.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.IBasePrintable.Initialize(IPrintingSystem,ILink)">
            <summary>
                <para>When implemented by a class, initializes a control for report creation.
</para>
            </summary>
            <param name="ps">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.IPrintingSystem"/> interface used to print a control.

            </param>
            <param name="link">
		An object implementing the <see cref="T:DevExpress.XtraPrinting.ILink"/> interface which refers to a control.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.PdfDocumentOptions.PdfDocumentOptions">

            <summary>
                <para>Contains options which specify the <b>Document Properties</b> of the created PDF file.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.PdfDocumentOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the PdfDocumentOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfDocumentOptions.Application">
            <summary>
                <para>Gets or sets the name to be added as an Application property of the resulting PDF file.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> which stores an Application name.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PdfDocumentOptions.Assign(PdfDocumentOptions)">
            <summary>
                <para>Copies all the settings from the PdfDocumentOptions object passed as a parameter.

</para>
            </summary>
            <param name="documentOptions">
		A PdfDocumentOptions object whose settings are assigned to the current object. If <b>null</b> (<b>Nothing</b> in Visual Basic), then a <see cref="T:System.ArgumentNullException"/> will be thrown.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfDocumentOptions.Author">
            <summary>
                <para>Gets or sets the name to be added as an Author property of the resulting PDF file.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> which stores an Author name.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.PdfDocumentOptions.Clone">
            <summary>
                <para>Creates a copy of the current PdfDocumentOptions object.
</para>
            </summary>
            <returns>A PdfDocumentOptions object which is a copy of the current object.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfDocumentOptions.Keywords">
            <summary>
                <para>Gets or sets the name to be added as a Keywords property of the resulting PDF file.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> which stores keywords.
</value>


        </member>
        <member name="F:DevExpress.XtraPrinting.PdfDocumentOptions.Producer">
            <summary>
                <para>Contains the value which is embedded as a <b>Producer</b> field into any PDF document created by the XtraPrinting Library. This value is usually equal to "Developer Express Inc. XtraPrinting (tm) v<i>X</i>.<i>Y</i>".
</para>
            </summary>
            <returns>$
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfDocumentOptions.Subject">
            <summary>
                <para>Gets or sets the name to be added as a Subject property of the resulting PDF file.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> which stores a Subject.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.PdfDocumentOptions.Title">
            <summary>
                <para>Gets or sets the name to be added as a Title property of the resulting PDF file.

</para>
            </summary>
            <value>A <see cref="T:System.String"/> which stores a Title.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.StyleIndeterminate.StyleIndeterminate">

            <summary>
                <para>Contains values specifying the display style for the check box when an editor is in an indeterminate state.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.Inactive">
            <summary>
                <para>A check box is drawn inactive (grayed). 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.InactiveChecked">
            <summary>
                <para>A check box is drawn grayed and checked (partially checked). 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.StyleIndeterminate.Unchecked">
            <summary>
                <para>A check box is drawn unchecked. 
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.CsvExportOptions.CsvExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to CSV format.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.CsvExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the CsvExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.CsvExportOptions.#ctor(String,Encoding)">
            <summary>
                <para>Initializes a new instance of the CsvExportOptions class with the specified separator and encoding settings.

</para>
            </summary>
            <param name="separator">
		A <see cref="T:System.String"/> containing symbols which will be used to separate the document's text  elements in the created CSV file. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.TextExportOptionsBase.Separator"/> property.


            </param>
            <param name="encoding">
		A <see cref="T:System.Text.Encoding"/> class descendant specifying the encoding of the created CSV document. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.TextExportOptionsBase.Encoding"/> property.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.MhtExportOptions.MhtExportOptions">

            <summary>
                <para>Contains options which define how a document is exported to MHT format.


</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.MhtExportOptions.#ctor">
            <summary>
                <para>Initializes a new instance of the MhtExportOptions class with the default settings.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerCustomDrawEventHandler.ToolTipControllerCustomDrawEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerCustomDrawEventHandler.Invoke(Object,ToolTipControllerCustomDrawEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.CustomDraw"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This parameter identifies the tooltip controller which raised the event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerCustomDrawEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.XtraPrinting.PrintingSystemCommand.PrintingSystemCommand">

            <summary>
                <para>Specifies the commands which can be executed in the printing system's document preview.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Background">
            <summary>
                <para>Identifies the <b>Background</b> menu item, which is a parent for the <b>FillBackground</b> and <b>Watermark</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystem.SetCommandVisibility"/> method, to hide or show the Background items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ClosePreview">
            <summary>
                <para> Closes the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Customize">
            <summary>
                <para> Invokes the property editor of the component which is about to be printed. Note that this component should implement the <b>IPrintable</b> interface.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.DocumentMap">
            <summary>
                <para> Shows or hides the <b>Document Map</b> on the left side of the preview window. This command shows all the  document map labels (represented via the <see cref="P:DevExpress.XtraPrinting.Document.BookmarkNodes"/> property) of the bricks.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.EditPageHF">
            <summary>
                <para> Invokes the <b>Header/Footer Editor</b> dialog. This dialog is used to insert standard page information into a report's headers and footers.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportCsv">
            <summary>
                <para>Exports a document to a CSV (comma-separated values) file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportFile">
            <summary>
                <para> Exports the current document to a file (a report can be exported to PDF, RTF, HTML, MHT, XLS, TXT, CSV and various image formats).




</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportGraphic">
            <summary>
                <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats).

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportHtm">
            <summary>
                <para>Exports the current document to an HTML file.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportMht">
            <summary>
                <para>Exports the current document to an MHT file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportPdf">
            <summary>
                <para>Exports the current  document to a PDF file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportRtf">
            <summary>
                <para>Exports the current document to an RTF file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportTxt">
            <summary>
                <para>Exports the current document to a TXT file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ExportXls">
            <summary>
                <para>Exports the current document to an XLS file.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.File">
            <summary>
                <para>Identifies the <b>File</b> menu item, which is a parent for the <b>PageSetup</b>, <b>Print</b>, <b>PrintDirect</b>, <b>ExportFile</b> and <b>SendFile</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystem.SetCommandVisibility"/> method, to hide or show the File items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.FillBackground">
            <summary>
                <para> Invokes the <b>Color</b> dialog which allows the background color of the current document to be specified.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Find">
            <summary>
                <para> Invokes the <b>Find</b> dialog in the document's preview. This dialog provides a search dialog which allows end users to search a report for specific text directly in the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.HandTool">
            <summary>
                <para> Invokes or hides the <b>Hand Tool</b> in the document's preview. This tool is used for scrolling the pages of the document being previewed.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Magnifier">
            <summary>
                <para> Invokes the preview magnifier. When the magnifier is activated the mouse cursor resembles a magnifying glass and a click on a preview page zooms in on it. There are two possible values for the magnification level. The first magnification value is always fixed and is equal to 100 %. The other value is calculated so that the entire preview page is visible at once without having to scroll it.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.MultiplePages">
            <summary>
                <para> Shows the layout of the document's preview across multiple pages. Note that if you need to specify a particular number of page rows and columns in a Print Control, the <see cref="M:DevExpress.XtraPrinting.Control.PrintControl.SetPageView"/> method will be useful in this case.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.None">
            <summary>
                <para>Doesn't identify any command. This member is intended for internal use only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayout">
            <summary>
                <para>Identifies the item which is the parent to the <b>PageLayoutContinuous</b> and <b>PageLayoutFacing</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystem.SetCommandVisibility"/> method to hide or show the page layout items from the menu of the <b>Preview Form</b>.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutContinuous">
            <summary>
                <para>Changes the view of the document's preview so that the pages are arranged as a continuous vertical column.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageLayoutFacing">
            <summary>
                <para>Changes the view of the document's preview so that the pages are arranged side-by-side.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageMargins">
            <summary>
                <para>Selects the margin sizes for the entire document. Note that this command is in use in the Ribbon Print Preview Form only.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageOrientation">
            <summary>
                <para>Switches the pages between portrait and landscape layouts. Note that this command is in use in the Ribbon Print Preview Form only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PageSetup">
            <summary>
                <para> Invokes the <b>Page Setup</b> dialog which allows some of the page's settings to be adjusted (orientation, margins, paper size and source). 


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PaperSize">
            <summary>
                <para>Chooses the paper size of the document. Note that this command is in use in the Ribbon Print Preview Form only.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Pointer">
            <summary>
                <para>Shows the mouse pointer, when there is no need to show either the <b>Hand Tool</b>, or the <b>Magnifier</b>.  Note that this command is in use in the Ribbon Print Preview Form only.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Print">
            <summary>
                <para> Invokes the <b>Print</b> dialog for the current document. This dialog allows the printer to be selected, its properties set, the number of copies entered and the range of pages to print to be specified.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.PrintDirect">
            <summary>
                <para> Prints the document preview directly, without any dialogs. This is useful when the printer's settings don't need to be changed before a document is printed. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Scale">
            <summary>
                <para> Stretch or shrink the document to a percentage of its actual size.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendCsv">
            <summary>
                <para>Exports the current document to a CSV (comma-separated values) file and sends it via e-mail.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendFile">
            <summary>
                <para> Exports the document in the preview window, then creates a new e-mail in the default system mailer and attaches the exported document to the e-mail. The exporting format can be specified via the drop-down list.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendGraphic">
            <summary>
                <para>Exports the current document to a graphics file (BMP, EMF, GIF, JPEG, PNG, TIFF, WMF formats) and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendMht">
            <summary>
                <para>Exports the current document to an MHT file and sends it via e-mail.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendPdf">
            <summary>
                <para>Exports the current document to a PDF file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendRtf">
            <summary>
                <para>Exports the current document to an RTF file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendTxt">
            <summary>
                <para>Exports the current document to a TXT file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.SendXls">
            <summary>
                <para>Exports the current document to an XLS file and sends it via e-mail.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowFirstPage">
            <summary>
                <para> Displays the first page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowLastPage">
            <summary>
                <para> Displays the last page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowNextPage">
            <summary>
                <para> Moves to the next page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ShowPrevPage">
            <summary>
                <para> Moves to the previous page in the preview.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.View">
            <summary>
                <para>Identifies the <b>View</b> menu item, which is a parent for the <b>PageLayout</b>, <b>Toolbar</b>, <b>Status Bar</b> and <b>Customize</b> subitems. Use this value as a parameter for the <see cref="M:DevExpress.XtraPrinting.PrintingSystem.SetCommandVisibility"/> method, to hide or show the View items from the menu of the <b>Print Preview</b> form.



</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ViewWholePage">
            <summary>
                <para>Zooms a document in or out so that only one entire page of the document is shown in the preview.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Watermark">
            <summary>
                <para> Invokes the <b>Watermark</b> dialog which can be used to specify either background text or a picture as a document's watermark. Note that a document's watermark can be accessed via the <see cref="P:DevExpress.XtraPrinting.PrintingSystem.Watermark"/> property.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.Zoom">
            <summary>
                <para> Zooms in on a document by one of the predefined zoom factors. They are as follows: 10%, 25%, 50%, 75%, 100%, 150%, 200% and 500%.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomIn">
            <summary>
                <para> Zooms the preview in. Each time this command is performed, the preview gets zoomed in by approximately 10%.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomOut">
            <summary>
                <para> Zooms the preview out.  Each time this command is performed, the preview gets zoomed out by approximately 10%.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToPageWidth">
            <summary>
                <para>Zooms a document in or out as appropriate, so that the width of the current page fits the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTextWidth">
            <summary>
                <para>Zooms a document in or out as appropriate, so that the width of the text in the current page fits the preview window.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToTwoPages">
            <summary>
                <para>Zooms a document in or out as appropriate, so that only two entire pages of the document are shown in the preview.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.PrintingSystemCommand.ZoomToWholePage">
            <summary>
                <para>Zooms a document in or out as appropriate, so that only a single page of the document is shown in the preview.


</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickStringFormat.BrickStringFormat">

            <summary>
                <para>Encapsulates text layout information (such as alignment and line spacing), display manipulations (such as ellipsis insertion and national digit substitution).
</para>
            </summary>

        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(StringFormatFlags,StringAlignment,StringAlignment)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> class instance .
</para>
            </summary>
            <param name="options">
		A <B>StringFormatFlags</B> enumeration value containing formatting information.

            </param>
            <param name="aligment">
		A <B>StringAlignment</B> enumeration value, representing text alignment settings.

            </param>
            <param name="lineAligment">
		A <B>StringAlignment</B> enumeration value, representing line alignment settings.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(StringAlignment,StringAlignment)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified text and line alignment.
</para>
            </summary>
            <param name="aligment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.

            </param>
            <param name="lineAligment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(StringAlignment)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified string alignment.

</para>
            </summary>
            <param name="aligment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(StringFormatFlags)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object with a specific <B>StringFormatFlags</B> enumeration.
</para>
            </summary>
            <param name="options">
		A <B>StringFormatFlags</B> enumeration for a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object. 

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(StringFormat)">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object from an existing <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="sf">
		A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object from which to initialize a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object. 

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor">
            <summary>
                <para>Initializes a new <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(BrickStringFormat,StringAlignment,StringAlignment)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the values of the specified source brick string format. It also uses the specified text and line alignment settings.

</para>
            </summary>
            <param name="source">
		A BrickStringFormat object whose values are used to initialize the item being created.


            </param>
            <param name="alignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.



            </param>
            <param name="lineAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(BrickStringFormat,StringFormatFlags)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the values of the specified source brick string format. It also uses the specified formatting settings.

</para>
            </summary>
            <param name="source">
		A BrickStringFormat object whose values are used to initialize the item being created.

            </param>
            <param name="options">
		A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value that represents formatting settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.


            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(StringAlignment,StringAlignment,StringFormatFlags,HotkeyPrefix,StringTrimming)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the specified text and line alignment, formatting settings, hotkey prefix and trimming mode.

</para>
            </summary>
            <param name="alignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing text alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment"/> property.

            </param>
            <param name="lineAlignment">
		A <see cref="T:System.Drawing.StringAlignment"/> enumeration value representing line alignment settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment"/> property.


            </param>
            <param name="formatFlags">
		A <see cref="T:System.Drawing.StringFormatFlags"/> enumeration value that represents formatting settings. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags"/> property.


            </param>
            <param name="hotkeyPrefix">
		A <see cref="T:System.Drawing.Text.HotkeyPrefix"/> enumeration value representing the hotkey prefix. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.HotkeyPrefix"/> property.

            </param>
            <param name="trimming">
		A <see cref="T:System.Drawing.StringTrimming"/> enumeration value representing the trimming mode. This value is assigned to the <see cref="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming"/> property.

            </param>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.#ctor(BrickStringFormat)">
            <summary>
                <para>Initializes a new instance of the BrickStringFormat class with the values of the specified source brick string format.

</para>
            </summary>
            <param name="source">
		A BrickStringFormat object whose values are used to initialize the item being created.

            </param>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Alignment">
            <summary>
                <para>Gets or sets text alignment information.
</para>
            </summary>
            <value>A <B>StringAlignment</B> enumeration value that specifies text alignment information.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeAlignment(StringAlignment)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="alignment">
		A <B>StringAlignment</B> enumeration value, representing text alignment.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeFormatFlags(StringFormatFlags)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="options">
		A <B>StringFormatFlags</B> enumeration value containing formatting information.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.ChangeLineAlignment(StringAlignment)">
            <summary>
                <para>Returns a <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object cloned from the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <param name="lineAlignment">
		A <B>StringAlignment</B> enumeration value representing line alignment.

            </param>
            <returns>A cloned <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Clone">
            <summary>
                <para>Creates an exact copy of the <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object.
</para>
            </summary>
            <returns>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> object created by this method.
</returns>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Dispose">
            <summary>
                <para>Disposes of the BrickStringFormat object.

</para>
            </summary>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.Equals(Object)">
            <summary>
                <para>Determines whether a specific <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance equals the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance.
</para>
            </summary>
            <param name="obj">
		A <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance against which to compare with the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance.

            </param>
            <returns><B>true</B> if a specific <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance equals the current <see cref="T:DevExpress.XtraPrinting.BrickStringFormat"/> instance; otherwise, <B>false</B>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.FormatFlags">
            <summary>
                <para>Gets or sets a <B>StringFormatFlags</B> enumeration that contains formatting information.
</para>
            </summary>
            <value>A <B>StringFormatFlags</B> enumeration that contains formatting information.
</value>


        </member>
        <member name="M:DevExpress.XtraPrinting.BrickStringFormat.GetHashCode">
            <summary>
                <para>Serves as a hash function suitable for use in hashing algorithms and data structures like a hash table.
</para>
            </summary>
            <returns>Hash code for the current <B>Object</B>.
</returns>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.HotkeyPrefix">
            <summary>
                <para>Gets the <see cref="T:System.Drawing.Text.HotkeyPrefix"/> object for this BrickStringFormat object.
</para>
            </summary>
            <value>A <see cref="T:System.Drawing.Text.HotkeyPrefix"/> enumeration value which represents the hotkey prefix for this BrickStringFormat object.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.LineAlignment">
            <summary>
                <para>Gets or sets line alignment.
</para>
            </summary>
            <value>A <B>StringAlignment</B> enumeration value that represents line alignment information.
</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.PrototypeKind">
            <summary>
                <para>Gets or sets a prototype string format for the current string format.
</para>
            </summary>
            <value>A <see cref="T:DevExpress.XtraPrinting.BrickStringFormatPrototypeKind"/> enumeration value which specifies the prototype string format.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Trimming">
            <summary>
                <para>Gets text trimming mode.

</para>
            </summary>
            <value>A <see cref="T:System.Drawing.StringTrimming"/> enumeration value that specifies text trimming mode.

</value>


        </member>
        <member name="P:DevExpress.XtraPrinting.BrickStringFormat.Value">
            <summary>
                <para>Gets the <B>StringFormat</B> instance representing current text formatting.
</para>
            </summary>
            <value>Current text formatting.
</value>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.CheckStyles.CheckStyles">

            <summary>
                <para>Contains values specifying the look of the check box within a <see cref="T:DevExpress.XtraEditors.CheckEdit"/> control.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Radio">
            <summary>
                <para>A check box element looks like a standard radio button within a check editor. 
<para>
 - when Windows XP Themes are supported;
</para>
 - when Windows XP Themes are not supported.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Standard">
            <summary>
                <para>The default look and feel defined by the control class. 
<para>
 - when Windows XP Themes are supported;
</para>
 - when Windows XP Themes are not supported.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style1">
            <summary>
                <para>Predefined custom style. 
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style10">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style11">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style12">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style13">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style14">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style15">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style16">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style2">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style3">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style4">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style5">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style6">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style7">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style8">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.Style9">
            <summary>
                <para>Predefined custom style. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.CheckStyles.UserDefined">
            <summary>
                <para>Allows a user to embed custom check mark pictures into a check editor.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.XPThemeSupport.XPThemeSupport">

            <summary>
                <para>Contains values specifying whether bound controls is drawn using XP style.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Default">
            <summary>
                <para>If bound control can display or edit data using inplace editors, latter are painted in the same style as its container. Otherwise it is drawn in XP style, if it is supported by a user's system.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Disabled">
            <summary>
                <para>An editor is drawn in Windows Classic style.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.Utils.XPThemeSupport.Enabled">
            <summary>
                <para>An editor is drawn in XP style if it is supported by user's system.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventHandler.ToolTipControllerGetActiveObjectInfoEventHandler">

            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo"/> event.
</para>
            </summary>

        </member>
        <member name="M:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventHandler.Invoke(Object,ToolTipControllerGetActiveObjectInfoEventArgs)">
            <summary>
                <para>Represents a method that will handle the <see cref="E:DevExpress.Utils.ToolTipController.GetActiveObjectInfo"/> event.
</para>
            </summary>
            <param name="sender">
		The event source. This parameter identifies the ToolTip Controller which fires this event.

            </param>
            <param name="e">
		A <see cref="T:DevExpress.Utils.ToolTipControllerGetActiveObjectInfoEventArgs"/> object that contains event data.

            </param>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.ButtonStates.ButtonStates">

            <summary>
                <para>Specifies the state of an <see cref="T:DevExpress.XtraEditors.Controls.EditorButton"/>.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.DeepPush">
            <summary>
                <para>A button is highlighted when mouse crosses the entire button boundaries.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Disabled">
            <summary>
                <para>A button is disabled and does not respond to end-user actions.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Hottrack">
            <summary>
                <para>A button is highlighted when the mouse enters its boundaries.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.None">
            <summary>
                <para>A button is drawn using its default look and feel.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonStates.Push">
            <summary>
                <para>A button is drawn to reflect a pressed state.
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.ButtonPredefines.ButtonPredefines">

            <summary>
                <para>Specifies the surface image of a button.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Close">
            <summary>
                <para>A Close symbol is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Combo">
            <summary>
                <para>A Down-arrow for a combo box is drawn on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Delete">
            <summary>
                <para>A Delete symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Down">
            <summary>
                <para>A Down-arrow is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Ellipsis">
            <summary>
                <para>An Ellipsis symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Glyph">
            <summary>
                <para>A custom bitmap is drawn on the button's surface.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Left">
            <summary>
                <para>A Left-arrow symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Minus">
            <summary>
                <para>A Minus sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.OK">
            <summary>
                <para>An OK sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Plus">
            <summary>
                <para>A Plus sign is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Redo">
            <summary>
                <para>A Redo symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Right">
            <summary>
                <para>A Right-arrow is drawn the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinDown">
            <summary>
                <para>A down-arrow for a spin editor is displayed on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinLeft">
            <summary>
                <para>A left-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinRight">
            <summary>
                <para>A right-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.SpinUp">
            <summary>
                <para>An up-arrow for a spin editor is displayed on the button's surface.
<para>

</para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Undo">
            <summary>
                <para>An Undo symbol is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.ButtonPredefines.Up">
            <summary>
                <para>An Up-arrow is drawn on the button's surface.
<para>

</para>

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraEditors.Controls.BorderStyles.BorderStyles">

            <summary>
                <para>Specifies the style for borders to draw on a <b>Graphics</b> surface.
</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Default">
            <summary>
                <para><para>The style of borders is determined by the current settings of the <b>LookAndFeel</b> object.</para>
For <see cref="T:DevExpress.XtraEditors.Repository.RepositoryItem"/> class for instance, borders are drawn based on settings of the <see cref="P:DevExpress.XtraEditors.Repository.RepositoryItem.LookAndFeel"/> property in this case.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Flat">
            <summary>
                <para><para>Borders are flat.</para>
The image below demonstrates the <b>Flat</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.HotFlat">
            <summary>
                <para><para>Borders are flat. Borders and the client area are highlighted when the mouse pointer is positioned over them.</para>
The image below demonstrates the <b>HotFlat</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.
<para></para>
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.NoBorder">
            <summary>
                <para><para>There are no borders.</para>
The image below demonstrates the <b>NoBorder</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Office2003">
            <summary>
                <para><para>Borders have an Office 2003 style.</para>
<para>The image below demonstrates the <b>Office2003</b> style applied to a <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.</para>
<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Simple">
            <summary>
                <para><para>Borders are flat.</para>
The image below demonstrates the <b>Simple</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.Style3D">
            <summary>
                <para><para>Borders are three-dimensional.</para>
The image below demonstrates the <b>Style3D</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraEditors.Controls.BorderStyles.UltraFlat">
            <summary>
                <para><para>Borders have an Office XP style. Borders and the client area are highlighted when the mouse pointer is positioned over them or they are focused. Otherwise, there are no borders.</para>
The image below demonstrates the <b>UltraFlat</b> style applied to the <see cref="T:DevExpress.XtraEditors.ButtonEdit"/> control.

<para></para>
<para></para>
</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.EncodingType.EncodingType">

            <summary>
                <para>Lists the types of encoding to be used when a document is exported to a Text-based format.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.EncodingType.ASCII">
            <summary>
                <para>A document is exported using the ASCII (7-bit) character set.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.EncodingType.BigEndianUnicode">
            <summary>
                <para>A document is exported using the UTF-16 format with the big-endian byte order.


</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.EncodingType.Default">
            <summary>
                <para>A document is exported using the system's current ANSI code page. 

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.EncodingType.Unicode">
            <summary>
                <para>A document is exported using the UTF-16 format with the little-endian byte order.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.EncodingType.UTF32">
            <summary>
                <para>A document is exported using the UTF-32 format with the little-endian byte order.
</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.EncodingType.UTF7">
            <summary>
                <para>A document is exported using the UTF-7 format.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.EncodingType.UTF8">
            <summary>
                <para>A document is exported using the UTF-8 format.

</para>
            </summary>


        </member>
        <member name="T:DevExpress.XtraPrinting.BrickBorderStyle.BrickBorderStyle">

            <summary>
                <para>Specifies the border style for a brick.

</para>
            </summary>

        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Center">
            <summary>
                <para>The borders are drawn over the contour of the brick's rectangle, so that they are partially inside and outside of the brick.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Inset">
            <summary>
                <para>The borders are drawn inside the brick's rectangle.

</para>
            </summary>


        </member>
        <member name="F:DevExpress.XtraPrinting.BrickBorderStyle.Outset">
            <summary>
                <para>The borders are drawn outside the brick's rectangle.

</para>
            </summary>


        </member>
    </members>
</doc>
