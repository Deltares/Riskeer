// Copyright (C) Stichting Deltares 2016. All rights reserved.
//
// This file is part of Ringtoets.
//
// Ringtoets is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.
//
// All names, logos, and references to "Deltares" are registered trademarks of
// Stichting Deltares and remain full property of Stichting Deltares at all times.
// All rights reserved.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Application.Ringtoets.Storage.DbContext
{
    using System;
    using System.Collections.Generic;
    
    public partial class SurfaceLinePointEntity
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public SurfaceLinePointEntity()
        {
            this.DitchPolderSidePointParentEntity = new HashSet<SurfaceLineEntity>();
            this.DitchDikeSidePointParentEntity = new HashSet<SurfaceLineEntity>();
            this.DikeToeAtRiverPointParentEntity = new HashSet<SurfaceLineEntity>();
            this.DikeToeAtPolderPointParentEntity = new HashSet<SurfaceLineEntity>();
            this.BottomDitchPolderSidePointParentEntity = new HashSet<SurfaceLineEntity>();
            this.BottomDitchDikeSidePointParentEntity = new HashSet<SurfaceLineEntity>();
        }
    
        public long SurfaceLinePointEntityId { get; set; }
        public long SurfaceLineEntityId { get; set; }
        public decimal X { get; set; }
        public decimal Y { get; set; }
        public int Order { get; set; }
        public decimal Z { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SurfaceLineEntity> DitchPolderSidePointParentEntity { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SurfaceLineEntity> DitchDikeSidePointParentEntity { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SurfaceLineEntity> DikeToeAtRiverPointParentEntity { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SurfaceLineEntity> DikeToeAtPolderPointParentEntity { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SurfaceLineEntity> BottomDitchPolderSidePointParentEntity { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SurfaceLineEntity> BottomDitchDikeSidePointParentEntity { get; set; }
        public virtual SurfaceLineEntity SurfaceLineEntity { get; set; }
    }
}
