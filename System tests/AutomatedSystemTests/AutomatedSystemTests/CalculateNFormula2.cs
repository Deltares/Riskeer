///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CalculateNFormula2 recording.
    /// </summary>
    [TestModule("7a5a313f-03e9-4259-a9ba-83be32da5355", ModuleType.Recording, 1)]
    public partial class CalculateNFormula2 : ITestModule
    {
        /// <summary>
        /// Holds an instance of the AutomatedSystemTestsRepository repository.
        /// </summary>
        public static AutomatedSystemTestsRepository repo = AutomatedSystemTestsRepository.Instance;

        static CalculateNFormula2 instance = new CalculateNFormula2();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CalculateNFormula2()
        {
            calculatedN = "";
            lengthParameter = "";
            deltaLParameter = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CalculateNFormula2 Instance
        {
            get { return instance; }
        }

#region Variables

        string _calculatedN;

        /// <summary>
        /// Gets or sets the value of variable calculatedN.
        /// </summary>
        [TestVariable("5ce84dc8-5f13-49e7-a07d-ce6076d55089")]
        public string calculatedN
        {
            get { return _calculatedN; }
            set { _calculatedN = value; }
        }

        string _lengthParameter;

        /// <summary>
        /// Gets or sets the value of variable lengthParameter.
        /// </summary>
        [TestVariable("d88257d3-e0b0-4347-a7ac-d38c9b08e655")]
        public string lengthParameter
        {
            get { return _lengthParameter; }
            set { _lengthParameter = value; }
        }

        string _deltaLParameter;

        /// <summary>
        /// Gets or sets the value of variable deltaLParameter.
        /// </summary>
        [TestVariable("91f5c876-a42c-49ed-9ad8-8b22965ce608")]
        public string deltaLParameter
        {
            get { return _deltaLParameter; }
            set { _deltaLParameter = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            calculatedN = calculateNGroup2Formula();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
