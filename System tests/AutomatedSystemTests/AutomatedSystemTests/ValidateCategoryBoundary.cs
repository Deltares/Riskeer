///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateCategoryBoundary recording.
    /// </summary>
    [TestModule("b8095d4b-9eb5-467b-976f-5811b54836f6", ModuleType.Recording, 1)]
    public partial class ValidateCategoryBoundary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the AutomatedSystemTestsRepository repository.
        /// </summary>
        public static AutomatedSystemTestsRepository repo = AutomatedSystemTestsRepository.Instance;

        static ValidateCategoryBoundary instance = new ValidateCategoryBoundary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateCategoryBoundary()
        {
            expectedBoundary = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateCategoryBoundary Instance
        {
            get { return instance; }
        }

#region Variables

        string _expectedBoundary;

        /// <summary>
        /// Gets or sets the value of variable expectedBoundary.
        /// </summary>
        [TestVariable("74f78223-bbfe-48f3-8b40-2445e6a47468")]
        public string expectedBoundary
        {
            get { return _expectedBoundary; }
            set { _expectedBoundary = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable sectionSubstring.
        /// </summary>
        [TestVariable("7f611ae2-9cdd-49ab-9f5c-3a3d10895d80")]
        public string sectionSubstring
        {
            get { return repo.sectionSubstring; }
            set { repo.sectionSubstring = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable categoryName.
        /// </summary>
        [TestVariable("e76c5155-f1f8-4415-bd13-dde7073c53b6")]
        public string categoryName
        {
            get { return repo.categoryName; }
            set { repo.categoryName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable categorysuffix.
        /// </summary>
        [TestVariable("b8671a42-1c75-4941-b387-69d720e545f8")]
        public string categorysuffix
        {
            get { return repo.categorysuffix; }
            set { repo.categorysuffix = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable boundaryTypeSubstring.
        /// </summary>
        [TestVariable("8f75181e-5620-4184-b263-790e9b45c319")]
        public string boundaryTypeSubstring
        {
            get { return repo.boundaryTypeSubstring; }
            set { repo.boundaryTypeSubstring = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            //Report.Log(ReportLevel.Info, "Invoke action", "Invoking Focus() on item 'RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCell'.", repo.RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCellInfo, new RecordItemIndex(0));
            //repo.RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCell.Focus();
            //Delay.Milliseconds(0);
            
            //Report.Log(ReportLevel.Info, "Invoke action", "Invoking Select() on item 'RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCell'.", repo.RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCellInfo, new RecordItemIndex(1));
            //repo.RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCell.Select();
            //Delay.Milliseconds(0);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCell, false, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleValue=$expectedBoundary) on item 'RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCell'.", repo.RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCellInfo, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.RiskeerMainWindow.DocumentViewContainerUncached.ViewCategoryBoundaries.GenericCategoryBoundaries.GenericCategoryBoundaryCellInfo, "AccessibleValue", expectedBoundary);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
