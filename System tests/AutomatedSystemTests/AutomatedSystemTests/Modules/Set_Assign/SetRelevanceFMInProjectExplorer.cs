///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.Set_Assign
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SetRelevanceFMInProjectExplorer recording.
    /// </summary>
    [TestModule("37154a5a-bed5-4655-91a2-0c5ebc672e77", ModuleType.Recording, 1)]
    public partial class SetRelevanceFMInProjectExplorer : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static SetRelevanceFMInProjectExplorer instance = new SetRelevanceFMInProjectExplorer();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SetRelevanceFMInProjectExplorer()
        {
            substringTrajectName = "";
            substringFMName = "";
            fmShouldBeRelevant = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SetRelevanceFMInProjectExplorer Instance
        {
            get { return instance; }
        }

#region Variables

        string _fmShouldBeRelevant;

        /// <summary>
        /// Gets or sets the value of variable fmShouldBeRelevant.
        /// </summary>
        [TestVariable("6f91cdce-7f0c-42ee-93e0-4a3735497a16")]
        public string fmShouldBeRelevant
        {
            get { return _fmShouldBeRelevant; }
            set { _fmShouldBeRelevant = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable substringFMName.
        /// </summary>
        [TestVariable("1f7734c3-2c4d-4c2c-b8f8-d8bbbf0017be")]
        public string substringFMName
        {
            get { return repo.substringFMName; }
            set { repo.substringFMName = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable substringTrajectName.
        /// </summary>
        [TestVariable("51976da0-b6de-418b-bda5-bc27195d3616")]
        public string substringTrajectName
        {
            get { return repo.substringTrajectName; }
            set { repo.substringTrajectName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "User", substringTrajectName, new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "User", substringFMName, new RecordItemIndex(1));
            
            SetRelevanceFM(repo.RiskeerMainWindow.ProjectExplorerPanel.TrajectNode.GenericFMItemWithSubstringInName.SelfInfo, fmShouldBeRelevant);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
