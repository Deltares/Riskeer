///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace AutomatedSystemTests.Modules.Set_Assign
{
    public partial class SetFMInsideOutsideAssembly
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void SetFMInOutAssembly(RepoItemInfo treeitemInfo, string fmShouldBeInAssembly)
        {
            var fmObjectAdapter = treeitemInfo.CreateAdapter<TreeItem>(true);
            string fmIsCurrentlyInAssembly = fmObjectAdapter.Children.Count==1?"False":"True";
            Report.Info("FM is currently in assembly: " + fmIsCurrentlyInAssembly);
            Report.Info("FM should be in assembly: " + fmShouldBeInAssembly);
            if (fmIsCurrentlyInAssembly==fmShouldBeInAssembly) {
                Report.Info("No action required");
            } else 
            {
                Report.Info("FM being in assembly must be changed");
                fmObjectAdapter.Focus();
                fmObjectAdapter.Click(System.Windows.Forms.MouseButtons.Right);
                repo.ContextMenu.InAssembly.Click();
            }
            
        }
    }
}
