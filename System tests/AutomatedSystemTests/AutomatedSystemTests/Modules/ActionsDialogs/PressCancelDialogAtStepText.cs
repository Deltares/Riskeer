///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.ActionsDialogs
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The PressCancelDialogAtStepText recording.
    /// </summary>
    [TestModule("ad8d58e7-525d-408e-9785-b0c4ab6dd07b", ModuleType.Recording, 1)]
    public partial class PressCancelDialogAtStepText : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static PressCancelDialogAtStepText instance = new PressCancelDialogAtStepText();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public PressCancelDialogAtStepText()
        {
            substringProgressMessageToStopAt = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static PressCancelDialogAtStepText Instance
        {
            get { return instance; }
        }

#region Variables

        string _substringProgressMessageToStopAt;

        /// <summary>
        /// Gets or sets the value of variable substringProgressMessageToStopAt.
        /// </summary>
        [TestVariable("70ae10b6-af9c-48bd-ab45-2033098501e7")]
        public string substringProgressMessageToStopAt
        {
            get { return _substringProgressMessageToStopAt; }
            set { _substringProgressMessageToStopAt = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Screenshot(ReportLevel.Info, "User", "", repo.ActivityProgressDialog.Self, false, new RecordItemIndex(0));
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 30m for the attribute 'Text' to contain the specified value $substringProgressMessageToStopAt. Associated repository item: 'ActivityProgressDialog.LabelActivityStepCounter'", repo.ActivityProgressDialog.LabelActivityStepCounterInfo, new RecordItemIndex(1));
            repo.ActivityProgressDialog.LabelActivityStepCounterInfo.WaitForAttributeContains(1800000, "Text", substringProgressMessageToStopAt);
            
            Report.Screenshot(ReportLevel.Info, "User", "", repo.ActivityProgressDialog.Self, false, new RecordItemIndex(2));
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ActivityProgressDialog.ButtonCancel' at Center.", repo.ActivityProgressDialog.ButtonCancelInfo, new RecordItemIndex(3));
            repo.ActivityProgressDialog.ButtonCancel.Click();
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to not exist. Associated repository item: 'ActivityProgressDialog'", repo.ActivityProgressDialog.SelfInfo, new ActionTimeout(5000), new RecordItemIndex(4));
            repo.ActivityProgressDialog.SelfInfo.WaitForNotExists(5000);
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 500ms.", new RecordItemIndex(5));
            Delay.Duration(500, false);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
