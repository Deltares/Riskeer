///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.ActionsDocumentView
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateFMAssessmentLabelAndProbabilityInResultView recording.
    /// </summary>
    [TestModule("778be806-02a6-4d3b-92ce-fe995369ab6d", ModuleType.Recording, 1)]
    public partial class ValidateFMAssessmentLabelAndProbabilityInResultView : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static ValidateFMAssessmentLabelAndProbabilityInResultView instance = new ValidateFMAssessmentLabelAndProbabilityInResultView();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateFMAssessmentLabelAndProbabilityInResultView()
        {
            expectedFMAssesmentLabel = "";
            expectedFMAssesmentProbability = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateFMAssessmentLabelAndProbabilityInResultView Instance
        {
            get { return instance; }
        }

#region Variables

        string _expectedFMAssesmentLabel;

        /// <summary>
        /// Gets or sets the value of variable expectedFMAssesmentLabel.
        /// </summary>
        [TestVariable("875ee1b7-eb07-4532-8192-60e4f44b7cfa")]
        public string expectedFMAssesmentLabel
        {
            get { return _expectedFMAssesmentLabel; }
            set { _expectedFMAssesmentLabel = value; }
        }

        string _expectedFMAssesmentProbability;

        /// <summary>
        /// Gets or sets the value of variable expectedFMAssesmentProbability.
        /// </summary>
        [TestVariable("1f9f18e7-7e25-45be-a927-8906d1000322")]
        public string expectedFMAssesmentProbability
        {
            get { return _expectedFMAssesmentProbability; }
            set { _expectedFMAssesmentProbability = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleName=$expectedFMAssesmentProbability) on item 'RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.FM_ResultView.FailureProbabilityFM'.", repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.FM_ResultView.FailureProbabilityFMInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.FM_ResultView.FailureProbabilityFMInfo, "AccessibleName", expectedFMAssesmentProbability);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
