///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.Calculation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CalculateCategoryBoundary recording.
    /// </summary>
    [TestModule("b235cebd-3495-47c7-96d9-f82c3092f4cb", ModuleType.Recording, 1)]
    public partial class CalculateCategoryBoundary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static CalculateCategoryBoundary instance = new CalculateCategoryBoundary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CalculateCategoryBoundary()
        {
            calculatedCategoryBoundary = "";
            signalingValueText = "";
            lowerLimitText = "";
            contributionText = "";
            parameterNText = "";
            categorySuffix = "";
            categoryName = "";
            boundaryType = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CalculateCategoryBoundary Instance
        {
            get { return instance; }
        }

#region Variables

        string _calculatedCategoryBoundary;

        /// <summary>
        /// Gets or sets the value of variable calculatedCategoryBoundary.
        /// </summary>
        [TestVariable("16e50af2-562e-44a8-990b-c5568f64a537")]
        public string calculatedCategoryBoundary
        {
            get { return _calculatedCategoryBoundary; }
            set { _calculatedCategoryBoundary = value; }
        }

        string _signalingValueText;

        /// <summary>
        /// Gets or sets the value of variable signalingValueText.
        /// </summary>
        [TestVariable("9b47e300-8808-473e-a46a-b2091672dbb4")]
        public string signalingValueText
        {
            get { return _signalingValueText; }
            set { _signalingValueText = value; }
        }

        string _lowerLimitText;

        /// <summary>
        /// Gets or sets the value of variable lowerLimitText.
        /// </summary>
        [TestVariable("9c0297fc-a6f9-4b34-b9da-205c21fac4e4")]
        public string lowerLimitText
        {
            get { return _lowerLimitText; }
            set { _lowerLimitText = value; }
        }

        string _contributionText;

        /// <summary>
        /// Gets or sets the value of variable contributionText.
        /// </summary>
        [TestVariable("3b08541b-e356-4de9-93a9-02a963944915")]
        public string contributionText
        {
            get { return _contributionText; }
            set { _contributionText = value; }
        }

        string _parameterNText;

        /// <summary>
        /// Gets or sets the value of variable parameterNText.
        /// </summary>
        [TestVariable("6ff9b730-3222-46fb-9471-57195f388715")]
        public string parameterNText
        {
            get { return _parameterNText; }
            set { _parameterNText = value; }
        }

        string _boundaryType;

        /// <summary>
        /// Gets or sets the value of variable boundaryType.
        /// </summary>
        [TestVariable("78b35dc6-a224-4dc7-992a-f9b42e96fbaa")]
        public string boundaryType
        {
            get { return _boundaryType; }
            set { _boundaryType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable categorySuffix.
        /// </summary>
        [TestVariable("3f59ffa1-9268-4020-89db-834b5121cca0")]
        public string categorySuffix
        {
            get { return repo.categorysuffix; }
            set { repo.categorysuffix = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable categoryName.
        /// </summary>
        [TestVariable("8a30822a-a8b0-4fa7-b364-eee06359becc")]
        public string categoryName
        {
            get { return repo.categoryName; }
            set { repo.categoryName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            calculatedCategoryBoundary = CalculateSingleCategoryBoundary();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
