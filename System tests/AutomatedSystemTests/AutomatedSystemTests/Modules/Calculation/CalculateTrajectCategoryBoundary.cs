///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.Calculation
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The CalculateTrajectCategoryBoundary recording.
    /// </summary>
    [TestModule("32a3407b-7f73-4eaf-903a-c752160bcebd", ModuleType.Recording, 1)]
    public partial class CalculateTrajectCategoryBoundary : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static CalculateTrajectCategoryBoundary instance = new CalculateTrajectCategoryBoundary();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public CalculateTrajectCategoryBoundary()
        {
            calculatedCategoryBoundary = "";
            signalingValueText = "";
            lowerLimitText = "";
            categoryName = "";
            boundaryType = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static CalculateTrajectCategoryBoundary Instance
        {
            get { return instance; }
        }

#region Variables

        string _calculatedCategoryBoundary;

        /// <summary>
        /// Gets or sets the value of variable calculatedCategoryBoundary.
        /// </summary>
        [TestVariable("cc714625-3f6f-49aa-9a70-5aa884b5d71d")]
        public string calculatedCategoryBoundary
        {
            get { return _calculatedCategoryBoundary; }
            set { _calculatedCategoryBoundary = value; }
        }

        string _signalingValueText;

        /// <summary>
        /// Gets or sets the value of variable signalingValueText.
        /// </summary>
        [TestVariable("7e3f45c6-8984-4ac1-9ac6-46dd6c34fec6")]
        public string signalingValueText
        {
            get { return _signalingValueText; }
            set { _signalingValueText = value; }
        }

        string _lowerLimitText;

        /// <summary>
        /// Gets or sets the value of variable lowerLimitText.
        /// </summary>
        [TestVariable("14d25f92-b43e-4e21-80e5-251c265ae43d")]
        public string lowerLimitText
        {
            get { return _lowerLimitText; }
            set { _lowerLimitText = value; }
        }

        string _boundaryType;

        /// <summary>
        /// Gets or sets the value of variable boundaryType.
        /// </summary>
        [TestVariable("66a64b21-f119-4f42-b24b-cf9c41739492")]
        public string boundaryType
        {
            get { return _boundaryType; }
            set { _boundaryType = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable categoryName.
        /// </summary>
        [TestVariable("c7d869d1-e1dd-484c-9ba5-53ffaaed18de")]
        public string categoryName
        {
            get { return repo.categoryName; }
            set { repo.categoryName = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            calculatedCategoryBoundary = CalculateSingleCategoryBoundary();
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
