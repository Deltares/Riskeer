///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.ActionsContextMenu
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The SpecifyFileToImportMergeProject recording.
    /// </summary>
    [TestModule("2b53940f-3568-41dc-aabc-7f0b5a0af314", ModuleType.Recording, 1)]
    public partial class SpecifyFileToImportMergeProject : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static SpecifyFileToImportMergeProject instance = new SpecifyFileToImportMergeProject();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public SpecifyFileToImportMergeProject()
        {
            fileName = "";
            scriptOutputPath = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static SpecifyFileToImportMergeProject Instance
        {
            get { return instance; }
        }

#region Variables

        string _fileName;

        /// <summary>
        /// Gets or sets the value of variable fileName.
        /// </summary>
        [TestVariable("28d37ace-d02d-48e5-bb3c-18c756645759")]
        public string fileName
        {
            get { return _fileName; }
            set { _fileName = value; }
        }

        string _scriptOutputPath;

        /// <summary>
        /// Gets or sets the value of variable scriptOutputPath.
        /// </summary>
        [TestVariable("5de67da8-b3f9-49f7-b419-6a8f9c36ca5f")]
        public string scriptOutputPath
        {
            get { return _scriptOutputPath; }
            set { _scriptOutputPath = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Apps}'.", new RecordItemIndex(0));
            Keyboard.Press("{Apps}");
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 100ms.", new RecordItemIndex(1));
            Delay.Duration(100, false);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'ContextMenu.Importeren' at Center.", repo.ContextMenu.ImporterenInfo, new RecordItemIndex(2));
            repo.ContextMenu.Importeren.Click();
            
            AddWorkingDirectoryToFileNameIfRelativeFileName();
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute Text to '$fileName' on item 'OpenDialog.FileNameField'.", repo.OpenDialog.FileNameFieldInfo, new RecordItemIndex(4));
            repo.OpenDialog.FileNameField.Element.SetAttributeValue("Text", fileName);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'OpenDialog.ButtonOpen' at Center.", repo.OpenDialog.ButtonOpenInfo, new RecordItemIndex(5));
            repo.OpenDialog.ButtonOpen.Click();
            
            Report.Log(ReportLevel.Info, "Delay", "Waiting for 100ms.", new RecordItemIndex(6));
            Delay.Duration(100, false);
            
            Report.Log(ReportLevel.Info, "Wait", "Waiting 5s to not exist. Associated repository item: 'ActivityProgressDialog.ButtonCancel'", repo.ActivityProgressDialog.ButtonCancelInfo, new ActionTimeout(5000), new RecordItemIndex(7));
            repo.ActivityProgressDialog.ButtonCancelInfo.WaitForNotExists(5000);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
