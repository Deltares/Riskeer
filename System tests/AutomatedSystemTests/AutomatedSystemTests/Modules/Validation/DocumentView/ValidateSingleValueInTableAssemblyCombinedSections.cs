///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.Validation.DocumentView
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateSingleValueInTableAssemblyCombinedSections recording.
    /// </summary>
    [TestModule("d0701ab4-190e-4120-9a9a-54b9e846f336", ModuleType.Recording, 1)]
    public partial class ValidateSingleValueInTableAssemblyCombinedSections : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static ValidateSingleValueInTableAssemblyCombinedSections instance = new ValidateSingleValueInTableAssemblyCombinedSections();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateSingleValueInTableAssemblyCombinedSections()
        {
            expectedValue = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateSingleValueInTableAssemblyCombinedSections Instance
        {
            get { return instance; }
        }

#region Variables

        string _expectedValue;

        /// <summary>
        /// Gets or sets the value of variable expectedValue.
        /// </summary>
        [TestVariable("7959e868-1ed0-4f86-9d41-4db494a6da8e")]
        public string expectedValue
        {
            get { return _expectedValue; }
            set { _expectedValue = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable indexRow.
        /// </summary>
        [TestVariable("201b1d21-866e-4c9e-bf76-93ca440565ea")]
        public string indexRow
        {
            get { return repo.indexRow; }
            set { repo.indexRow = value; }
        }

        /// <summary>
        /// Gets or sets the value of variable substringColumnHeader.
        /// </summary>
        [TestVariable("82c7fabd-024c-4cd6-bf76-46e72cb40281")]
        public string substringColumnHeader
        {
            get { return repo.substringColumnHeader; }
            set { repo.substringColumnHeader = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$expectedValue) on item 'RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainer.AssemblySectionsView.Table.GenericCell'.", repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainer.AssemblySectionsView.Table.GenericCellInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainer.AssemblySectionsView.Table.GenericCellInfo, "Text", expectedValue);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
