///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// Your custom recording code should go in this file.
// The designer will only add methods to this file, so your custom code won't be overwritten.
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Repository;
using Ranorex.Core.Testing;

namespace AutomatedSystemTests.Modules.Validation.DocumentView
{
    public partial class ValidateFMRelevanceInFMCView
    {
        /// <summary>
        /// This method gets called right after the recording has been started.
        /// It can be used to execute recording specific initialization code.
        /// </summary>
        private void Init()
        {
            // Your recording specific initialization code goes here.
        }

        public void ValidateFMinFMCView(RepoItemInfo cellInfo, string expectedRelevance)
        {
            string currentStates = cellInfo.FindAdapter<Cell>().As<Accessible>().State.ToString();
            var isCurrentlyRelevant = (currentStates.IndexOf("Checked") != -1)?"True":"False";
            Report.Log(ReportLevel.Info, "Info", "Current relevance is " + isCurrentlyRelevant + ".", cellInfo);
            Report.Log(ReportLevel.Info, "Info", "Expected relevance is " + expectedRelevance + ".", cellInfo);
            Validate.AreEqual(isCurrentlyRelevant, expectedRelevance);
        }

    }
}
