///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.Validation.DocumentView
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidateSummaryValuesAssemblyTrajectView recording.
    /// </summary>
    [TestModule("18ea53f5-f6f7-4204-952e-dfe48e0f31ac", ModuleType.Recording, 1)]
    public partial class ValidateSummaryValuesAssemblyTrajectView : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static ValidateSummaryValuesAssemblyTrajectView instance = new ValidateSummaryValuesAssemblyTrajectView();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidateSummaryValuesAssemblyTrajectView()
        {
            expectedSecurityAssessment = "";
            expectedAssessmentLabelGroups1And2 = "";
            expectedAssessmentProbabilityGroups1And2 = "";
            expectedAssessmentGroups3And4 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidateSummaryValuesAssemblyTrajectView Instance
        {
            get { return instance; }
        }

#region Variables

        string _expectedSecurityAssessment;

        /// <summary>
        /// Gets or sets the value of variable expectedSecurityAssessment.
        /// </summary>
        [TestVariable("3ba6c693-3923-47b2-834a-927b69bb0a7e")]
        public string expectedSecurityAssessment
        {
            get { return _expectedSecurityAssessment; }
            set { _expectedSecurityAssessment = value; }
        }

        string _expectedAssessmentLabelGroups1And2;

        /// <summary>
        /// Gets or sets the value of variable expectedAssessmentLabelGroups1And2.
        /// </summary>
        [TestVariable("fd984f83-62fe-4074-b5f7-1f932aa489a2")]
        public string expectedAssessmentLabelGroups1And2
        {
            get { return _expectedAssessmentLabelGroups1And2; }
            set { _expectedAssessmentLabelGroups1And2 = value; }
        }

        string _expectedAssessmentProbabilityGroups1And2;

        /// <summary>
        /// Gets or sets the value of variable expectedAssessmentProbabilityGroups1And2.
        /// </summary>
        [TestVariable("1f22f6bc-3385-41b3-8270-bc2a8f39f954")]
        public string expectedAssessmentProbabilityGroups1And2
        {
            get { return _expectedAssessmentProbabilityGroups1And2; }
            set { _expectedAssessmentProbabilityGroups1And2 = value; }
        }

        string _expectedAssessmentGroups3And4;

        /// <summary>
        /// Gets or sets the value of variable expectedAssessmentGroups3And4.
        /// </summary>
        [TestVariable("2662c8f9-bdfa-4112-b481-74749dea43f2")]
        public string expectedAssessmentGroups3And4
        {
            get { return _expectedAssessmentGroups3And4; }
            set { _expectedAssessmentGroups3And4 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 0;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 0.00;

            Init();

            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$expectedSecurityAssessment) on item 'RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.SecurityAssessment'.", repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.SecurityAssessmentInfo, new RecordItemIndex(0));
            Validate.AttributeEqual(repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.SecurityAssessmentInfo, "Text", expectedSecurityAssessment);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleName=$expectedAssessmentLabelGroups1And2) on item 'RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentLabelGroups1And2'.", repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentLabelGroups1And2Info, new RecordItemIndex(1));
            Validate.AttributeEqual(repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentLabelGroups1And2Info, "AccessibleName", expectedAssessmentLabelGroups1And2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (AccessibleName=$expectedAssessmentProbabilityGroups1And2) on item 'RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentProbabilityGroups1And2'.", repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentProbabilityGroups1And2Info, new RecordItemIndex(2));
            Validate.AttributeEqual(repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentProbabilityGroups1And2Info, "AccessibleName", expectedAssessmentProbabilityGroups1And2);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating AttributeEqual (Text=$expectedAssessmentGroups3And4) on item 'RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentGroups3And4'.", repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentGroups3And4Info, new RecordItemIndex(3));
            Validate.AttributeEqual(repo.RiskeerMainWindow.ContainerMultipleViews.DocumentViewContainerUncached.AssemblyResult.Summary.AssessmentGroups3And4Info, "Text", expectedAssessmentGroups3And4);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
