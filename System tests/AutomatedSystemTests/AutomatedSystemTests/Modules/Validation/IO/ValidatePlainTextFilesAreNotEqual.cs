///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace AutomatedSystemTests.Modules.Validation.IO
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The ValidatePlainTextFilesAreNotEqual recording.
    /// </summary>
    [TestModule("3dce05d3-19c6-41db-80de-b19fe30c3824", ModuleType.Recording, 1)]
    public partial class ValidatePlainTextFilesAreNotEqual : ITestModule
    {
        /// <summary>
        /// Holds an instance of the global::AutomatedSystemTests.AutomatedSystemTestsRepository repository.
        /// </summary>
        public static global::AutomatedSystemTests.AutomatedSystemTestsRepository repo = global::AutomatedSystemTests.AutomatedSystemTestsRepository.Instance;

        static ValidatePlainTextFilesAreNotEqual instance = new ValidatePlainTextFilesAreNotEqual();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public ValidatePlainTextFilesAreNotEqual()
        {
            filePath1 = "";
            filePath2 = "";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static ValidatePlainTextFilesAreNotEqual Instance
        {
            get { return instance; }
        }

#region Variables

        string _filePath1;

        /// <summary>
        /// Gets or sets the value of variable filePath1.
        /// </summary>
        [TestVariable("b74b7217-45e6-4e66-a708-eabee78946ea")]
        public string filePath1
        {
            get { return _filePath1; }
            set { _filePath1 = value; }
        }

        string _filePath2;

        /// <summary>
        /// Gets or sets the value of variable filePath2.
        /// </summary>
        [TestVariable("33ea839d-57e2-4e7f-b638-02738f70f01a")]
        public string filePath2
        {
            get { return _filePath2; }
            set { _filePath2 = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", global::Ranorex.Core.Constants.CodeGenVersion)]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 20;
            Delay.SpeedFactor = 1.00;

            Init();

            Ranorex.AutomationHelpers.UserCodeCollections.FileLibrary.ValidateFilesTextNotEqual(filePath1, filePath2);
            Delay.Milliseconds(0);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
