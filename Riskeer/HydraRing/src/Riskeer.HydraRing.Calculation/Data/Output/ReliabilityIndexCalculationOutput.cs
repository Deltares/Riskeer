// Copyright (C) Stichting Deltares and State of the Netherlands 2024. All rights reserved.
//
// This file is part of Riskeer.
//
// Riskeer is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.
//
// All names, logos, and references to "Deltares" are registered trademarks of
// Stichting Deltares and remain full property of Stichting Deltares at all times.
// All rights reserved.

namespace Riskeer.HydraRing.Calculation.Data.Output
{
    /// <summary>
    /// Container of all relevant output generated by Hydra-Ring calculations that
    /// iterate towards a reliability index.
    /// </summary>
    public class ReliabilityIndexCalculationOutput
    {
        /// <summary>
        /// Creates a new instance of the <see cref="ReliabilityIndexCalculationOutput"/> class.
        /// </summary>
        /// <param name="result">The result corresponding to <paramref name="calculatedReliabilityIndex"/>.</param>
        /// <param name="calculatedReliabilityIndex">The actual reliability index that was reached.</param>
        public ReliabilityIndexCalculationOutput(double result, double calculatedReliabilityIndex)
        {
            Result = result;
            CalculatedReliabilityIndex = calculatedReliabilityIndex;
        }

        /// <summary>
        /// Gets the result corresponding to <see cref="CalculatedReliabilityIndex"/>.
        /// </summary>
        public double Result { get; }

        /// <summary>
        /// Gets the actual reliability index that was reached.
        /// </summary>
        public double CalculatedReliabilityIndex { get; }
    }
}