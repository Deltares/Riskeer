<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssemblyErrorMessageCreator_SignalingLimitOutOfRange" xml:space="preserve">
    <value>Signaleringskans moet in het bereik [0,1] liggen.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_LowerLimitOutOfRange" xml:space="preserve">
    <value>Ondergrens moet in het bereik [0,1] liggen.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_FailureProbabilityMarginOutOfRange" xml:space="preserve">
    <value>Faalkansruimte moet in het bereik [0,1] liggen.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_LengthEffectFactorOutOfRange" xml:space="preserve">
    <value>Lengte-effect factor moet minimaal 1 zijn.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_SectionLengthOutOfRange" xml:space="preserve">
    <value>De trajectlengte moet groter zijn dan 0 [m].</value>
  </data>
  <data name="AssemblyErrorMessageCreator_SignalingLimitAboveLowerLimit" xml:space="preserve">
    <value>De signaleringskans moet kleiner zijn dan de ondergrens.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_PsigDsnAbovePsig" xml:space="preserve">
    <value>Berekende signaleringskans per doorsnede is groter dan de signaleringskans van het traject.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_PlowDsnAbovePlow" xml:space="preserve">
    <value>Berekende ondergrens per doorsnede is groter dan de ondergrens van het traject.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_LowerLimitIsAboveUpperLimit" xml:space="preserve">
    <value>De categoriebovengrens moet boven de categorieondergrens liggen.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_CategoryLowerLimitOutOfRange" xml:space="preserve">
    <value>Categoriebovengrens moet in het bereik [0,1] liggen.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_CategoryUpperLimitOutOfRange" xml:space="preserve">
    <value>Categorieondergrens moet in het bereik [0,1] liggen.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_TranslateAssessmentInvalidInput" xml:space="preserve">
    <value>Er is een ongeldig resultaat gespecificeerd voor de gebruikte methode.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_ValueMayNotBeNull" xml:space="preserve">
    <value>Er is ongeldige invoer gedefinieerd voor de gebruikte methode.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_CategoryNotAllowed" xml:space="preserve">
    <value>Het specificeren van een toetsoordeel voor deze categorie is niet mogelijk.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_DoesNotComplyAfterComply" xml:space="preserve">
    <value>Een lagere categorie moet als voldoende worden aangemerkt indien het vak aan een hogere categorie voldoet.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_FailureMechanismSectionLengthInvalid" xml:space="preserve">
    <value>Gezamenlijke lengte van alle deelvakken moet gelijk zijn aan de trajectlengte.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_FailureMechanismSectionSectionStartEndInvalid" xml:space="preserve">
    <value>De lengte van een berekende deelvak kon niet goed worden bepaald.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_FailureProbabilityOutOfRange" xml:space="preserve">
    <value>De gespecificeerde kans moet in het bereik [0,1] liggen.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_InputNotTheSameType" xml:space="preserve">
    <value>De resultaten voor alle vakken moeten allen wel of geen kansspecificatie bevatten.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_NoSectionsImported" xml:space="preserve">
    <value>Er moet een vakindeling zijn geïmporteerd.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_CommonFailureMechanismSectionsNotConsecutive" xml:space="preserve">
    <value>Alle (deel)vakken moeten minimaal een lengte hebben van 0.01 [m].</value>
  </data>
  <data name="AssemblyErrorMessageCreator_RequestedPointOutOfRange" xml:space="preserve">
    <value>De gespecificeerde resultaten voor een of meerdere toetssporen dekken niet de volledige lengte van het traject.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_GenericErrorMessage" xml:space="preserve">
    <value>Er is een onverwachte fout opgetreden tijdens het assembleren.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_CommonFailureMechanismSectionsInvalid" xml:space="preserve">
    <value>Ieder toetsspoor in de assemblage moet een vakindeling geïmporteerd hebben.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_SectionsWithoutCategory" xml:space="preserve">
    <value>Er zijn een of meerdere vakindelingen gevonden die geen categorie hebben.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_GetErrorMessage_InvalidCategoryLimits" xml:space="preserve">
    <value>De categoriegrenzen zijn niet aaneengesloten en spannen niet de volledige faalkansruimte.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_EmptyResultsList" xml:space="preserve">
    <value>Er ontbreekt invoer voor de assemblage rekenmodule waardoor de assemblage niet uitgevoerd kan worden.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_ProfileProbabilityGreaterThanSectionProbability" xml:space="preserve">
    <value>De faalkans per vak moet groter of gelijk zijn aan de faalkans per doorsnede.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_ErrorConstructingErrorMessage" xml:space="preserve">
    <value>Er is een onverwachte fout opgetreden.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_Cannot_assemble_with_dominant_category" xml:space="preserve">
    <value>Er zijn een of meerdere vakken met duidingsklasse 'Dominant'. Dit kan niet verder geassembleerd worden.</value>
  </data>
  <data name="AssemblyErrorMessageCreator_All_sections_must_have_a_result" xml:space="preserve">
    <value>Alle vakken moeten een resultaat hebben.</value>
  </data>
</root>